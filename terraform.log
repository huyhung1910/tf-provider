2020/07/30 10:57:00 [INFO] Terraform version: 0.12.9  
2020/07/30 10:57:00 [INFO] Go runtime version: go1.13
2020/07/30 10:57:00 [INFO] CLI args: []string{"/usr/local/bin/terraform", "init"}
2020/07/30 10:57:00 [DEBUG] Attempting to open CLI config file: /Users/hung/.terraformrc
2020/07/30 10:57:00 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2020/07/30 10:57:00 [INFO] CLI command args: []string{"init"}
2020/07/30 10:57:00 [TRACE] Meta.Backend: no config given or present on disk, so returning nil config
2020/07/30 10:57:00 [TRACE] Meta.Backend: backend has not previously been initialized in this working directory
2020/07/30 10:57:00 [DEBUG] New state was assigned lineage "9c82c2b1-4f8b-eb5a-6b1e-6f1a6f37cb9c"
2020/07/30 10:57:00 [TRACE] Meta.Backend: using default local state only (no backend configuration, and no existing initialized backend)
2020/07/30 10:57:00 [TRACE] Meta.Backend: instantiated backend of type <nil>
2020/07/30 10:57:00 [DEBUG] checking for provider in "."
2020/07/30 10:57:00 [WARN] found legacy provider "terraform-provider-bizfly"
2020/07/30 10:57:00 [DEBUG] checking for provider in "/usr/local/bin"
2020/07/30 10:57:00 [DEBUG] checking for provider in ".terraform/plugins/darwin_amd64"
2020/07/30 10:57:00 [DEBUG] found valid plugin: "bizfly", "0.0.0", "/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly"
2020/07/30 10:57:00 [DEBUG] checking for provisioner in "."
2020/07/30 10:57:00 [DEBUG] checking for provisioner in "/usr/local/bin"
2020/07/30 10:57:00 [DEBUG] checking for provisioner in ".terraform/plugins/darwin_amd64"
2020/07/30 10:57:00 [TRACE] Meta.Backend: backend <nil> does not support operations, so wrapping it in a local backend
2020/07/30 10:57:00 [TRACE] backend/local: state manager for workspace "default" will:
 - read initial snapshot from terraform.tfstate
 - write new snapshots to terraform.tfstate
 - create any backup at terraform.tfstate.backup
2020/07/30 10:57:00 [TRACE] statemgr.Filesystem: reading initial snapshot from terraform.tfstate
2020/07/30 10:57:00 [TRACE] statemgr.Filesystem: read snapshot with lineage "8e1934d5-1d8f-e9a8-58e8-6c54c3aa209a" serial 1
2020/07/30 10:57:00 [DEBUG] checking for provider in "."
2020/07/30 10:57:00 [WARN] found legacy provider "terraform-provider-bizfly"
2020/07/30 10:57:00 [DEBUG] checking for provider in "/usr/local/bin"
2020/07/30 10:57:00 [DEBUG] checking for provider in ".terraform/plugins/darwin_amd64"
2020/07/30 10:57:00 [DEBUG] found valid plugin: "bizfly", "0.0.0", "/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly"
2020/07/30 10:57:00 [DEBUG] plugin requirements: "bizfly"=""
2020/07/30 10:57:00 [DEBUG] checking for provider in "."
2020/07/30 10:57:00 [WARN] found legacy provider "terraform-provider-bizfly"
2020/07/30 10:57:00 [DEBUG] checking for provider in "/usr/local/bin"
2020/07/30 10:57:00 [DEBUG] checking for provider in ".terraform/plugins/darwin_amd64"
2020/07/30 10:57:00 [DEBUG] found valid plugin: "bizfly", "0.0.0", "/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly"
2020/07/30 10:57:00 [DEBUG] checking for provider in ".terraform/plugins/darwin_amd64"
2020/07/30 10:57:05 [INFO] Terraform version: 0.12.9  
2020/07/30 10:57:05 [INFO] Go runtime version: go1.13
2020/07/30 10:57:05 [INFO] CLI args: []string{"/usr/local/bin/terraform", "plan"}
2020/07/30 10:57:05 [DEBUG] Attempting to open CLI config file: /Users/hung/.terraformrc
2020/07/30 10:57:05 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2020/07/30 10:57:05 [INFO] CLI command args: []string{"plan"}
2020/07/30 10:57:05 [TRACE] Meta.Backend: no config given or present on disk, so returning nil config
2020/07/30 10:57:05 [TRACE] Meta.Backend: backend has not previously been initialized in this working directory
2020/07/30 10:57:05 [DEBUG] New state was assigned lineage "66ecd5dd-3dbe-76c7-1e65-7c14590b5464"
2020/07/30 10:57:05 [TRACE] Meta.Backend: using default local state only (no backend configuration, and no existing initialized backend)
2020/07/30 10:57:05 [TRACE] Meta.Backend: instantiated backend of type <nil>
2020/07/30 10:57:05 [DEBUG] checking for provider in "."
2020/07/30 10:57:05 [WARN] found legacy provider "terraform-provider-bizfly"
2020/07/30 10:57:05 [DEBUG] checking for provider in "/usr/local/bin"
2020/07/30 10:57:05 [DEBUG] checking for provider in ".terraform/plugins/darwin_amd64"
2020/07/30 10:57:05 [DEBUG] found valid plugin: "bizfly", "0.0.0", "/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly"
2020/07/30 10:57:05 [DEBUG] checking for provisioner in "."
2020/07/30 10:57:05 [DEBUG] checking for provisioner in "/usr/local/bin"
2020/07/30 10:57:05 [DEBUG] checking for provisioner in ".terraform/plugins/darwin_amd64"
2020/07/30 10:57:05 [TRACE] Meta.Backend: backend <nil> does not support operations, so wrapping it in a local backend
2020/07/30 10:57:05 [INFO] backend/local: starting Plan operation
2020/07/30 10:57:05 [TRACE] backend/local: requesting state manager for workspace "default"
2020/07/30 10:57:05 [TRACE] backend/local: state manager for workspace "default" will:
 - read initial snapshot from terraform.tfstate
 - write new snapshots to terraform.tfstate
 - create any backup at terraform.tfstate.backup
2020/07/30 10:57:05 [TRACE] backend/local: requesting state lock for workspace "default"
2020/07/30 10:57:05 [TRACE] statemgr.Filesystem: preparing to manage state snapshots at terraform.tfstate
2020/07/30 10:57:05 [TRACE] statemgr.Filesystem: existing snapshot has lineage "8e1934d5-1d8f-e9a8-58e8-6c54c3aa209a" serial 1
2020/07/30 10:57:05 [TRACE] statemgr.Filesystem: locking terraform.tfstate using fcntl flock
2020/07/30 10:57:05 [TRACE] statemgr.Filesystem: writing lock metadata to .terraform.tfstate.lock.info
2020/07/30 10:57:05 [TRACE] backend/local: reading remote state for workspace "default"
2020/07/30 10:57:05 [TRACE] statemgr.Filesystem: reading latest snapshot from terraform.tfstate
2020/07/30 10:57:05 [TRACE] statemgr.Filesystem: read snapshot with lineage "8e1934d5-1d8f-e9a8-58e8-6c54c3aa209a" serial 1
2020/07/30 10:57:05 [TRACE] backend/local: retrieving local state snapshot for workspace "default"
2020/07/30 10:57:05 [TRACE] backend/local: building context for current working directory
2020/07/30 10:57:05 [TRACE] terraform.NewContext: starting
2020/07/30 10:57:05 [TRACE] terraform.NewContext: resolving provider version selections
2020/07/30 10:57:05 [TRACE] terraform.NewContext: loading provider schemas
2020/07/30 10:57:05 [TRACE] LoadSchemas: retrieving schema for provider type "bizfly"
2020-07-30T10:57:05.659+0700 [INFO]  plugin: configuring client automatic mTLS
2020-07-30T10:57:05.697+0700 [DEBUG] plugin: starting plugin: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly args=[/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly]
2020-07-30T10:57:05.700+0700 [DEBUG] plugin: plugin started: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=48236
2020-07-30T10:57:05.700+0700 [DEBUG] plugin: waiting for RPC address: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly
2020-07-30T10:57:05.718+0700 [INFO]  plugin.terraform-provider-bizfly: configuring server automatic mTLS: timestamp=2020-07-30T10:57:05.718+0700
2020-07-30T10:57:05.746+0700 [DEBUG] plugin: using plugin: version=5
2020-07-30T10:57:05.746+0700 [DEBUG] plugin.terraform-provider-bizfly: plugin address: address=/var/folders/0r/zdwrk7wn22vd_g32twvblrpc0000gn/T/plugin129940475 network=unix timestamp=2020-07-30T10:57:05.746+0700
2020/07/30 10:57:05 [TRACE] GRPCProvider: GetSchema
2020/07/30 10:57:05 [TRACE] GRPCProvider: Close
2020-07-30T10:57:05.811+0700 [DEBUG] plugin: plugin process exited: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=48236
2020-07-30T10:57:05.811+0700 [DEBUG] plugin: plugin exited
2020/07/30 10:57:05 [TRACE] terraform.NewContext: complete
2020/07/30 10:57:05 [TRACE] backend/local: finished building terraform.Context
2020/07/30 10:57:05 [TRACE] backend/local: requesting interactive input, if necessary
2020/07/30 10:57:05 [TRACE] Context.Input: Prompting for variables
2020/07/30 10:57:05 [TRACE] Context.Input: Prompting for provider arguments
2020/07/30 10:57:05 [TRACE] Context.Input: Provider provider.bizfly declared at main.tf:1,1-18
2020/07/30 10:57:05 [TRACE] Context.Input: Input for provider.bizfly: map[string]cty.Value{}
2020/07/30 10:57:05 [TRACE] backend/local: running validation operation
2020/07/30 10:57:05 [INFO] terraform: building graph: GraphTypeValidate
2020/07/30 10:57:05 [TRACE] Executing graph transform *terraform.ConfigTransformer
2020/07/30 10:57:05 [TRACE] ConfigTransformer: Starting for path: 
2020/07/30 10:57:05 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
bizfly_instance.test - *terraform.NodeValidatableResource
------
2020/07/30 10:57:05 [TRACE] Executing graph transform *terraform.LocalTransformer
2020/07/30 10:57:05 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2020/07/30 10:57:05 [TRACE] Executing graph transform *terraform.OutputTransformer
2020/07/30 10:57:05 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2020/07/30 10:57:05 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2020/07/30 10:57:05 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2020/07/30 10:57:05 [TRACE] Executing graph transform *terraform.StateTransformer
2020/07/30 10:57:05 [TRACE] StateTransformer: state is empty, so nothing to do
2020/07/30 10:57:05 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2020/07/30 10:57:05 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2020/07/30 10:57:05 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2020/07/30 10:57:05 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2020/07/30 10:57:05 [TRACE] AttachResourceConfigTransformer: attaching to "bizfly_instance.test" (*terraform.NodeValidatableResource) config from main.tf:7,1-34
2020/07/30 10:57:05 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2020/07/30 10:57:05 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/30 10:57:05 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/30 10:57:05 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2020/07/30 10:57:05 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
bizfly_instance.test - *terraform.NodeValidatableResource
var.login - *terraform.NodeRootVariable
------
2020/07/30 10:57:05 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2020/07/30 10:57:05 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2020/07/30 10:57:05 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2020/07/30 10:57:05 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2020/07/30 10:57:05 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2020/07/30 10:57:05 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2020/07/30 10:57:05 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2020/07/30 10:57:05 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2020/07/30 10:57:05 [TRACE] ProviderConfigTransformer: attaching to "provider.bizfly" provider configuration from main.tf:1,1-18
2020/07/30 10:57:05 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
bizfly_instance.test - *terraform.NodeValidatableResource
provider.bizfly - *terraform.NodeApplyableProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 10:57:05 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2020/07/30 10:57:05 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2020/07/30 10:57:05 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2020/07/30 10:57:05 [TRACE] ProviderTransformer: bizfly_instance.test is provided by provider.bizfly or inherited equivalent
2020/07/30 10:57:05 [TRACE] ProviderTransformer: exact match for provider.bizfly serving bizfly_instance.test
2020/07/30 10:57:05 [DEBUG] ProviderTransformer: "bizfly_instance.test" (*terraform.NodeValidatableResource) needs provider.bizfly
2020/07/30 10:57:05 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
bizfly_instance.test - *terraform.NodeValidatableResource
  provider.bizfly - *terraform.NodeApplyableProvider
provider.bizfly - *terraform.NodeApplyableProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 10:57:05 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2020/07/30 10:57:05 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2020/07/30 10:57:05 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2020/07/30 10:57:05 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2020/07/30 10:57:05 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
bizfly_instance.test - *terraform.NodeValidatableResource
  provider.bizfly - *terraform.NodeApplyableProvider
provider.bizfly - *terraform.NodeApplyableProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 10:57:05 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2020/07/30 10:57:05 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2020/07/30 10:57:05 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2020/07/30 10:57:05 [TRACE] AttachSchemaTransformer: attaching resource schema to bizfly_instance.test
2020/07/30 10:57:05 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.bizfly
2020/07/30 10:57:05 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2020/07/30 10:57:05 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/30 10:57:05 [DEBUG] ReferenceTransformer: "var.login" references: []
2020/07/30 10:57:05 [DEBUG] ReferenceTransformer: "provider.bizfly" references: []
2020/07/30 10:57:05 [DEBUG] ReferenceTransformer: "bizfly_instance.test" references: []
2020/07/30 10:57:05 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/30 10:57:05 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2020/07/30 10:57:05 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
bizfly_instance.test - *terraform.NodeValidatableResource
  provider.bizfly - *terraform.NodeApplyableProvider
meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  bizfly_instance.test - *terraform.NodeValidatableResource
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
provider.bizfly - *terraform.NodeApplyableProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 10:57:05 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/30 10:57:05 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/30 10:57:05 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2020/07/30 10:57:05 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2020/07/30 10:57:05 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2020/07/30 10:57:05 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
bizfly_instance.test - *terraform.NodeValidatableResource
  provider.bizfly - *terraform.NodeApplyableProvider
meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  bizfly_instance.test - *terraform.NodeValidatableResource
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
provider.bizfly - *terraform.NodeApplyableProvider
provider.bizfly (close) - *terraform.graphNodeCloseProvider
  bizfly_instance.test - *terraform.NodeValidatableResource
  provider.bizfly - *terraform.NodeApplyableProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 10:57:05 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2020/07/30 10:57:05 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer (no changes)
2020/07/30 10:57:05 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/30 10:57:05 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
bizfly_instance.test - *terraform.NodeValidatableResource
  provider.bizfly - *terraform.NodeApplyableProvider
meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  bizfly_instance.test - *terraform.NodeValidatableResource
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
provider.bizfly - *terraform.NodeApplyableProvider
provider.bizfly (close) - *terraform.graphNodeCloseProvider
  bizfly_instance.test - *terraform.NodeValidatableResource
  provider.bizfly - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 10:57:05 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2020/07/30 10:57:05 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
bizfly_instance.test - *terraform.NodeValidatableResource
  provider.bizfly - *terraform.NodeApplyableProvider
meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  bizfly_instance.test - *terraform.NodeValidatableResource
  var.login - *terraform.NodeRootVariable
provider.bizfly - *terraform.NodeApplyableProvider
provider.bizfly (close) - *terraform.graphNodeCloseProvider
  bizfly_instance.test - *terraform.NodeValidatableResource
root - terraform.graphNodeRoot
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 10:57:05 [DEBUG] Starting graph walk: walkValidate
2020/07/30 10:57:05 [TRACE] dag/walk: updating graph
2020/07/30 10:57:05 [TRACE] dag/walk: added new vertex: "root"
2020/07/30 10:57:05 [TRACE] dag/walk: added new vertex: "bizfly_instance.test"
2020/07/30 10:57:05 [TRACE] dag/walk: added new vertex: "var.login"
2020/07/30 10:57:05 [TRACE] dag/walk: added new vertex: "provider.bizfly"
2020/07/30 10:57:05 [TRACE] dag/walk: added new vertex: "meta.count-boundary (EachMode fixup)"
2020/07/30 10:57:05 [TRACE] dag/walk: added new vertex: "provider.bizfly (close)"
2020/07/30 10:57:05 [TRACE] dag/walk: added edge: "provider.bizfly (close)" waiting on "bizfly_instance.test"
2020/07/30 10:57:05 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (EachMode fixup)"
2020/07/30 10:57:05 [TRACE] dag/walk: added edge: "root" waiting on "provider.bizfly (close)"
2020/07/30 10:57:05 [TRACE] dag/walk: added edge: "bizfly_instance.test" waiting on "provider.bizfly"
2020/07/30 10:57:05 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "bizfly_instance.test"
2020/07/30 10:57:05 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "var.login"
2020/07/30 10:57:05 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2020/07/30 10:57:05 [TRACE] dag/walk: dependencies changed for "bizfly_instance.test", sending new deps
2020/07/30 10:57:05 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (EachMode fixup)", sending new deps
2020/07/30 10:57:05 [TRACE] dag/walk: dependencies changed for "provider.bizfly (close)", sending new deps
2020/07/30 10:57:05 [TRACE] dag/walk: visiting "var.login"
2020/07/30 10:57:05 [TRACE] vertex "var.login": starting visit (*terraform.NodeRootVariable)
2020/07/30 10:57:05 [TRACE] vertex "var.login": visit complete
2020/07/30 10:57:05 [TRACE] dag/walk: visiting "provider.bizfly"
2020/07/30 10:57:05 [TRACE] vertex "provider.bizfly": starting visit (*terraform.NodeApplyableProvider)
2020/07/30 10:57:05 [TRACE] vertex "provider.bizfly": evaluating
2020/07/30 10:57:05 [TRACE] [walkValidate] Entering eval tree: provider.bizfly
2020/07/30 10:57:05 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 10:57:05 [TRACE] <root>: eval: *terraform.EvalInitProvider
2020-07-30T10:57:05.818+0700 [INFO]  plugin: configuring client automatic mTLS
2020-07-30T10:57:05.842+0700 [DEBUG] plugin: starting plugin: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly args=[/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly]
2020-07-30T10:57:05.846+0700 [DEBUG] plugin: plugin started: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=48237
2020-07-30T10:57:05.846+0700 [DEBUG] plugin: waiting for RPC address: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly
2020-07-30T10:57:05.864+0700 [INFO]  plugin.terraform-provider-bizfly: configuring server automatic mTLS: timestamp=2020-07-30T10:57:05.864+0700
2020-07-30T10:57:05.891+0700 [DEBUG] plugin: using plugin: version=5
2020-07-30T10:57:05.891+0700 [DEBUG] plugin.terraform-provider-bizfly: plugin address: address=/var/folders/0r/zdwrk7wn22vd_g32twvblrpc0000gn/T/plugin793070128 network=unix timestamp=2020-07-30T10:57:05.891+0700
2020/07/30 10:57:05 [TRACE] BuiltinEvalContext: Initialized "bizfly" provider for provider.bizfly
2020/07/30 10:57:05 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 10:57:05 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/07/30 10:57:05 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 10:57:05 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 10:57:05 [TRACE] <root>: eval: *terraform.EvalValidateProvider
2020/07/30 10:57:05 [TRACE] buildProviderConfig for provider.bizfly: using explicit config only
2020/07/30 10:57:05 [TRACE] GRPCProvider: GetSchema
2020/07/30 10:57:05 [TRACE] GRPCProvider: PrepareProviderConfig
2020/07/30 10:57:05 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 10:57:05 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 10:57:05 [TRACE] [walkValidate] Exiting eval tree: provider.bizfly
2020/07/30 10:57:05 [TRACE] vertex "provider.bizfly": visit complete
2020/07/30 10:57:05 [TRACE] dag/walk: visiting "bizfly_instance.test"
2020/07/30 10:57:05 [TRACE] vertex "bizfly_instance.test": starting visit (*terraform.NodeValidatableResource)
2020/07/30 10:57:05 [TRACE] vertex "bizfly_instance.test": evaluating
2020/07/30 10:57:05 [TRACE] [walkValidate] Entering eval tree: bizfly_instance.test
2020/07/30 10:57:05 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 10:57:05 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 10:57:05 [TRACE] <root>: eval: *terraform.EvalValidateResource
2020/07/30 10:57:05 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/07/30 10:57:05 [TRACE] [walkValidate] Exiting eval tree: bizfly_instance.test
2020/07/30 10:57:05 [TRACE] vertex "bizfly_instance.test": visit complete
2020/07/30 10:57:05 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2020/07/30 10:57:05 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2020/07/30 10:57:05 [TRACE] vertex "meta.count-boundary (EachMode fixup)": evaluating
2020/07/30 10:57:05 [TRACE] [walkValidate] Entering eval tree: meta.count-boundary (EachMode fixup)
2020/07/30 10:57:05 [TRACE] <root>: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2020/07/30 10:57:05 [TRACE] [walkValidate] Exiting eval tree: meta.count-boundary (EachMode fixup)
2020/07/30 10:57:05 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2020/07/30 10:57:05 [TRACE] dag/walk: visiting "provider.bizfly (close)"
2020/07/30 10:57:05 [TRACE] vertex "provider.bizfly (close)": starting visit (*terraform.graphNodeCloseProvider)
2020/07/30 10:57:05 [TRACE] vertex "provider.bizfly (close)": evaluating
2020/07/30 10:57:05 [TRACE] [walkValidate] Entering eval tree: provider.bizfly (close)
2020/07/30 10:57:05 [TRACE] <root>: eval: *terraform.EvalCloseProvider
2020/07/30 10:57:05 [TRACE] GRPCProvider: Close
2020-07-30T10:57:05.951+0700 [DEBUG] plugin: plugin process exited: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=48237
2020-07-30T10:57:05.951+0700 [DEBUG] plugin: plugin exited
2020/07/30 10:57:05 [TRACE] [walkValidate] Exiting eval tree: provider.bizfly (close)
2020/07/30 10:57:05 [TRACE] vertex "provider.bizfly (close)": visit complete
2020/07/30 10:57:05 [TRACE] dag/walk: visiting "root"
2020/07/30 10:57:05 [TRACE] vertex "root": starting visit (terraform.graphNodeRoot)
2020/07/30 10:57:05 [TRACE] vertex "root": visit complete
2020/07/30 10:57:05 [INFO] backend/local: plan calling Refresh
2020/07/30 10:57:05 [INFO] terraform: building graph: GraphTypeRefresh
2020/07/30 10:57:05 [TRACE] No managed resources in state during refresh; skipping managed resource transformer
2020/07/30 10:57:05 [TRACE] Executing graph transform *terraform.ConfigTransformer
2020/07/30 10:57:05 [TRACE] ConfigTransformer: Starting for path: 
2020/07/30 10:57:05 [TRACE] Completed graph transform *terraform.ConfigTransformer (no changes)
2020/07/30 10:57:05 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2020/07/30 10:57:05 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2020/07/30 10:57:05 [TRACE] Executing graph transform *terraform.StateTransformer
2020/07/30 10:57:05 [TRACE] StateTransformer: state is empty, so nothing to do
2020/07/30 10:57:05 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2020/07/30 10:57:05 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/30 10:57:05 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/30 10:57:05 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2020/07/30 10:57:05 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2020/07/30 10:57:05 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2020/07/30 10:57:05 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
var.login - *terraform.NodeRootVariable
------
2020/07/30 10:57:05 [TRACE] Executing graph transform *terraform.LocalTransformer
2020/07/30 10:57:05 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2020/07/30 10:57:05 [TRACE] Executing graph transform *terraform.OutputTransformer
2020/07/30 10:57:05 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2020/07/30 10:57:05 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2020/07/30 10:57:05 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2020/07/30 10:57:05 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2020/07/30 10:57:05 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2020/07/30 10:57:05 [TRACE] ProviderConfigTransformer: attaching to "provider.bizfly" provider configuration from main.tf:1,1-18
2020/07/30 10:57:05 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
provider.bizfly - *terraform.NodeApplyableProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 10:57:05 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2020/07/30 10:57:05 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2020/07/30 10:57:05 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2020/07/30 10:57:05 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer (no changes)
2020/07/30 10:57:05 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2020/07/30 10:57:05 [DEBUG] pruning unused provider.bizfly
2020/07/30 10:57:05 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer with new graph:
var.login - *terraform.NodeRootVariable
------
2020/07/30 10:57:05 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2020/07/30 10:57:05 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2020/07/30 10:57:05 [TRACE] Completed graph transform *terraform.graphTransformerMulti (no changes)
2020/07/30 10:57:05 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2020/07/30 10:57:05 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2020/07/30 10:57:05 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/30 10:57:05 [DEBUG] ReferenceTransformer: "var.login" references: []
2020/07/30 10:57:05 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/30 10:57:05 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/30 10:57:05 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/30 10:57:05 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2020/07/30 10:57:05 [TRACE] Completed graph transform *terraform.CloseProviderTransformer (no changes)
2020/07/30 10:57:05 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/30 10:57:05 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/07/30 10:57:05 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2020/07/30 10:57:05 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer (no changes)
2020/07/30 10:57:05 [DEBUG] Starting graph walk: walkRefresh
2020/07/30 10:57:05 [TRACE] dag/walk: updating graph
2020/07/30 10:57:05 [TRACE] dag/walk: added new vertex: "var.login"
2020/07/30 10:57:05 [TRACE] dag/walk: visiting "var.login"
2020/07/30 10:57:05 [TRACE] vertex "var.login": starting visit (*terraform.NodeRootVariable)
2020/07/30 10:57:05 [TRACE] vertex "var.login": visit complete
2020/07/30 10:57:05 [INFO] backend/local: plan calling Plan
2020/07/30 10:57:05 [INFO] terraform: building graph: GraphTypePlan
2020/07/30 10:57:05 [TRACE] Executing graph transform *terraform.ConfigTransformer
2020/07/30 10:57:05 [TRACE] ConfigTransformer: Starting for path: 
2020/07/30 10:57:05 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
bizfly_instance.test - *terraform.NodePlannableResource
------
2020/07/30 10:57:05 [TRACE] Executing graph transform *terraform.LocalTransformer
2020/07/30 10:57:05 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2020/07/30 10:57:05 [TRACE] Executing graph transform *terraform.OutputTransformer
2020/07/30 10:57:05 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2020/07/30 10:57:05 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2020/07/30 10:57:05 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2020/07/30 10:57:05 [TRACE] Executing graph transform *terraform.StateTransformer
2020/07/30 10:57:05 [TRACE] StateTransformer: state is empty, so nothing to do
2020/07/30 10:57:05 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2020/07/30 10:57:05 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2020/07/30 10:57:05 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2020/07/30 10:57:05 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2020/07/30 10:57:05 [TRACE] AttachResourceConfigTransformer: attaching to "bizfly_instance.test" (*terraform.NodePlannableResource) config from main.tf:7,1-34
2020/07/30 10:57:05 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2020/07/30 10:57:05 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/30 10:57:05 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/30 10:57:05 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2020/07/30 10:57:05 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
bizfly_instance.test - *terraform.NodePlannableResource
var.login - *terraform.NodeRootVariable
------
2020/07/30 10:57:05 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2020/07/30 10:57:05 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2020/07/30 10:57:05 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2020/07/30 10:57:05 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2020/07/30 10:57:05 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2020/07/30 10:57:05 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2020/07/30 10:57:05 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2020/07/30 10:57:05 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2020/07/30 10:57:05 [TRACE] ProviderConfigTransformer: attaching to "provider.bizfly" provider configuration from main.tf:1,1-18
2020/07/30 10:57:05 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
bizfly_instance.test - *terraform.NodePlannableResource
provider.bizfly - *terraform.NodeApplyableProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 10:57:05 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2020/07/30 10:57:05 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2020/07/30 10:57:05 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2020/07/30 10:57:05 [TRACE] ProviderTransformer: bizfly_instance.test is provided by provider.bizfly or inherited equivalent
2020/07/30 10:57:05 [TRACE] ProviderTransformer: exact match for provider.bizfly serving bizfly_instance.test
2020/07/30 10:57:05 [DEBUG] ProviderTransformer: "bizfly_instance.test" (*terraform.NodePlannableResource) needs provider.bizfly
2020/07/30 10:57:05 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
bizfly_instance.test - *terraform.NodePlannableResource
  provider.bizfly - *terraform.NodeApplyableProvider
provider.bizfly - *terraform.NodeApplyableProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 10:57:05 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2020/07/30 10:57:05 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2020/07/30 10:57:05 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2020/07/30 10:57:05 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2020/07/30 10:57:05 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
bizfly_instance.test - *terraform.NodePlannableResource
  provider.bizfly - *terraform.NodeApplyableProvider
provider.bizfly - *terraform.NodeApplyableProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 10:57:05 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2020/07/30 10:57:05 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2020/07/30 10:57:05 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2020/07/30 10:57:05 [TRACE] AttachSchemaTransformer: attaching resource schema to bizfly_instance.test
2020/07/30 10:57:05 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.bizfly
2020/07/30 10:57:05 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2020/07/30 10:57:05 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/30 10:57:05 [DEBUG] ReferenceTransformer: "bizfly_instance.test" references: []
2020/07/30 10:57:05 [DEBUG] ReferenceTransformer: "var.login" references: []
2020/07/30 10:57:05 [DEBUG] ReferenceTransformer: "provider.bizfly" references: []
2020/07/30 10:57:05 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/30 10:57:05 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2020/07/30 10:57:05 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
bizfly_instance.test - *terraform.NodePlannableResource
  provider.bizfly - *terraform.NodeApplyableProvider
meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  bizfly_instance.test - *terraform.NodePlannableResource
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
provider.bizfly - *terraform.NodeApplyableProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 10:57:05 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/30 10:57:05 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/30 10:57:05 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2020/07/30 10:57:05 [TRACE] ForcedCBDTransformer: "bizfly_instance.test" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2020/07/30 10:57:05 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2020/07/30 10:57:05 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2020/07/30 10:57:05 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
bizfly_instance.test - *terraform.NodePlannableResource
  provider.bizfly - *terraform.NodeApplyableProvider
meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  bizfly_instance.test - *terraform.NodePlannableResource
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
provider.bizfly - *terraform.NodeApplyableProvider
provider.bizfly (close) - *terraform.graphNodeCloseProvider
  bizfly_instance.test - *terraform.NodePlannableResource
  provider.bizfly - *terraform.NodeApplyableProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 10:57:05 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2020/07/30 10:57:05 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer (no changes)
2020/07/30 10:57:05 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/30 10:57:05 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
bizfly_instance.test - *terraform.NodePlannableResource
  provider.bizfly - *terraform.NodeApplyableProvider
meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  bizfly_instance.test - *terraform.NodePlannableResource
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
provider.bizfly - *terraform.NodeApplyableProvider
provider.bizfly (close) - *terraform.graphNodeCloseProvider
  bizfly_instance.test - *terraform.NodePlannableResource
  provider.bizfly - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 10:57:05 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2020/07/30 10:57:05 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
bizfly_instance.test - *terraform.NodePlannableResource
  provider.bizfly - *terraform.NodeApplyableProvider
meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  bizfly_instance.test - *terraform.NodePlannableResource
  var.login - *terraform.NodeRootVariable
provider.bizfly - *terraform.NodeApplyableProvider
provider.bizfly (close) - *terraform.graphNodeCloseProvider
  bizfly_instance.test - *terraform.NodePlannableResource
root - terraform.graphNodeRoot
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 10:57:05 [DEBUG] Starting graph walk: walkPlan
2020/07/30 10:57:05 [TRACE] dag/walk: updating graph
2020/07/30 10:57:05 [TRACE] dag/walk: added new vertex: "root"
2020/07/30 10:57:05 [TRACE] dag/walk: added new vertex: "bizfly_instance.test"
2020/07/30 10:57:05 [TRACE] dag/walk: added new vertex: "var.login"
2020/07/30 10:57:05 [TRACE] dag/walk: added new vertex: "provider.bizfly"
2020/07/30 10:57:05 [TRACE] dag/walk: added new vertex: "meta.count-boundary (EachMode fixup)"
2020/07/30 10:57:05 [TRACE] dag/walk: added new vertex: "provider.bizfly (close)"
2020/07/30 10:57:05 [TRACE] dag/walk: added edge: "provider.bizfly (close)" waiting on "bizfly_instance.test"
2020/07/30 10:57:05 [TRACE] dag/walk: added edge: "root" waiting on "provider.bizfly (close)"
2020/07/30 10:57:05 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (EachMode fixup)"
2020/07/30 10:57:05 [TRACE] dag/walk: added edge: "bizfly_instance.test" waiting on "provider.bizfly"
2020/07/30 10:57:05 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "bizfly_instance.test"
2020/07/30 10:57:05 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "var.login"
2020/07/30 10:57:05 [TRACE] dag/walk: dependencies changed for "provider.bizfly (close)", sending new deps
2020/07/30 10:57:05 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2020/07/30 10:57:05 [TRACE] dag/walk: dependencies changed for "bizfly_instance.test", sending new deps
2020/07/30 10:57:05 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (EachMode fixup)", sending new deps
2020/07/30 10:57:05 [TRACE] dag/walk: visiting "provider.bizfly"
2020/07/30 10:57:05 [TRACE] vertex "provider.bizfly": starting visit (*terraform.NodeApplyableProvider)
2020/07/30 10:57:05 [TRACE] vertex "provider.bizfly": evaluating
2020/07/30 10:57:05 [TRACE] [walkPlan] Entering eval tree: provider.bizfly
2020/07/30 10:57:05 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 10:57:05 [TRACE] <root>: eval: *terraform.EvalInitProvider
2020-07-30T10:57:05.954+0700 [INFO]  plugin: configuring client automatic mTLS
2020/07/30 10:57:05 [TRACE] dag/walk: visiting "var.login"
2020/07/30 10:57:05 [TRACE] vertex "var.login": starting visit (*terraform.NodeRootVariable)
2020/07/30 10:57:05 [TRACE] vertex "var.login": visit complete
2020-07-30T10:57:05.982+0700 [DEBUG] plugin: starting plugin: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly args=[/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly]
2020-07-30T10:57:05.985+0700 [DEBUG] plugin: plugin started: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=48238
2020-07-30T10:57:05.985+0700 [DEBUG] plugin: waiting for RPC address: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly
2020-07-30T10:57:06.003+0700 [INFO]  plugin.terraform-provider-bizfly: configuring server automatic mTLS: timestamp=2020-07-30T10:57:06.003+0700
2020-07-30T10:57:06.030+0700 [DEBUG] plugin: using plugin: version=5
2020-07-30T10:57:06.030+0700 [DEBUG] plugin.terraform-provider-bizfly: plugin address: address=/var/folders/0r/zdwrk7wn22vd_g32twvblrpc0000gn/T/plugin649345205 network=unix timestamp=2020-07-30T10:57:06.030+0700
2020/07/30 10:57:06 [TRACE] BuiltinEvalContext: Initialized "bizfly" provider for provider.bizfly
2020/07/30 10:57:06 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 10:57:06 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 10:57:06 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/07/30 10:57:06 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 10:57:06 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 10:57:06 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/07/30 10:57:06 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 10:57:06 [TRACE] <root>: eval: *terraform.EvalConfigProvider
2020/07/30 10:57:06 [TRACE] buildProviderConfig for provider.bizfly: using explicit config only
2020/07/30 10:57:06 [TRACE] GRPCProvider: GetSchema
2020/07/30 10:57:06 [TRACE] GRPCProvider: Configure
2020/07/30 10:57:07 [TRACE] [walkPlan] Exiting eval tree: provider.bizfly
2020/07/30 10:57:07 [TRACE] vertex "provider.bizfly": visit complete
2020/07/30 10:57:07 [TRACE] dag/walk: visiting "bizfly_instance.test"
2020/07/30 10:57:07 [TRACE] vertex "bizfly_instance.test": starting visit (*terraform.NodePlannableResource)
2020/07/30 10:57:07 [TRACE] vertex "bizfly_instance.test": evaluating
2020/07/30 10:57:07 [TRACE] [walkPlan] Entering eval tree: bizfly_instance.test
2020/07/30 10:57:07 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/07/30 10:57:07 [TRACE] [walkPlan] Exiting eval tree: bizfly_instance.test
2020/07/30 10:57:07 [TRACE] vertex "bizfly_instance.test": expanding dynamic subgraph
2020/07/30 10:57:07 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/07/30 10:57:07 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
bizfly_instance.test - *terraform.NodePlannableResourceInstance
------
2020/07/30 10:57:07 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/07/30 10:57:07 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/07/30 10:57:07 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/30 10:57:07 [DEBUG] Resource instance state not found for node "bizfly_instance.test", instance bizfly_instance.test
2020/07/30 10:57:07 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/30 10:57:07 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/30 10:57:07 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/30 10:57:07 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/30 10:57:07 [DEBUG] ReferenceTransformer: "bizfly_instance.test" references: []
2020/07/30 10:57:07 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/30 10:57:07 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/30 10:57:07 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/07/30 10:57:07 [TRACE] vertex "bizfly_instance.test": entering dynamic subgraph
2020/07/30 10:57:07 [TRACE] dag/walk: updating graph
2020/07/30 10:57:07 [TRACE] dag/walk: added new vertex: "bizfly_instance.test"
2020/07/30 10:57:07 [TRACE] dag/walk: visiting "bizfly_instance.test"
2020/07/30 10:57:07 [TRACE] vertex "bizfly_instance.test": starting visit (*terraform.NodePlannableResourceInstance)
2020/07/30 10:57:07 [TRACE] vertex "bizfly_instance.test": evaluating
2020/07/30 10:57:07 [TRACE] [walkPlan] Entering eval tree: bizfly_instance.test
2020/07/30 10:57:07 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 10:57:07 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 10:57:07 [TRACE] <root>: eval: *terraform.EvalReadState
2020/07/30 10:57:07 [TRACE] EvalReadState: reading state for bizfly_instance.test
2020/07/30 10:57:07 [TRACE] EvalReadState: no state present for bizfly_instance.test
2020/07/30 10:57:07 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2020/07/30 10:57:07 [TRACE] <root>: eval: *terraform.EvalDiff
2020/07/30 10:57:07 [TRACE] Re-validating config for "bizfly_instance.test"
2020/07/30 10:57:07 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/07/30 10:57:07 [TRACE] GRPCProvider: PlanResourceChange
2020/07/30 10:57:07 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2020/07/30 10:57:07 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/07/30 10:57:07 [TRACE] EvalWriteState: writing current state object for bizfly_instance.test
2020/07/30 10:57:07 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/07/30 10:57:07 [TRACE] EvalWriteDiff: recorded Create change for bizfly_instance.test
2020/07/30 10:57:07 [TRACE] [walkPlan] Exiting eval tree: bizfly_instance.test
2020/07/30 10:57:07 [TRACE] vertex "bizfly_instance.test": visit complete
2020/07/30 10:57:07 [TRACE] vertex "bizfly_instance.test": dynamic subgraph completed successfully
2020/07/30 10:57:07 [TRACE] vertex "bizfly_instance.test": visit complete
2020/07/30 10:57:07 [TRACE] dag/walk: visiting "provider.bizfly (close)"
2020/07/30 10:57:07 [TRACE] vertex "provider.bizfly (close)": starting visit (*terraform.graphNodeCloseProvider)
2020/07/30 10:57:07 [TRACE] vertex "provider.bizfly (close)": evaluating
2020/07/30 10:57:07 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2020/07/30 10:57:07 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2020/07/30 10:57:07 [TRACE] [walkPlan] Entering eval tree: provider.bizfly (close)
2020/07/30 10:57:07 [TRACE] <root>: eval: *terraform.EvalCloseProvider
2020/07/30 10:57:07 [TRACE] vertex "meta.count-boundary (EachMode fixup)": evaluating
2020/07/30 10:57:07 [TRACE] [walkPlan] Entering eval tree: meta.count-boundary (EachMode fixup)
2020/07/30 10:57:07 [TRACE] GRPCProvider: Close
2020/07/30 10:57:07 [TRACE] <root>: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2020/07/30 10:57:07 [TRACE] [walkPlan] Exiting eval tree: meta.count-boundary (EachMode fixup)
2020/07/30 10:57:07 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2020-07-30T10:57:07.437+0700 [DEBUG] plugin: plugin process exited: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=48238
2020-07-30T10:57:07.438+0700 [DEBUG] plugin: plugin exited
2020/07/30 10:57:07 [TRACE] [walkPlan] Exiting eval tree: provider.bizfly (close)
2020/07/30 10:57:07 [TRACE] vertex "provider.bizfly (close)": visit complete
2020/07/30 10:57:07 [TRACE] dag/walk: visiting "root"
2020/07/30 10:57:07 [TRACE] vertex "root": starting visit (terraform.graphNodeRoot)
2020/07/30 10:57:07 [TRACE] vertex "root": visit complete
2020/07/30 10:57:07 [INFO] backend/local: plan operation completed
2020/07/30 10:57:07 [TRACE] statemgr.Filesystem: removing lock metadata file .terraform.tfstate.lock.info
2020/07/30 10:57:07 [TRACE] statemgr.Filesystem: unlocking terraform.tfstate using fcntl flock
2020/07/30 10:57:20 [INFO] Terraform version: 0.12.9  
2020/07/30 10:57:20 [INFO] Go runtime version: go1.13
2020/07/30 10:57:20 [INFO] CLI args: []string{"/usr/local/bin/terraform", "apply"}
2020/07/30 10:57:20 [DEBUG] Attempting to open CLI config file: /Users/hung/.terraformrc
2020/07/30 10:57:20 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2020/07/30 10:57:20 [INFO] CLI command args: []string{"apply"}
2020/07/30 10:57:20 [TRACE] Meta.Backend: no config given or present on disk, so returning nil config
2020/07/30 10:57:20 [TRACE] Meta.Backend: backend has not previously been initialized in this working directory
2020/07/30 10:57:20 [DEBUG] New state was assigned lineage "7afc6fe8-da44-8c9e-da41-8585d9b8bbf1"
2020/07/30 10:57:20 [TRACE] Meta.Backend: using default local state only (no backend configuration, and no existing initialized backend)
2020/07/30 10:57:20 [TRACE] Meta.Backend: instantiated backend of type <nil>
2020/07/30 10:57:20 [DEBUG] checking for provider in "."
2020/07/30 10:57:20 [WARN] found legacy provider "terraform-provider-bizfly"
2020/07/30 10:57:20 [DEBUG] checking for provider in "/usr/local/bin"
2020/07/30 10:57:20 [DEBUG] checking for provider in ".terraform/plugins/darwin_amd64"
2020/07/30 10:57:20 [DEBUG] found valid plugin: "bizfly", "0.0.0", "/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly"
2020/07/30 10:57:20 [DEBUG] checking for provisioner in "."
2020/07/30 10:57:20 [DEBUG] checking for provisioner in "/usr/local/bin"
2020/07/30 10:57:20 [DEBUG] checking for provisioner in ".terraform/plugins/darwin_amd64"
2020/07/30 10:57:20 [TRACE] Meta.Backend: backend <nil> does not support operations, so wrapping it in a local backend
2020/07/30 10:57:20 [INFO] backend/local: starting Apply operation
2020/07/30 10:57:20 [TRACE] backend/local: requesting state manager for workspace "default"
2020/07/30 10:57:20 [TRACE] backend/local: state manager for workspace "default" will:
 - read initial snapshot from terraform.tfstate
 - write new snapshots to terraform.tfstate
 - create any backup at terraform.tfstate.backup
2020/07/30 10:57:20 [TRACE] backend/local: requesting state lock for workspace "default"
2020/07/30 10:57:20 [TRACE] statemgr.Filesystem: preparing to manage state snapshots at terraform.tfstate
2020/07/30 10:57:20 [TRACE] statemgr.Filesystem: existing snapshot has lineage "8e1934d5-1d8f-e9a8-58e8-6c54c3aa209a" serial 1
2020/07/30 10:57:20 [TRACE] statemgr.Filesystem: locking terraform.tfstate using fcntl flock
2020/07/30 10:57:20 [TRACE] statemgr.Filesystem: writing lock metadata to .terraform.tfstate.lock.info
2020/07/30 10:57:20 [TRACE] backend/local: reading remote state for workspace "default"
2020/07/30 10:57:20 [TRACE] statemgr.Filesystem: reading latest snapshot from terraform.tfstate
2020/07/30 10:57:20 [TRACE] statemgr.Filesystem: read snapshot with lineage "8e1934d5-1d8f-e9a8-58e8-6c54c3aa209a" serial 1
2020/07/30 10:57:20 [TRACE] backend/local: retrieving local state snapshot for workspace "default"
2020/07/30 10:57:20 [TRACE] backend/local: building context for current working directory
2020/07/30 10:57:20 [TRACE] terraform.NewContext: starting
2020/07/30 10:57:20 [TRACE] terraform.NewContext: resolving provider version selections
2020/07/30 10:57:20 [TRACE] terraform.NewContext: loading provider schemas
2020/07/30 10:57:20 [TRACE] LoadSchemas: retrieving schema for provider type "bizfly"
2020-07-30T10:57:20.772+0700 [INFO]  plugin: configuring client automatic mTLS
2020-07-30T10:57:20.801+0700 [DEBUG] plugin: starting plugin: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly args=[/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly]
2020-07-30T10:57:20.804+0700 [DEBUG] plugin: plugin started: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=48257
2020-07-30T10:57:20.805+0700 [DEBUG] plugin: waiting for RPC address: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly
2020-07-30T10:57:20.821+0700 [INFO]  plugin.terraform-provider-bizfly: configuring server automatic mTLS: timestamp=2020-07-30T10:57:20.821+0700
2020-07-30T10:57:20.849+0700 [DEBUG] plugin: using plugin: version=5
2020-07-30T10:57:20.849+0700 [DEBUG] plugin.terraform-provider-bizfly: plugin address: address=/var/folders/0r/zdwrk7wn22vd_g32twvblrpc0000gn/T/plugin588144156 network=unix timestamp=2020-07-30T10:57:20.849+0700
2020/07/30 10:57:20 [TRACE] GRPCProvider: GetSchema
2020/07/30 10:57:20 [TRACE] GRPCProvider: Close
2020-07-30T10:57:20.906+0700 [DEBUG] plugin: plugin process exited: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=48257
2020-07-30T10:57:20.906+0700 [DEBUG] plugin: plugin exited
2020/07/30 10:57:20 [TRACE] terraform.NewContext: complete
2020/07/30 10:57:20 [TRACE] backend/local: finished building terraform.Context
2020/07/30 10:57:20 [TRACE] backend/local: requesting interactive input, if necessary
2020/07/30 10:57:20 [TRACE] Context.Input: Prompting for variables
2020/07/30 10:57:20 [TRACE] Context.Input: Prompting for provider arguments
2020/07/30 10:57:20 [TRACE] Context.Input: Provider provider.bizfly declared at main.tf:1,1-18
2020/07/30 10:57:20 [TRACE] Context.Input: Input for provider.bizfly: map[string]cty.Value{}
2020/07/30 10:57:20 [TRACE] backend/local: running validation operation
2020/07/30 10:57:20 [INFO] terraform: building graph: GraphTypeValidate
2020/07/30 10:57:20 [TRACE] Executing graph transform *terraform.ConfigTransformer
2020/07/30 10:57:20 [TRACE] ConfigTransformer: Starting for path: 
2020/07/30 10:57:20 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
bizfly_instance.test - *terraform.NodeValidatableResource
------
2020/07/30 10:57:20 [TRACE] Executing graph transform *terraform.LocalTransformer
2020/07/30 10:57:20 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2020/07/30 10:57:20 [TRACE] Executing graph transform *terraform.OutputTransformer
2020/07/30 10:57:20 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2020/07/30 10:57:20 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2020/07/30 10:57:20 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2020/07/30 10:57:20 [TRACE] Executing graph transform *terraform.StateTransformer
2020/07/30 10:57:20 [TRACE] StateTransformer: state is empty, so nothing to do
2020/07/30 10:57:20 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2020/07/30 10:57:20 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2020/07/30 10:57:20 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2020/07/30 10:57:20 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2020/07/30 10:57:20 [TRACE] AttachResourceConfigTransformer: attaching to "bizfly_instance.test" (*terraform.NodeValidatableResource) config from main.tf:7,1-34
2020/07/30 10:57:20 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2020/07/30 10:57:20 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/30 10:57:20 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/30 10:57:20 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2020/07/30 10:57:20 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
bizfly_instance.test - *terraform.NodeValidatableResource
var.login - *terraform.NodeRootVariable
------
2020/07/30 10:57:20 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2020/07/30 10:57:20 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2020/07/30 10:57:20 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2020/07/30 10:57:20 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2020/07/30 10:57:20 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2020/07/30 10:57:20 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2020/07/30 10:57:20 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2020/07/30 10:57:20 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2020/07/30 10:57:20 [TRACE] ProviderConfigTransformer: attaching to "provider.bizfly" provider configuration from main.tf:1,1-18
2020/07/30 10:57:20 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
bizfly_instance.test - *terraform.NodeValidatableResource
provider.bizfly - *terraform.NodeApplyableProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 10:57:20 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2020/07/30 10:57:20 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2020/07/30 10:57:20 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2020/07/30 10:57:20 [TRACE] ProviderTransformer: bizfly_instance.test is provided by provider.bizfly or inherited equivalent
2020/07/30 10:57:20 [TRACE] ProviderTransformer: exact match for provider.bizfly serving bizfly_instance.test
2020/07/30 10:57:20 [DEBUG] ProviderTransformer: "bizfly_instance.test" (*terraform.NodeValidatableResource) needs provider.bizfly
2020/07/30 10:57:20 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
bizfly_instance.test - *terraform.NodeValidatableResource
  provider.bizfly - *terraform.NodeApplyableProvider
provider.bizfly - *terraform.NodeApplyableProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 10:57:20 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2020/07/30 10:57:20 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2020/07/30 10:57:20 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2020/07/30 10:57:20 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2020/07/30 10:57:20 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
bizfly_instance.test - *terraform.NodeValidatableResource
  provider.bizfly - *terraform.NodeApplyableProvider
provider.bizfly - *terraform.NodeApplyableProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 10:57:20 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2020/07/30 10:57:20 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2020/07/30 10:57:20 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2020/07/30 10:57:20 [TRACE] AttachSchemaTransformer: attaching resource schema to bizfly_instance.test
2020/07/30 10:57:20 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.bizfly
2020/07/30 10:57:20 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2020/07/30 10:57:20 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/30 10:57:20 [DEBUG] ReferenceTransformer: "bizfly_instance.test" references: []
2020/07/30 10:57:20 [DEBUG] ReferenceTransformer: "var.login" references: []
2020/07/30 10:57:20 [DEBUG] ReferenceTransformer: "provider.bizfly" references: []
2020/07/30 10:57:20 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/30 10:57:20 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2020/07/30 10:57:20 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
bizfly_instance.test - *terraform.NodeValidatableResource
  provider.bizfly - *terraform.NodeApplyableProvider
meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  bizfly_instance.test - *terraform.NodeValidatableResource
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
provider.bizfly - *terraform.NodeApplyableProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 10:57:20 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/30 10:57:20 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/30 10:57:20 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2020/07/30 10:57:20 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2020/07/30 10:57:20 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2020/07/30 10:57:20 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
bizfly_instance.test - *terraform.NodeValidatableResource
  provider.bizfly - *terraform.NodeApplyableProvider
meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  bizfly_instance.test - *terraform.NodeValidatableResource
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
provider.bizfly - *terraform.NodeApplyableProvider
provider.bizfly (close) - *terraform.graphNodeCloseProvider
  bizfly_instance.test - *terraform.NodeValidatableResource
  provider.bizfly - *terraform.NodeApplyableProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 10:57:20 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2020/07/30 10:57:20 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer (no changes)
2020/07/30 10:57:20 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/30 10:57:20 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
bizfly_instance.test - *terraform.NodeValidatableResource
  provider.bizfly - *terraform.NodeApplyableProvider
meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  bizfly_instance.test - *terraform.NodeValidatableResource
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
provider.bizfly - *terraform.NodeApplyableProvider
provider.bizfly (close) - *terraform.graphNodeCloseProvider
  bizfly_instance.test - *terraform.NodeValidatableResource
  provider.bizfly - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 10:57:20 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2020/07/30 10:57:20 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
bizfly_instance.test - *terraform.NodeValidatableResource
  provider.bizfly - *terraform.NodeApplyableProvider
meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  bizfly_instance.test - *terraform.NodeValidatableResource
  var.login - *terraform.NodeRootVariable
provider.bizfly - *terraform.NodeApplyableProvider
provider.bizfly (close) - *terraform.graphNodeCloseProvider
  bizfly_instance.test - *terraform.NodeValidatableResource
root - terraform.graphNodeRoot
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 10:57:20 [DEBUG] Starting graph walk: walkValidate
2020/07/30 10:57:20 [TRACE] dag/walk: updating graph
2020/07/30 10:57:20 [TRACE] dag/walk: added new vertex: "provider.bizfly"
2020/07/30 10:57:20 [TRACE] dag/walk: added new vertex: "meta.count-boundary (EachMode fixup)"
2020/07/30 10:57:20 [TRACE] dag/walk: added new vertex: "provider.bizfly (close)"
2020/07/30 10:57:20 [TRACE] dag/walk: added new vertex: "root"
2020/07/30 10:57:20 [TRACE] dag/walk: added new vertex: "bizfly_instance.test"
2020/07/30 10:57:20 [TRACE] dag/walk: added new vertex: "var.login"
2020/07/30 10:57:20 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "var.login"
2020/07/30 10:57:20 [TRACE] dag/walk: added edge: "provider.bizfly (close)" waiting on "bizfly_instance.test"
2020/07/30 10:57:20 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (EachMode fixup)"
2020/07/30 10:57:20 [TRACE] dag/walk: added edge: "root" waiting on "provider.bizfly (close)"
2020/07/30 10:57:20 [TRACE] dag/walk: added edge: "bizfly_instance.test" waiting on "provider.bizfly"
2020/07/30 10:57:20 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "bizfly_instance.test"
2020/07/30 10:57:20 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (EachMode fixup)", sending new deps
2020/07/30 10:57:20 [TRACE] dag/walk: dependencies changed for "provider.bizfly (close)", sending new deps
2020/07/30 10:57:20 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2020/07/30 10:57:20 [TRACE] dag/walk: dependencies changed for "bizfly_instance.test", sending new deps
2020/07/30 10:57:20 [TRACE] dag/walk: visiting "provider.bizfly"
2020/07/30 10:57:20 [TRACE] dag/walk: visiting "var.login"
2020/07/30 10:57:20 [TRACE] vertex "var.login": starting visit (*terraform.NodeRootVariable)
2020/07/30 10:57:20 [TRACE] vertex "provider.bizfly": starting visit (*terraform.NodeApplyableProvider)
2020/07/30 10:57:20 [TRACE] vertex "provider.bizfly": evaluating
2020/07/30 10:57:20 [TRACE] vertex "var.login": visit complete
2020/07/30 10:57:20 [TRACE] [walkValidate] Entering eval tree: provider.bizfly
2020/07/30 10:57:20 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 10:57:20 [TRACE] <root>: eval: *terraform.EvalInitProvider
2020-07-30T10:57:20.908+0700 [INFO]  plugin: configuring client automatic mTLS
2020-07-30T10:57:20.931+0700 [DEBUG] plugin: starting plugin: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly args=[/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly]
2020-07-30T10:57:20.935+0700 [DEBUG] plugin: plugin started: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=48258
2020-07-30T10:57:20.935+0700 [DEBUG] plugin: waiting for RPC address: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly
2020-07-30T10:57:20.953+0700 [INFO]  plugin.terraform-provider-bizfly: configuring server automatic mTLS: timestamp=2020-07-30T10:57:20.953+0700
2020-07-30T10:57:20.980+0700 [DEBUG] plugin: using plugin: version=5
2020-07-30T10:57:20.980+0700 [DEBUG] plugin.terraform-provider-bizfly: plugin address: address=/var/folders/0r/zdwrk7wn22vd_g32twvblrpc0000gn/T/plugin462188289 network=unix timestamp=2020-07-30T10:57:20.979+0700
2020/07/30 10:57:20 [TRACE] BuiltinEvalContext: Initialized "bizfly" provider for provider.bizfly
2020/07/30 10:57:20 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 10:57:20 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/07/30 10:57:20 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 10:57:20 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 10:57:20 [TRACE] <root>: eval: *terraform.EvalValidateProvider
2020/07/30 10:57:20 [TRACE] buildProviderConfig for provider.bizfly: using explicit config only
2020/07/30 10:57:20 [TRACE] GRPCProvider: GetSchema
2020/07/30 10:57:21 [TRACE] GRPCProvider: PrepareProviderConfig
2020/07/30 10:57:21 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 10:57:21 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 10:57:21 [TRACE] [walkValidate] Exiting eval tree: provider.bizfly
2020/07/30 10:57:21 [TRACE] vertex "provider.bizfly": visit complete
2020/07/30 10:57:21 [TRACE] dag/walk: visiting "bizfly_instance.test"
2020/07/30 10:57:21 [TRACE] vertex "bizfly_instance.test": starting visit (*terraform.NodeValidatableResource)
2020/07/30 10:57:21 [TRACE] vertex "bizfly_instance.test": evaluating
2020/07/30 10:57:21 [TRACE] [walkValidate] Entering eval tree: bizfly_instance.test
2020/07/30 10:57:21 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 10:57:21 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 10:57:21 [TRACE] <root>: eval: *terraform.EvalValidateResource
2020/07/30 10:57:21 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/07/30 10:57:21 [TRACE] [walkValidate] Exiting eval tree: bizfly_instance.test
2020/07/30 10:57:21 [TRACE] vertex "bizfly_instance.test": visit complete
2020/07/30 10:57:21 [TRACE] dag/walk: visiting "provider.bizfly (close)"
2020/07/30 10:57:21 [TRACE] vertex "provider.bizfly (close)": starting visit (*terraform.graphNodeCloseProvider)
2020/07/30 10:57:21 [TRACE] vertex "provider.bizfly (close)": evaluating
2020/07/30 10:57:21 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2020/07/30 10:57:21 [TRACE] [walkValidate] Entering eval tree: provider.bizfly (close)
2020/07/30 10:57:21 [TRACE] <root>: eval: *terraform.EvalCloseProvider
2020/07/30 10:57:21 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2020/07/30 10:57:21 [TRACE] vertex "meta.count-boundary (EachMode fixup)": evaluating
2020/07/30 10:57:21 [TRACE] GRPCProvider: Close
2020/07/30 10:57:21 [TRACE] [walkValidate] Entering eval tree: meta.count-boundary (EachMode fixup)
2020/07/30 10:57:21 [TRACE] <root>: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2020/07/30 10:57:21 [TRACE] [walkValidate] Exiting eval tree: meta.count-boundary (EachMode fixup)
2020/07/30 10:57:21 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2020-07-30T10:57:21.038+0700 [DEBUG] plugin: plugin process exited: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=48258
2020-07-30T10:57:21.038+0700 [DEBUG] plugin: plugin exited
2020/07/30 10:57:21 [TRACE] [walkValidate] Exiting eval tree: provider.bizfly (close)
2020/07/30 10:57:21 [TRACE] vertex "provider.bizfly (close)": visit complete
2020/07/30 10:57:21 [TRACE] dag/walk: visiting "root"
2020/07/30 10:57:21 [TRACE] vertex "root": starting visit (terraform.graphNodeRoot)
2020/07/30 10:57:21 [TRACE] vertex "root": visit complete
2020/07/30 10:57:21 [INFO] backend/local: apply calling Refresh
2020/07/30 10:57:21 [INFO] terraform: building graph: GraphTypeRefresh
2020/07/30 10:57:21 [TRACE] No managed resources in state during refresh; skipping managed resource transformer
2020/07/30 10:57:21 [TRACE] Executing graph transform *terraform.ConfigTransformer
2020/07/30 10:57:21 [TRACE] ConfigTransformer: Starting for path: 
2020/07/30 10:57:21 [TRACE] Completed graph transform *terraform.ConfigTransformer (no changes)
2020/07/30 10:57:21 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2020/07/30 10:57:21 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2020/07/30 10:57:21 [TRACE] Executing graph transform *terraform.StateTransformer
2020/07/30 10:57:21 [TRACE] StateTransformer: state is empty, so nothing to do
2020/07/30 10:57:21 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2020/07/30 10:57:21 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/30 10:57:21 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/30 10:57:21 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2020/07/30 10:57:21 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2020/07/30 10:57:21 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2020/07/30 10:57:21 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
var.login - *terraform.NodeRootVariable
------
2020/07/30 10:57:21 [TRACE] Executing graph transform *terraform.LocalTransformer
2020/07/30 10:57:21 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2020/07/30 10:57:21 [TRACE] Executing graph transform *terraform.OutputTransformer
2020/07/30 10:57:21 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2020/07/30 10:57:21 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2020/07/30 10:57:21 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2020/07/30 10:57:21 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2020/07/30 10:57:21 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2020/07/30 10:57:21 [TRACE] ProviderConfigTransformer: attaching to "provider.bizfly" provider configuration from main.tf:1,1-18
2020/07/30 10:57:21 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
provider.bizfly - *terraform.NodeApplyableProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 10:57:21 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2020/07/30 10:57:21 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2020/07/30 10:57:21 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2020/07/30 10:57:21 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer (no changes)
2020/07/30 10:57:21 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2020/07/30 10:57:21 [DEBUG] pruning unused provider.bizfly
2020/07/30 10:57:21 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer with new graph:
var.login - *terraform.NodeRootVariable
------
2020/07/30 10:57:21 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2020/07/30 10:57:21 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2020/07/30 10:57:21 [TRACE] Completed graph transform *terraform.graphTransformerMulti (no changes)
2020/07/30 10:57:21 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2020/07/30 10:57:21 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2020/07/30 10:57:21 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/30 10:57:21 [DEBUG] ReferenceTransformer: "var.login" references: []
2020/07/30 10:57:21 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/30 10:57:21 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/30 10:57:21 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/30 10:57:21 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2020/07/30 10:57:21 [TRACE] Completed graph transform *terraform.CloseProviderTransformer (no changes)
2020/07/30 10:57:21 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/30 10:57:21 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/07/30 10:57:21 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2020/07/30 10:57:21 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer (no changes)
2020/07/30 10:57:21 [DEBUG] Starting graph walk: walkRefresh
2020/07/30 10:57:21 [TRACE] dag/walk: updating graph
2020/07/30 10:57:21 [TRACE] dag/walk: added new vertex: "var.login"
2020/07/30 10:57:21 [TRACE] dag/walk: visiting "var.login"
2020/07/30 10:57:21 [TRACE] vertex "var.login": starting visit (*terraform.NodeRootVariable)
2020/07/30 10:57:21 [TRACE] vertex "var.login": visit complete
2020/07/30 10:57:21 [INFO] backend/local: apply calling Plan
2020/07/30 10:57:21 [INFO] terraform: building graph: GraphTypePlan
2020/07/30 10:57:21 [TRACE] Executing graph transform *terraform.ConfigTransformer
2020/07/30 10:57:21 [TRACE] ConfigTransformer: Starting for path: 
2020/07/30 10:57:21 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
bizfly_instance.test - *terraform.NodePlannableResource
------
2020/07/30 10:57:21 [TRACE] Executing graph transform *terraform.LocalTransformer
2020/07/30 10:57:21 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2020/07/30 10:57:21 [TRACE] Executing graph transform *terraform.OutputTransformer
2020/07/30 10:57:21 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2020/07/30 10:57:21 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2020/07/30 10:57:21 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2020/07/30 10:57:21 [TRACE] Executing graph transform *terraform.StateTransformer
2020/07/30 10:57:21 [TRACE] StateTransformer: state is empty, so nothing to do
2020/07/30 10:57:21 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2020/07/30 10:57:21 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2020/07/30 10:57:21 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2020/07/30 10:57:21 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2020/07/30 10:57:21 [TRACE] AttachResourceConfigTransformer: attaching to "bizfly_instance.test" (*terraform.NodePlannableResource) config from main.tf:7,1-34
2020/07/30 10:57:21 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2020/07/30 10:57:21 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/30 10:57:21 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/30 10:57:21 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2020/07/30 10:57:21 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
bizfly_instance.test - *terraform.NodePlannableResource
var.login - *terraform.NodeRootVariable
------
2020/07/30 10:57:21 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2020/07/30 10:57:21 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2020/07/30 10:57:21 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2020/07/30 10:57:21 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2020/07/30 10:57:21 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2020/07/30 10:57:21 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2020/07/30 10:57:21 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2020/07/30 10:57:21 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2020/07/30 10:57:21 [TRACE] ProviderConfigTransformer: attaching to "provider.bizfly" provider configuration from main.tf:1,1-18
2020/07/30 10:57:21 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
bizfly_instance.test - *terraform.NodePlannableResource
provider.bizfly - *terraform.NodeApplyableProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 10:57:21 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2020/07/30 10:57:21 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2020/07/30 10:57:21 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2020/07/30 10:57:21 [TRACE] ProviderTransformer: bizfly_instance.test is provided by provider.bizfly or inherited equivalent
2020/07/30 10:57:21 [TRACE] ProviderTransformer: exact match for provider.bizfly serving bizfly_instance.test
2020/07/30 10:57:21 [DEBUG] ProviderTransformer: "bizfly_instance.test" (*terraform.NodePlannableResource) needs provider.bizfly
2020/07/30 10:57:21 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
bizfly_instance.test - *terraform.NodePlannableResource
  provider.bizfly - *terraform.NodeApplyableProvider
provider.bizfly - *terraform.NodeApplyableProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 10:57:21 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2020/07/30 10:57:21 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2020/07/30 10:57:21 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2020/07/30 10:57:21 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2020/07/30 10:57:21 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
bizfly_instance.test - *terraform.NodePlannableResource
  provider.bizfly - *terraform.NodeApplyableProvider
provider.bizfly - *terraform.NodeApplyableProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 10:57:21 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2020/07/30 10:57:21 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2020/07/30 10:57:21 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2020/07/30 10:57:21 [TRACE] AttachSchemaTransformer: attaching resource schema to bizfly_instance.test
2020/07/30 10:57:21 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.bizfly
2020/07/30 10:57:21 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2020/07/30 10:57:21 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/30 10:57:21 [DEBUG] ReferenceTransformer: "bizfly_instance.test" references: []
2020/07/30 10:57:21 [DEBUG] ReferenceTransformer: "var.login" references: []
2020/07/30 10:57:21 [DEBUG] ReferenceTransformer: "provider.bizfly" references: []
2020/07/30 10:57:21 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/30 10:57:21 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2020/07/30 10:57:21 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
bizfly_instance.test - *terraform.NodePlannableResource
  provider.bizfly - *terraform.NodeApplyableProvider
meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  bizfly_instance.test - *terraform.NodePlannableResource
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
provider.bizfly - *terraform.NodeApplyableProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 10:57:21 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/30 10:57:21 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/30 10:57:21 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2020/07/30 10:57:21 [TRACE] ForcedCBDTransformer: "bizfly_instance.test" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2020/07/30 10:57:21 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2020/07/30 10:57:21 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2020/07/30 10:57:21 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
bizfly_instance.test - *terraform.NodePlannableResource
  provider.bizfly - *terraform.NodeApplyableProvider
meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  bizfly_instance.test - *terraform.NodePlannableResource
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
provider.bizfly - *terraform.NodeApplyableProvider
provider.bizfly (close) - *terraform.graphNodeCloseProvider
  bizfly_instance.test - *terraform.NodePlannableResource
  provider.bizfly - *terraform.NodeApplyableProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 10:57:21 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2020/07/30 10:57:21 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer (no changes)
2020/07/30 10:57:21 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/30 10:57:21 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
bizfly_instance.test - *terraform.NodePlannableResource
  provider.bizfly - *terraform.NodeApplyableProvider
meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  bizfly_instance.test - *terraform.NodePlannableResource
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
provider.bizfly - *terraform.NodeApplyableProvider
provider.bizfly (close) - *terraform.graphNodeCloseProvider
  bizfly_instance.test - *terraform.NodePlannableResource
  provider.bizfly - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 10:57:21 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2020/07/30 10:57:21 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
bizfly_instance.test - *terraform.NodePlannableResource
  provider.bizfly - *terraform.NodeApplyableProvider
meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  bizfly_instance.test - *terraform.NodePlannableResource
  var.login - *terraform.NodeRootVariable
provider.bizfly - *terraform.NodeApplyableProvider
provider.bizfly (close) - *terraform.graphNodeCloseProvider
  bizfly_instance.test - *terraform.NodePlannableResource
root - terraform.graphNodeRoot
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 10:57:21 [DEBUG] Starting graph walk: walkPlan
2020/07/30 10:57:21 [TRACE] dag/walk: updating graph
2020/07/30 10:57:21 [TRACE] dag/walk: added new vertex: "meta.count-boundary (EachMode fixup)"
2020/07/30 10:57:21 [TRACE] dag/walk: added new vertex: "provider.bizfly (close)"
2020/07/30 10:57:21 [TRACE] dag/walk: added new vertex: "root"
2020/07/30 10:57:21 [TRACE] dag/walk: added new vertex: "bizfly_instance.test"
2020/07/30 10:57:21 [TRACE] dag/walk: added new vertex: "var.login"
2020/07/30 10:57:21 [TRACE] dag/walk: added new vertex: "provider.bizfly"
2020/07/30 10:57:21 [TRACE] dag/walk: added edge: "root" waiting on "provider.bizfly (close)"
2020/07/30 10:57:21 [TRACE] dag/walk: added edge: "bizfly_instance.test" waiting on "provider.bizfly"
2020/07/30 10:57:21 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "bizfly_instance.test"
2020/07/30 10:57:21 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "var.login"
2020/07/30 10:57:21 [TRACE] dag/walk: added edge: "provider.bizfly (close)" waiting on "bizfly_instance.test"
2020/07/30 10:57:21 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (EachMode fixup)"
2020/07/30 10:57:21 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2020/07/30 10:57:21 [TRACE] dag/walk: dependencies changed for "bizfly_instance.test", sending new deps
2020/07/30 10:57:21 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (EachMode fixup)", sending new deps
2020/07/30 10:57:21 [TRACE] dag/walk: dependencies changed for "provider.bizfly (close)", sending new deps
2020/07/30 10:57:21 [TRACE] dag/walk: visiting "var.login"
2020/07/30 10:57:21 [TRACE] vertex "var.login": starting visit (*terraform.NodeRootVariable)
2020/07/30 10:57:21 [TRACE] vertex "var.login": visit complete
2020/07/30 10:57:21 [TRACE] dag/walk: visiting "provider.bizfly"
2020/07/30 10:57:21 [TRACE] vertex "provider.bizfly": starting visit (*terraform.NodeApplyableProvider)
2020/07/30 10:57:21 [TRACE] vertex "provider.bizfly": evaluating
2020/07/30 10:57:21 [TRACE] [walkPlan] Entering eval tree: provider.bizfly
2020/07/30 10:57:21 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 10:57:21 [TRACE] <root>: eval: *terraform.EvalInitProvider
2020-07-30T10:57:21.040+0700 [INFO]  plugin: configuring client automatic mTLS
2020-07-30T10:57:21.063+0700 [DEBUG] plugin: starting plugin: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly args=[/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly]
2020-07-30T10:57:21.067+0700 [DEBUG] plugin: plugin started: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=48259
2020-07-30T10:57:21.067+0700 [DEBUG] plugin: waiting for RPC address: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly
2020-07-30T10:57:21.085+0700 [INFO]  plugin.terraform-provider-bizfly: configuring server automatic mTLS: timestamp=2020-07-30T10:57:21.085+0700
2020-07-30T10:57:21.112+0700 [DEBUG] plugin: using plugin: version=5
2020-07-30T10:57:21.112+0700 [DEBUG] plugin.terraform-provider-bizfly: plugin address: address=/var/folders/0r/zdwrk7wn22vd_g32twvblrpc0000gn/T/plugin554061438 network=unix timestamp=2020-07-30T10:57:21.112+0700
2020/07/30 10:57:21 [TRACE] BuiltinEvalContext: Initialized "bizfly" provider for provider.bizfly
2020/07/30 10:57:21 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 10:57:21 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 10:57:21 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/07/30 10:57:21 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 10:57:21 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 10:57:21 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/07/30 10:57:21 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 10:57:21 [TRACE] <root>: eval: *terraform.EvalConfigProvider
2020/07/30 10:57:21 [TRACE] buildProviderConfig for provider.bizfly: using explicit config only
2020/07/30 10:57:21 [TRACE] GRPCProvider: GetSchema
2020/07/30 10:57:21 [TRACE] GRPCProvider: Configure
2020/07/30 10:57:22 [TRACE] [walkPlan] Exiting eval tree: provider.bizfly
2020/07/30 10:57:22 [TRACE] vertex "provider.bizfly": visit complete
2020/07/30 10:57:22 [TRACE] dag/walk: visiting "bizfly_instance.test"
2020/07/30 10:57:22 [TRACE] vertex "bizfly_instance.test": starting visit (*terraform.NodePlannableResource)
2020/07/30 10:57:22 [TRACE] vertex "bizfly_instance.test": evaluating
2020/07/30 10:57:22 [TRACE] [walkPlan] Entering eval tree: bizfly_instance.test
2020/07/30 10:57:22 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/07/30 10:57:22 [TRACE] [walkPlan] Exiting eval tree: bizfly_instance.test
2020/07/30 10:57:22 [TRACE] vertex "bizfly_instance.test": expanding dynamic subgraph
2020/07/30 10:57:22 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/07/30 10:57:22 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
bizfly_instance.test - *terraform.NodePlannableResourceInstance
------
2020/07/30 10:57:22 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/07/30 10:57:22 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/07/30 10:57:22 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/30 10:57:22 [DEBUG] Resource instance state not found for node "bizfly_instance.test", instance bizfly_instance.test
2020/07/30 10:57:22 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/30 10:57:22 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/30 10:57:22 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/30 10:57:22 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/30 10:57:22 [DEBUG] ReferenceTransformer: "bizfly_instance.test" references: []
2020/07/30 10:57:22 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/30 10:57:22 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/30 10:57:22 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/07/30 10:57:22 [TRACE] vertex "bizfly_instance.test": entering dynamic subgraph
2020/07/30 10:57:22 [TRACE] dag/walk: updating graph
2020/07/30 10:57:22 [TRACE] dag/walk: added new vertex: "bizfly_instance.test"
2020/07/30 10:57:22 [TRACE] dag/walk: visiting "bizfly_instance.test"
2020/07/30 10:57:22 [TRACE] vertex "bizfly_instance.test": starting visit (*terraform.NodePlannableResourceInstance)
2020/07/30 10:57:22 [TRACE] vertex "bizfly_instance.test": evaluating
2020/07/30 10:57:22 [TRACE] [walkPlan] Entering eval tree: bizfly_instance.test
2020/07/30 10:57:22 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 10:57:22 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 10:57:22 [TRACE] <root>: eval: *terraform.EvalReadState
2020/07/30 10:57:22 [TRACE] EvalReadState: reading state for bizfly_instance.test
2020/07/30 10:57:22 [TRACE] EvalReadState: no state present for bizfly_instance.test
2020/07/30 10:57:22 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2020/07/30 10:57:22 [TRACE] <root>: eval: *terraform.EvalDiff
2020/07/30 10:57:22 [TRACE] Re-validating config for "bizfly_instance.test"
2020/07/30 10:57:22 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/07/30 10:57:22 [TRACE] GRPCProvider: PlanResourceChange
2020/07/30 10:57:22 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2020/07/30 10:57:22 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/07/30 10:57:22 [TRACE] EvalWriteState: writing current state object for bizfly_instance.test
2020/07/30 10:57:22 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/07/30 10:57:22 [TRACE] EvalWriteDiff: recorded Create change for bizfly_instance.test
2020/07/30 10:57:22 [TRACE] [walkPlan] Exiting eval tree: bizfly_instance.test
2020/07/30 10:57:22 [TRACE] vertex "bizfly_instance.test": visit complete
2020/07/30 10:57:22 [TRACE] vertex "bizfly_instance.test": dynamic subgraph completed successfully
2020/07/30 10:57:22 [TRACE] vertex "bizfly_instance.test": visit complete
2020/07/30 10:57:22 [TRACE] dag/walk: visiting "provider.bizfly (close)"
2020/07/30 10:57:22 [TRACE] vertex "provider.bizfly (close)": starting visit (*terraform.graphNodeCloseProvider)
2020/07/30 10:57:22 [TRACE] vertex "provider.bizfly (close)": evaluating
2020/07/30 10:57:22 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2020/07/30 10:57:22 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2020/07/30 10:57:22 [TRACE] [walkPlan] Entering eval tree: provider.bizfly (close)
2020/07/30 10:57:22 [TRACE] <root>: eval: *terraform.EvalCloseProvider
2020/07/30 10:57:22 [TRACE] GRPCProvider: Close
2020/07/30 10:57:22 [TRACE] vertex "meta.count-boundary (EachMode fixup)": evaluating
2020/07/30 10:57:22 [TRACE] [walkPlan] Entering eval tree: meta.count-boundary (EachMode fixup)
2020/07/30 10:57:22 [TRACE] <root>: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2020/07/30 10:57:22 [TRACE] [walkPlan] Exiting eval tree: meta.count-boundary (EachMode fixup)
2020/07/30 10:57:22 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2020-07-30T10:57:22.484+0700 [DEBUG] plugin: plugin process exited: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=48259
2020-07-30T10:57:22.484+0700 [DEBUG] plugin: plugin exited
2020/07/30 10:57:22 [TRACE] [walkPlan] Exiting eval tree: provider.bizfly (close)
2020/07/30 10:57:22 [TRACE] vertex "provider.bizfly (close)": visit complete
2020/07/30 10:57:22 [TRACE] dag/walk: visiting "root"
2020/07/30 10:57:22 [TRACE] vertex "root": starting visit (terraform.graphNodeRoot)
2020/07/30 10:57:22 [TRACE] vertex "root": visit complete
2020/07/30 10:57:22 [DEBUG] command: asking for input: "Do you want to perform these actions?"
2020/07/30 10:57:25 [INFO] backend/local: apply calling Apply
2020/07/30 10:57:25 [INFO] terraform: building graph: GraphTypeApply
2020/07/30 10:57:25 [TRACE] Executing graph transform *terraform.ConfigTransformer
2020/07/30 10:57:25 [TRACE] ConfigTransformer: Starting for path: 
2020/07/30 10:57:25 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
------
2020/07/30 10:57:25 [TRACE] Executing graph transform *terraform.DiffTransformer
2020/07/30 10:57:25 [TRACE] DiffTransformer starting
2020/07/30 10:57:25 [TRACE] DiffTransformer: found Create change for bizfly_instance.test 
2020/07/30 10:57:25 [TRACE] DiffTransformer: bizfly_instance.test will be represented by bizfly_instance.test
2020/07/30 10:57:25 [TRACE] DiffTransformer complete
2020/07/30 10:57:25 [TRACE] Completed graph transform *terraform.DiffTransformer with new graph:
bizfly_instance.test - *terraform.NodeApplyableResourceInstance
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
------
2020/07/30 10:57:25 [TRACE] Executing graph transform *terraform.OrphanResourceTransformer
2020/07/30 10:57:25 [TRACE] Completed graph transform *terraform.OrphanResourceTransformer (no changes)
2020/07/30 10:57:25 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2020/07/30 10:57:25 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2020/07/30 10:57:25 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2020/07/30 10:57:25 [TRACE] AttachResourceConfigTransformer: attaching to "bizfly_instance.test (prepare state)" (*terraform.NodeApplyableResource) config from main.tf:7,1-34
2020/07/30 10:57:25 [TRACE] AttachResourceConfigTransformer: attaching to "bizfly_instance.test" (*terraform.NodeApplyableResourceInstance) config from main.tf:7,1-34
2020/07/30 10:57:25 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2020/07/30 10:57:25 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/30 10:57:25 [DEBUG] Resource state not found for node "bizfly_instance.test", instance bizfly_instance.test
2020/07/30 10:57:25 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/30 10:57:25 [TRACE] Executing graph transform *terraform.DestroyEdgeTransformer
2020/07/30 10:57:25 [TRACE] Completed graph transform *terraform.DestroyEdgeTransformer (no changes)
2020/07/30 10:57:25 [TRACE] Executing graph transform *terraform.CBDEdgeTransformer
2020/07/30 10:57:25 [TRACE] Completed graph transform *terraform.CBDEdgeTransformer (no changes)
2020/07/30 10:57:25 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2020/07/30 10:57:25 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2020/07/30 10:57:25 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2020/07/30 10:57:25 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2020/07/30 10:57:25 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2020/07/30 10:57:25 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
bizfly_instance.test - *terraform.NodeApplyableResourceInstance
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
var.login - *terraform.NodeRootVariable
------
2020/07/30 10:57:25 [TRACE] Executing graph transform *terraform.LocalTransformer
2020/07/30 10:57:25 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2020/07/30 10:57:25 [TRACE] Executing graph transform *terraform.OutputTransformer
2020/07/30 10:57:25 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2020/07/30 10:57:25 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2020/07/30 10:57:25 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2020/07/30 10:57:25 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2020/07/30 10:57:25 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2020/07/30 10:57:25 [TRACE] ProviderConfigTransformer: attaching to "provider.bizfly" provider configuration from main.tf:1,1-18
2020/07/30 10:57:25 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
bizfly_instance.test - *terraform.NodeApplyableResourceInstance
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
provider.bizfly - *terraform.NodeApplyableProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 10:57:25 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2020/07/30 10:57:25 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2020/07/30 10:57:25 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2020/07/30 10:57:25 [TRACE] ProviderTransformer: bizfly_instance.test (prepare state) is provided by provider.bizfly or inherited equivalent
2020/07/30 10:57:25 [TRACE] ProviderTransformer: bizfly_instance.test is provided by provider.bizfly or inherited equivalent
2020/07/30 10:57:25 [TRACE] ProviderTransformer: exact match for provider.bizfly serving bizfly_instance.test (prepare state)
2020/07/30 10:57:25 [DEBUG] ProviderTransformer: "bizfly_instance.test (prepare state)" (*terraform.NodeApplyableResource) needs provider.bizfly
2020/07/30 10:57:25 [TRACE] ProviderTransformer: exact match for provider.bizfly serving bizfly_instance.test
2020/07/30 10:57:25 [DEBUG] ProviderTransformer: "bizfly_instance.test" (*terraform.NodeApplyableResourceInstance) needs provider.bizfly
2020/07/30 10:57:25 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
bizfly_instance.test - *terraform.NodeApplyableResourceInstance
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
  provider.bizfly - *terraform.NodeApplyableProvider
bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
  provider.bizfly - *terraform.NodeApplyableProvider
provider.bizfly - *terraform.NodeApplyableProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 10:57:25 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2020/07/30 10:57:25 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2020/07/30 10:57:25 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2020/07/30 10:57:25 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2020/07/30 10:57:25 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
bizfly_instance.test - *terraform.NodeApplyableResourceInstance
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
  provider.bizfly - *terraform.NodeApplyableProvider
bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
  provider.bizfly - *terraform.NodeApplyableProvider
provider.bizfly - *terraform.NodeApplyableProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 10:57:25 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2020/07/30 10:57:25 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2020/07/30 10:57:25 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2020/07/30 10:57:25 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.bizfly
2020/07/30 10:57:25 [TRACE] AttachSchemaTransformer: attaching resource schema to bizfly_instance.test (prepare state)
2020/07/30 10:57:25 [TRACE] AttachSchemaTransformer: attaching resource schema to bizfly_instance.test
2020/07/30 10:57:25 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2020/07/30 10:57:25 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/30 10:57:25 [DEBUG] ReferenceTransformer: "bizfly_instance.test (prepare state)" references: []
2020/07/30 10:57:25 [DEBUG] ReferenceTransformer: "bizfly_instance.test" references: []
2020/07/30 10:57:25 [DEBUG] ReferenceTransformer: "var.login" references: []
2020/07/30 10:57:25 [DEBUG] ReferenceTransformer: "provider.bizfly" references: []
2020/07/30 10:57:25 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/30 10:57:25 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2020/07/30 10:57:25 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
bizfly_instance.test - *terraform.NodeApplyableResourceInstance
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
  provider.bizfly - *terraform.NodeApplyableProvider
bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
  provider.bizfly - *terraform.NodeApplyableProvider
meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  bizfly_instance.test - *terraform.NodeApplyableResourceInstance
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
provider.bizfly - *terraform.NodeApplyableProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 10:57:25 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/30 10:57:25 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/30 10:57:25 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2020/07/30 10:57:25 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
bizfly_instance.test - *terraform.NodeApplyableResourceInstance
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
  provider.bizfly - *terraform.NodeApplyableProvider
bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
  provider.bizfly - *terraform.NodeApplyableProvider
meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  bizfly_instance.test - *terraform.NodeApplyableResourceInstance
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
provider.bizfly - *terraform.NodeApplyableProvider
provider.bizfly (close) - *terraform.graphNodeCloseProvider
  bizfly_instance.test - *terraform.NodeApplyableResourceInstance
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
  provider.bizfly - *terraform.NodeApplyableProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 10:57:25 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2020/07/30 10:57:25 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer (no changes)
2020/07/30 10:57:25 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/30 10:57:25 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
bizfly_instance.test - *terraform.NodeApplyableResourceInstance
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
  provider.bizfly - *terraform.NodeApplyableProvider
bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
  provider.bizfly - *terraform.NodeApplyableProvider
meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  bizfly_instance.test - *terraform.NodeApplyableResourceInstance
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
provider.bizfly - *terraform.NodeApplyableProvider
provider.bizfly (close) - *terraform.graphNodeCloseProvider
  bizfly_instance.test - *terraform.NodeApplyableResourceInstance
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
  provider.bizfly - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 10:57:25 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2020/07/30 10:57:25 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
bizfly_instance.test - *terraform.NodeApplyableResourceInstance
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
  provider.bizfly - *terraform.NodeApplyableProvider
meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  bizfly_instance.test - *terraform.NodeApplyableResourceInstance
  var.login - *terraform.NodeRootVariable
provider.bizfly - *terraform.NodeApplyableProvider
provider.bizfly (close) - *terraform.graphNodeCloseProvider
  bizfly_instance.test - *terraform.NodeApplyableResourceInstance
root - terraform.graphNodeRoot
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 10:57:25 [DEBUG] Starting graph walk: walkApply
2020/07/30 10:57:25 [TRACE] dag/walk: updating graph
2020/07/30 10:57:25 [TRACE] dag/walk: added new vertex: "root"
2020/07/30 10:57:25 [TRACE] dag/walk: added new vertex: "bizfly_instance.test (prepare state)"
2020/07/30 10:57:25 [TRACE] dag/walk: added new vertex: "bizfly_instance.test"
2020/07/30 10:57:25 [TRACE] dag/walk: added new vertex: "var.login"
2020/07/30 10:57:25 [TRACE] dag/walk: added new vertex: "provider.bizfly"
2020/07/30 10:57:25 [TRACE] dag/walk: added new vertex: "meta.count-boundary (EachMode fixup)"
2020/07/30 10:57:25 [TRACE] dag/walk: added new vertex: "provider.bizfly (close)"
2020/07/30 10:57:25 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "var.login"
2020/07/30 10:57:25 [TRACE] dag/walk: added edge: "root" waiting on "provider.bizfly (close)"
2020/07/30 10:57:25 [TRACE] dag/walk: added edge: "bizfly_instance.test" waiting on "bizfly_instance.test (prepare state)"
2020/07/30 10:57:25 [TRACE] dag/walk: added edge: "provider.bizfly (close)" waiting on "bizfly_instance.test"
2020/07/30 10:57:25 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (EachMode fixup)"
2020/07/30 10:57:25 [TRACE] dag/walk: added edge: "bizfly_instance.test (prepare state)" waiting on "provider.bizfly"
2020/07/30 10:57:25 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "bizfly_instance.test"
2020/07/30 10:57:25 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (EachMode fixup)", sending new deps
2020/07/30 10:57:25 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2020/07/30 10:57:25 [TRACE] dag/walk: dependencies changed for "bizfly_instance.test", sending new deps
2020/07/30 10:57:25 [TRACE] dag/walk: dependencies changed for "provider.bizfly (close)", sending new deps
2020/07/30 10:57:25 [TRACE] dag/walk: dependencies changed for "bizfly_instance.test (prepare state)", sending new deps
2020/07/30 10:57:25 [TRACE] dag/walk: visiting "var.login"
2020/07/30 10:57:25 [TRACE] vertex "var.login": starting visit (*terraform.NodeRootVariable)
2020/07/30 10:57:25 [TRACE] dag/walk: visiting "provider.bizfly"
2020/07/30 10:57:25 [TRACE] vertex "var.login": visit complete
2020/07/30 10:57:25 [TRACE] vertex "provider.bizfly": starting visit (*terraform.NodeApplyableProvider)
2020/07/30 10:57:25 [TRACE] vertex "provider.bizfly": evaluating
2020/07/30 10:57:25 [TRACE] [walkApply] Entering eval tree: provider.bizfly
2020/07/30 10:57:25 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 10:57:25 [TRACE] <root>: eval: *terraform.EvalInitProvider
2020-07-30T10:57:25.204+0700 [INFO]  plugin: configuring client automatic mTLS
2020-07-30T10:57:25.234+0700 [DEBUG] plugin: starting plugin: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly args=[/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly]
2020-07-30T10:57:25.237+0700 [DEBUG] plugin: plugin started: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=48264
2020-07-30T10:57:25.237+0700 [DEBUG] plugin: waiting for RPC address: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly
2020-07-30T10:57:25.254+0700 [INFO]  plugin.terraform-provider-bizfly: configuring server automatic mTLS: timestamp=2020-07-30T10:57:25.254+0700
2020-07-30T10:57:25.281+0700 [DEBUG] plugin: using plugin: version=5
2020-07-30T10:57:25.281+0700 [DEBUG] plugin.terraform-provider-bizfly: plugin address: address=/var/folders/0r/zdwrk7wn22vd_g32twvblrpc0000gn/T/plugin884017831 network=unix timestamp=2020-07-30T10:57:25.280+0700
2020/07/30 10:57:25 [TRACE] BuiltinEvalContext: Initialized "bizfly" provider for provider.bizfly
2020/07/30 10:57:25 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 10:57:25 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 10:57:25 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/07/30 10:57:25 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 10:57:25 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 10:57:25 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/07/30 10:57:25 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 10:57:25 [TRACE] <root>: eval: *terraform.EvalConfigProvider
2020/07/30 10:57:25 [TRACE] buildProviderConfig for provider.bizfly: using explicit config only
2020/07/30 10:57:25 [TRACE] GRPCProvider: GetSchema
2020/07/30 10:57:25 [TRACE] GRPCProvider: Configure
2020/07/30 10:57:26 [TRACE] [walkApply] Exiting eval tree: provider.bizfly
2020/07/30 10:57:26 [TRACE] vertex "provider.bizfly": visit complete
2020/07/30 10:57:26 [TRACE] dag/walk: visiting "bizfly_instance.test (prepare state)"
2020/07/30 10:57:26 [TRACE] vertex "bizfly_instance.test (prepare state)": starting visit (*terraform.NodeApplyableResource)
2020/07/30 10:57:26 [TRACE] vertex "bizfly_instance.test (prepare state)": evaluating
2020/07/30 10:57:26 [TRACE] [walkApply] Entering eval tree: bizfly_instance.test (prepare state)
2020/07/30 10:57:26 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/07/30 10:57:26 [TRACE] [walkApply] Exiting eval tree: bizfly_instance.test (prepare state)
2020/07/30 10:57:26 [TRACE] vertex "bizfly_instance.test (prepare state)": visit complete
2020/07/30 10:57:26 [TRACE] dag/walk: visiting "bizfly_instance.test"
2020/07/30 10:57:26 [TRACE] vertex "bizfly_instance.test": starting visit (*terraform.NodeApplyableResourceInstance)
2020/07/30 10:57:26 [TRACE] vertex "bizfly_instance.test": evaluating
2020/07/30 10:57:26 [TRACE] [walkApply] Entering eval tree: bizfly_instance.test
2020/07/30 10:57:26 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 10:57:26 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 10:57:26 [TRACE] <root>: eval: *terraform.EvalReadDiff
2020/07/30 10:57:26 [TRACE] EvalReadDiff: Read Create change from plan for bizfly_instance.test
2020/07/30 10:57:26 [TRACE] <root>: eval: *terraform.EvalIf
2020/07/30 10:57:26 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 10:57:26 [TRACE] <root>: eval: *terraform.EvalIf
2020/07/30 10:57:26 [TRACE] <root>: eval: *terraform.EvalReadState
2020/07/30 10:57:26 [TRACE] EvalReadState: reading state for bizfly_instance.test
2020/07/30 10:57:26 [TRACE] EvalReadState: no state present for bizfly_instance.test
2020/07/30 10:57:26 [TRACE] <root>: eval: *terraform.EvalReadDiff
2020/07/30 10:57:26 [TRACE] EvalReadDiff: Read Create change from plan for bizfly_instance.test
2020/07/30 10:57:26 [TRACE] <root>: eval: *terraform.EvalDiff
2020/07/30 10:57:26 [TRACE] Re-validating config for "bizfly_instance.test"
2020/07/30 10:57:26 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/07/30 10:57:26 [TRACE] GRPCProvider: PlanResourceChange
2020/07/30 10:57:26 [TRACE] <root>: eval: *terraform.EvalCheckPlannedChange
2020/07/30 10:57:26 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2020/07/30 10:57:26 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 10:57:26 [TRACE] <root>: eval: *terraform.EvalReadState
2020/07/30 10:57:26 [TRACE] EvalReadState: reading state for bizfly_instance.test
2020/07/30 10:57:26 [TRACE] EvalReadState: no state present for bizfly_instance.test
2020/07/30 10:57:26 [TRACE] <root>: eval: *terraform.EvalReduceDiff
2020/07/30 10:57:26 [TRACE] <root>: eval: *terraform.EvalIf
2020/07/30 10:57:26 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 10:57:26 [TRACE] <root>: eval: *terraform.EvalApplyPre
2020/07/30 10:57:26 [TRACE] <root>: eval: *terraform.EvalApply
2020/07/30 10:57:26 [DEBUG] bizfly_instance.test: applying the planned Create change
2020/07/30 10:57:26 [TRACE] GRPCProvider: ApplyResourceChange
2020-07-30T10:57:26.789+0700 [DEBUG] plugin.terraform-provider-bizfly: panic: interface conversion: interface {} is map[string]interface {}, not string
2020-07-30T10:57:26.789+0700 [DEBUG] plugin.terraform-provider-bizfly: 
2020-07-30T10:57:26.789+0700 [DEBUG] plugin.terraform-provider-bizfly: goroutine 41 [running]:
2020-07-30T10:57:26.789+0700 [DEBUG] plugin.terraform-provider-bizfly: terraform-provider-bizfly/provider.resouceInstanceCreate(0xc0001c75e0, 0x1aeb820, 0xc00051f900, 0x2, 0x25cf840)
2020-07-30T10:57:26.789+0700 [DEBUG] plugin.terraform-provider-bizfly: 	/Users/hung/go/src/terraform-provider-bizfly/provider/resource_instance.go:145 +0x33c
2020-07-30T10:57:26.789+0700 [DEBUG] plugin.terraform-provider-bizfly: github.com/hashicorp/terraform-plugin-sdk/helper/schema.(*Resource).Apply(0xc00007e2d0, 0xc0005e5220, 0xc0005da6a0, 0x1aeb820, 0xc00051f900, 0x1a9e901, 0xc000415198, 0xc0002cf620)
2020-07-30T10:57:26.789+0700 [DEBUG] plugin.terraform-provider-bizfly: 	/Users/hung/go/pkg/mod/github.com/hashicorp/terraform-plugin-sdk@v1.15.0/helper/schema/resource.go:310 +0x365
2020-07-30T10:57:26.789+0700 [DEBUG] plugin.terraform-provider-bizfly: github.com/hashicorp/terraform-plugin-sdk/helper/schema.(*Provider).Apply(0xc000522000, 0xc0007f1a10, 0xc0005e5220, 0xc0005da6a0, 0xc000462088, 0xc000010758, 0x1aa0540)
2020-07-30T10:57:26.789+0700 [DEBUG] plugin.terraform-provider-bizfly: 	/Users/hung/go/pkg/mod/github.com/hashicorp/terraform-plugin-sdk@v1.15.0/helper/schema/provider.go:294 +0x99
2020-07-30T10:57:26.789+0700 [DEBUG] plugin.terraform-provider-bizfly: github.com/hashicorp/terraform-plugin-sdk/internal/helper/plugin.(*GRPCProviderServer).ApplyResourceChange(0xc000010020, 0x1e83940, 0xc0004f7680, 0xc0001c7030, 0xc000010020, 0xc0004f7680, 0xc0004dbb78)
2020-07-30T10:57:26.790+0700 [DEBUG] plugin.terraform-provider-bizfly: 	/Users/hung/go/pkg/mod/github.com/hashicorp/terraform-plugin-sdk@v1.15.0/internal/helper/plugin/grpc_provider.go:885 +0x8b4
2020-07-30T10:57:26.790+0700 [DEBUG] plugin.terraform-provider-bizfly: github.com/hashicorp/terraform-plugin-sdk/internal/tfplugin5._Provider_ApplyResourceChange_Handler(0x1bb14c0, 0xc000010020, 0x1e83940, 0xc0004f7680, 0xc000581920, 0x0, 0x1e83940, 0xc0004f7680, 0xc0004fc1e0, 0x1d2)
2020-07-30T10:57:26.790+0700 [DEBUG] plugin.terraform-provider-bizfly: 	/Users/hung/go/pkg/mod/github.com/hashicorp/terraform-plugin-sdk@v1.15.0/internal/tfplugin5/tfplugin5.pb.go:3305 +0x217
2020-07-30T10:57:26.790+0700 [DEBUG] plugin.terraform-provider-bizfly: google.golang.org/grpc.(*Server).processUnaryRPC(0xc00008b200, 0x1e8e1e0, 0xc000682900, 0xc000592500, 0xc0004553b0, 0x2595940, 0x0, 0x0, 0x0)
2020-07-30T10:57:26.790+0700 [DEBUG] plugin.terraform-provider-bizfly: 	/Users/hung/go/pkg/mod/google.golang.org/grpc@v1.27.1/server.go:1024 +0x501
2020-07-30T10:57:26.790+0700 [DEBUG] plugin.terraform-provider-bizfly: google.golang.org/grpc.(*Server).handleStream(0xc00008b200, 0x1e8e1e0, 0xc000682900, 0xc000592500, 0x0)
2020-07-30T10:57:26.790+0700 [DEBUG] plugin.terraform-provider-bizfly: 	/Users/hung/go/pkg/mod/google.golang.org/grpc@v1.27.1/server.go:1313 +0xd3d
2020-07-30T10:57:26.790+0700 [DEBUG] plugin.terraform-provider-bizfly: google.golang.org/grpc.(*Server).serveStreams.func1.1(0xc0000ac460, 0xc00008b200, 0x1e8e1e0, 0xc000682900, 0xc000592500)
2020-07-30T10:57:26.790+0700 [DEBUG] plugin.terraform-provider-bizfly: 	/Users/hung/go/pkg/mod/google.golang.org/grpc@v1.27.1/server.go:722 +0xa1
2020-07-30T10:57:26.790+0700 [DEBUG] plugin.terraform-provider-bizfly: created by google.golang.org/grpc.(*Server).serveStreams.func1
2020-07-30T10:57:26.790+0700 [DEBUG] plugin.terraform-provider-bizfly: 	/Users/hung/go/pkg/mod/google.golang.org/grpc@v1.27.1/server.go:720 +0xa1
2020-07-30T10:57:26.793+0700 [DEBUG] plugin: plugin process exited: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=48264 error="exit status 2"
2020/07/30 10:57:26 [DEBUG] bizfly_instance.test: apply errored, but we're indicating that via the Error pointer rather than returning it: rpc error: code = Unavailable desc = transport is closing
2020/07/30 10:57:26 [TRACE] <root>: eval: *terraform.EvalMaybeTainted
2020/07/30 10:57:26 [TRACE] EvalMaybeTainted: bizfly_instance.test encountered an error during creation, so it is now marked as tainted
2020/07/30 10:57:26 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/07/30 10:57:26 [TRACE] EvalWriteState: removing state object for bizfly_instance.test
2020/07/30 10:57:26 [TRACE] <root>: eval: *terraform.EvalApplyProvisioners
2020/07/30 10:57:26 [TRACE] EvalApplyProvisioners: bizfly_instance.test has no state, so skipping provisioners
2020/07/30 10:57:26 [TRACE] <root>: eval: *terraform.EvalMaybeTainted
2020/07/30 10:57:26 [TRACE] EvalMaybeTainted: bizfly_instance.test encountered an error during creation, so it is now marked as tainted
2020/07/30 10:57:26 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/07/30 10:57:26 [TRACE] EvalWriteState: removing state object for bizfly_instance.test
2020/07/30 10:57:26 [TRACE] <root>: eval: *terraform.EvalIf
2020/07/30 10:57:26 [TRACE] <root>: eval: *terraform.EvalIf
2020/07/30 10:57:26 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/07/30 10:57:26 [TRACE] <root>: eval: *terraform.EvalApplyPost
2020/07/30 10:57:26 [ERROR] <root>: eval: *terraform.EvalApplyPost, err: rpc error: code = Unavailable desc = transport is closing
2020/07/30 10:57:26 [ERROR] <root>: eval: *terraform.EvalSequence, err: rpc error: code = Unavailable desc = transport is closing
2020/07/30 10:57:26 [TRACE] [walkApply] Exiting eval tree: bizfly_instance.test
2020/07/30 10:57:26 [TRACE] vertex "bizfly_instance.test": visit complete
2020/07/30 10:57:26 [TRACE] dag/walk: upstream of "provider.bizfly (close)" errored, so skipping
2020/07/30 10:57:26 [TRACE] dag/walk: upstream of "meta.count-boundary (EachMode fixup)" errored, so skipping
2020/07/30 10:57:26 [TRACE] dag/walk: upstream of "root" errored, so skipping
2020/07/30 10:57:26 [TRACE] statemgr.Filesystem: not making a backup, because the new snapshot is identical to the old
2020/07/30 10:57:26 [TRACE] statemgr.Filesystem: no state changes since last snapshot
2020/07/30 10:57:26 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2020/07/30 10:57:26 [TRACE] statemgr.Filesystem: removing lock metadata file .terraform.tfstate.lock.info
2020/07/30 10:57:26 [TRACE] statemgr.Filesystem: unlocking terraform.tfstate using fcntl flock
2020-07-30T10:57:26.803+0700 [DEBUG] plugin: plugin exited
2020/07/30 11:04:48 [INFO] Terraform version: 0.12.9  
2020/07/30 11:04:48 [INFO] Go runtime version: go1.13
2020/07/30 11:04:48 [INFO] CLI args: []string{"/usr/local/bin/terraform", "init"}
2020/07/30 11:04:48 [DEBUG] Attempting to open CLI config file: /Users/hung/.terraformrc
2020/07/30 11:04:48 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2020/07/30 11:04:48 [INFO] CLI command args: []string{"init"}
2020/07/30 11:04:48 [TRACE] Meta.Backend: no config given or present on disk, so returning nil config
2020/07/30 11:04:48 [TRACE] Meta.Backend: backend has not previously been initialized in this working directory
2020/07/30 11:04:48 [DEBUG] New state was assigned lineage "9b5d3d03-cc9a-62bf-c77b-ce40f121c18e"
2020/07/30 11:04:48 [TRACE] Meta.Backend: using default local state only (no backend configuration, and no existing initialized backend)
2020/07/30 11:04:48 [TRACE] Meta.Backend: instantiated backend of type <nil>
2020/07/30 11:04:48 [DEBUG] checking for provider in "."
2020/07/30 11:04:48 [WARN] found legacy provider "terraform-provider-bizfly"
2020/07/30 11:04:48 [DEBUG] checking for provider in "/usr/local/bin"
2020/07/30 11:04:48 [DEBUG] checking for provider in ".terraform/plugins/darwin_amd64"
2020/07/30 11:04:48 [DEBUG] found valid plugin: "bizfly", "0.0.0", "/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly"
2020/07/30 11:04:48 [DEBUG] checking for provisioner in "."
2020/07/30 11:04:48 [DEBUG] checking for provisioner in "/usr/local/bin"
2020/07/30 11:04:48 [DEBUG] checking for provisioner in ".terraform/plugins/darwin_amd64"
2020/07/30 11:04:48 [TRACE] Meta.Backend: backend <nil> does not support operations, so wrapping it in a local backend
2020/07/30 11:04:48 [TRACE] backend/local: state manager for workspace "default" will:
 - read initial snapshot from terraform.tfstate
 - write new snapshots to terraform.tfstate
 - create any backup at terraform.tfstate.backup
2020/07/30 11:04:48 [TRACE] statemgr.Filesystem: reading initial snapshot from terraform.tfstate
2020/07/30 11:04:48 [TRACE] statemgr.Filesystem: read snapshot with lineage "8e1934d5-1d8f-e9a8-58e8-6c54c3aa209a" serial 1
2020/07/30 11:04:48 [DEBUG] checking for provider in "."
2020/07/30 11:04:48 [WARN] found legacy provider "terraform-provider-bizfly"
2020/07/30 11:04:48 [DEBUG] checking for provider in "/usr/local/bin"
2020/07/30 11:04:48 [DEBUG] checking for provider in ".terraform/plugins/darwin_amd64"
2020/07/30 11:04:48 [DEBUG] found valid plugin: "bizfly", "0.0.0", "/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly"
2020/07/30 11:04:48 [DEBUG] plugin requirements: "bizfly"=""
2020/07/30 11:04:48 [DEBUG] checking for provider in "."
2020/07/30 11:04:48 [WARN] found legacy provider "terraform-provider-bizfly"
2020/07/30 11:04:48 [DEBUG] checking for provider in "/usr/local/bin"
2020/07/30 11:04:48 [DEBUG] checking for provider in ".terraform/plugins/darwin_amd64"
2020/07/30 11:04:48 [DEBUG] found valid plugin: "bizfly", "0.0.0", "/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly"
2020/07/30 11:04:48 [DEBUG] checking for provider in ".terraform/plugins/darwin_amd64"
2020/07/30 11:04:51 [INFO] Terraform version: 0.12.9  
2020/07/30 11:04:51 [INFO] Go runtime version: go1.13
2020/07/30 11:04:51 [INFO] CLI args: []string{"/usr/local/bin/terraform", "plan"}
2020/07/30 11:04:51 [DEBUG] Attempting to open CLI config file: /Users/hung/.terraformrc
2020/07/30 11:04:51 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2020/07/30 11:04:51 [INFO] CLI command args: []string{"plan"}
2020/07/30 11:04:51 [TRACE] Meta.Backend: no config given or present on disk, so returning nil config
2020/07/30 11:04:51 [TRACE] Meta.Backend: backend has not previously been initialized in this working directory
2020/07/30 11:04:51 [DEBUG] New state was assigned lineage "098bf5dd-c78c-f5b3-beb0-46268be2df67"
2020/07/30 11:04:51 [TRACE] Meta.Backend: using default local state only (no backend configuration, and no existing initialized backend)
2020/07/30 11:04:51 [TRACE] Meta.Backend: instantiated backend of type <nil>
2020/07/30 11:04:51 [DEBUG] checking for provider in "."
2020/07/30 11:04:51 [WARN] found legacy provider "terraform-provider-bizfly"
2020/07/30 11:04:51 [DEBUG] checking for provider in "/usr/local/bin"
2020/07/30 11:04:51 [DEBUG] checking for provider in ".terraform/plugins/darwin_amd64"
2020/07/30 11:04:51 [DEBUG] found valid plugin: "bizfly", "0.0.0", "/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly"
2020/07/30 11:04:51 [DEBUG] checking for provisioner in "."
2020/07/30 11:04:51 [DEBUG] checking for provisioner in "/usr/local/bin"
2020/07/30 11:04:51 [DEBUG] checking for provisioner in ".terraform/plugins/darwin_amd64"
2020/07/30 11:04:51 [TRACE] Meta.Backend: backend <nil> does not support operations, so wrapping it in a local backend
2020/07/30 11:04:51 [INFO] backend/local: starting Plan operation
2020/07/30 11:04:51 [TRACE] backend/local: requesting state manager for workspace "default"
2020/07/30 11:04:51 [TRACE] backend/local: state manager for workspace "default" will:
 - read initial snapshot from terraform.tfstate
 - write new snapshots to terraform.tfstate
 - create any backup at terraform.tfstate.backup
2020/07/30 11:04:51 [TRACE] backend/local: requesting state lock for workspace "default"
2020/07/30 11:04:51 [TRACE] statemgr.Filesystem: preparing to manage state snapshots at terraform.tfstate
2020/07/30 11:04:51 [TRACE] statemgr.Filesystem: existing snapshot has lineage "8e1934d5-1d8f-e9a8-58e8-6c54c3aa209a" serial 1
2020/07/30 11:04:51 [TRACE] statemgr.Filesystem: locking terraform.tfstate using fcntl flock
2020/07/30 11:04:51 [TRACE] statemgr.Filesystem: writing lock metadata to .terraform.tfstate.lock.info
2020/07/30 11:04:51 [TRACE] backend/local: reading remote state for workspace "default"
2020/07/30 11:04:51 [TRACE] statemgr.Filesystem: reading latest snapshot from terraform.tfstate
2020/07/30 11:04:51 [TRACE] statemgr.Filesystem: read snapshot with lineage "8e1934d5-1d8f-e9a8-58e8-6c54c3aa209a" serial 1
2020/07/30 11:04:51 [TRACE] backend/local: retrieving local state snapshot for workspace "default"
2020/07/30 11:04:51 [TRACE] backend/local: building context for current working directory
2020/07/30 11:04:51 [TRACE] terraform.NewContext: starting
2020/07/30 11:04:51 [TRACE] terraform.NewContext: resolving provider version selections
2020/07/30 11:04:51 [TRACE] terraform.NewContext: loading provider schemas
2020/07/30 11:04:51 [TRACE] LoadSchemas: retrieving schema for provider type "bizfly"
2020-07-30T11:04:51.143+0700 [INFO]  plugin: configuring client automatic mTLS
2020-07-30T11:04:51.175+0700 [DEBUG] plugin: starting plugin: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly args=[/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly]
2020-07-30T11:04:51.179+0700 [DEBUG] plugin: plugin started: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=48828
2020-07-30T11:04:51.179+0700 [DEBUG] plugin: waiting for RPC address: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly
2020-07-30T11:04:51.198+0700 [INFO]  plugin.terraform-provider-bizfly: configuring server automatic mTLS: timestamp=2020-07-30T11:04:51.198+0700
2020-07-30T11:04:51.224+0700 [DEBUG] plugin: using plugin: version=5
2020-07-30T11:04:51.225+0700 [DEBUG] plugin.terraform-provider-bizfly: plugin address: address=/var/folders/0r/zdwrk7wn22vd_g32twvblrpc0000gn/T/plugin330435267 network=unix timestamp=2020-07-30T11:04:51.224+0700
2020/07/30 11:04:51 [TRACE] GRPCProvider: GetSchema
2020/07/30 11:04:51 [TRACE] GRPCProvider: Close
2020-07-30T11:04:51.292+0700 [DEBUG] plugin: plugin process exited: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=48828
2020-07-30T11:04:51.292+0700 [DEBUG] plugin: plugin exited
2020/07/30 11:04:51 [TRACE] terraform.NewContext: complete
2020/07/30 11:04:51 [TRACE] backend/local: finished building terraform.Context
2020/07/30 11:04:51 [TRACE] backend/local: requesting interactive input, if necessary
2020/07/30 11:04:51 [TRACE] Context.Input: Prompting for variables
2020/07/30 11:04:51 [TRACE] Context.Input: Prompting for provider arguments
2020/07/30 11:04:51 [TRACE] Context.Input: Provider provider.bizfly declared at main.tf:1,1-18
2020/07/30 11:04:51 [TRACE] Context.Input: Input for provider.bizfly: map[string]cty.Value{}
2020/07/30 11:04:51 [TRACE] backend/local: running validation operation
2020/07/30 11:04:51 [INFO] terraform: building graph: GraphTypeValidate
2020/07/30 11:04:51 [TRACE] Executing graph transform *terraform.ConfigTransformer
2020/07/30 11:04:51 [TRACE] ConfigTransformer: Starting for path: 
2020/07/30 11:04:51 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
bizfly_instance.test - *terraform.NodeValidatableResource
------
2020/07/30 11:04:51 [TRACE] Executing graph transform *terraform.LocalTransformer
2020/07/30 11:04:51 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2020/07/30 11:04:51 [TRACE] Executing graph transform *terraform.OutputTransformer
2020/07/30 11:04:51 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2020/07/30 11:04:51 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2020/07/30 11:04:51 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2020/07/30 11:04:51 [TRACE] Executing graph transform *terraform.StateTransformer
2020/07/30 11:04:51 [TRACE] StateTransformer: state is empty, so nothing to do
2020/07/30 11:04:51 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2020/07/30 11:04:51 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2020/07/30 11:04:51 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2020/07/30 11:04:51 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2020/07/30 11:04:51 [TRACE] AttachResourceConfigTransformer: attaching to "bizfly_instance.test" (*terraform.NodeValidatableResource) config from main.tf:7,1-34
2020/07/30 11:04:51 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2020/07/30 11:04:51 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/30 11:04:51 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/30 11:04:51 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2020/07/30 11:04:51 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
bizfly_instance.test - *terraform.NodeValidatableResource
var.login - *terraform.NodeRootVariable
------
2020/07/30 11:04:51 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2020/07/30 11:04:51 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2020/07/30 11:04:51 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2020/07/30 11:04:51 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2020/07/30 11:04:51 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2020/07/30 11:04:51 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2020/07/30 11:04:51 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2020/07/30 11:04:51 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2020/07/30 11:04:51 [TRACE] ProviderConfigTransformer: attaching to "provider.bizfly" provider configuration from main.tf:1,1-18
2020/07/30 11:04:51 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
bizfly_instance.test - *terraform.NodeValidatableResource
provider.bizfly - *terraform.NodeApplyableProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 11:04:51 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2020/07/30 11:04:51 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2020/07/30 11:04:51 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2020/07/30 11:04:51 [TRACE] ProviderTransformer: bizfly_instance.test is provided by provider.bizfly or inherited equivalent
2020/07/30 11:04:51 [TRACE] ProviderTransformer: exact match for provider.bizfly serving bizfly_instance.test
2020/07/30 11:04:51 [DEBUG] ProviderTransformer: "bizfly_instance.test" (*terraform.NodeValidatableResource) needs provider.bizfly
2020/07/30 11:04:51 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
bizfly_instance.test - *terraform.NodeValidatableResource
  provider.bizfly - *terraform.NodeApplyableProvider
provider.bizfly - *terraform.NodeApplyableProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 11:04:51 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2020/07/30 11:04:51 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2020/07/30 11:04:51 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2020/07/30 11:04:51 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2020/07/30 11:04:51 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
bizfly_instance.test - *terraform.NodeValidatableResource
  provider.bizfly - *terraform.NodeApplyableProvider
provider.bizfly - *terraform.NodeApplyableProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 11:04:51 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2020/07/30 11:04:51 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2020/07/30 11:04:51 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2020/07/30 11:04:51 [TRACE] AttachSchemaTransformer: attaching resource schema to bizfly_instance.test
2020/07/30 11:04:51 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.bizfly
2020/07/30 11:04:51 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2020/07/30 11:04:51 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/30 11:04:51 [DEBUG] ReferenceTransformer: "bizfly_instance.test" references: []
2020/07/30 11:04:51 [DEBUG] ReferenceTransformer: "var.login" references: []
2020/07/30 11:04:51 [DEBUG] ReferenceTransformer: "provider.bizfly" references: []
2020/07/30 11:04:51 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/30 11:04:51 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2020/07/30 11:04:51 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
bizfly_instance.test - *terraform.NodeValidatableResource
  provider.bizfly - *terraform.NodeApplyableProvider
meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  bizfly_instance.test - *terraform.NodeValidatableResource
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
provider.bizfly - *terraform.NodeApplyableProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 11:04:51 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/30 11:04:51 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/30 11:04:51 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2020/07/30 11:04:51 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2020/07/30 11:04:51 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2020/07/30 11:04:51 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
bizfly_instance.test - *terraform.NodeValidatableResource
  provider.bizfly - *terraform.NodeApplyableProvider
meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  bizfly_instance.test - *terraform.NodeValidatableResource
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
provider.bizfly - *terraform.NodeApplyableProvider
provider.bizfly (close) - *terraform.graphNodeCloseProvider
  bizfly_instance.test - *terraform.NodeValidatableResource
  provider.bizfly - *terraform.NodeApplyableProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 11:04:51 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2020/07/30 11:04:51 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer (no changes)
2020/07/30 11:04:51 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/30 11:04:51 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
bizfly_instance.test - *terraform.NodeValidatableResource
  provider.bizfly - *terraform.NodeApplyableProvider
meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  bizfly_instance.test - *terraform.NodeValidatableResource
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
provider.bizfly - *terraform.NodeApplyableProvider
provider.bizfly (close) - *terraform.graphNodeCloseProvider
  bizfly_instance.test - *terraform.NodeValidatableResource
  provider.bizfly - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 11:04:51 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2020/07/30 11:04:51 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
bizfly_instance.test - *terraform.NodeValidatableResource
  provider.bizfly - *terraform.NodeApplyableProvider
meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  bizfly_instance.test - *terraform.NodeValidatableResource
  var.login - *terraform.NodeRootVariable
provider.bizfly - *terraform.NodeApplyableProvider
provider.bizfly (close) - *terraform.graphNodeCloseProvider
  bizfly_instance.test - *terraform.NodeValidatableResource
root - terraform.graphNodeRoot
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 11:04:51 [DEBUG] Starting graph walk: walkValidate
2020/07/30 11:04:51 [TRACE] dag/walk: updating graph
2020/07/30 11:04:51 [TRACE] dag/walk: added new vertex: "var.login"
2020/07/30 11:04:51 [TRACE] dag/walk: added new vertex: "provider.bizfly"
2020/07/30 11:04:51 [TRACE] dag/walk: added new vertex: "meta.count-boundary (EachMode fixup)"
2020/07/30 11:04:51 [TRACE] dag/walk: added new vertex: "provider.bizfly (close)"
2020/07/30 11:04:51 [TRACE] dag/walk: added new vertex: "root"
2020/07/30 11:04:51 [TRACE] dag/walk: added new vertex: "bizfly_instance.test"
2020/07/30 11:04:51 [TRACE] dag/walk: added edge: "provider.bizfly (close)" waiting on "bizfly_instance.test"
2020/07/30 11:04:51 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (EachMode fixup)"
2020/07/30 11:04:51 [TRACE] dag/walk: added edge: "root" waiting on "provider.bizfly (close)"
2020/07/30 11:04:51 [TRACE] dag/walk: added edge: "bizfly_instance.test" waiting on "provider.bizfly"
2020/07/30 11:04:51 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "bizfly_instance.test"
2020/07/30 11:04:51 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "var.login"
2020/07/30 11:04:51 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (EachMode fixup)", sending new deps
2020/07/30 11:04:51 [TRACE] dag/walk: dependencies changed for "provider.bizfly (close)", sending new deps
2020/07/30 11:04:51 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2020/07/30 11:04:51 [TRACE] dag/walk: dependencies changed for "bizfly_instance.test", sending new deps
2020/07/30 11:04:51 [TRACE] dag/walk: visiting "var.login"
2020/07/30 11:04:51 [TRACE] vertex "var.login": starting visit (*terraform.NodeRootVariable)
2020/07/30 11:04:51 [TRACE] vertex "var.login": visit complete
2020/07/30 11:04:51 [TRACE] dag/walk: visiting "provider.bizfly"
2020/07/30 11:04:51 [TRACE] vertex "provider.bizfly": starting visit (*terraform.NodeApplyableProvider)
2020/07/30 11:04:51 [TRACE] vertex "provider.bizfly": evaluating
2020/07/30 11:04:51 [TRACE] [walkValidate] Entering eval tree: provider.bizfly
2020/07/30 11:04:51 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:04:51 [TRACE] <root>: eval: *terraform.EvalInitProvider
2020-07-30T11:04:51.299+0700 [INFO]  plugin: configuring client automatic mTLS
2020-07-30T11:04:51.325+0700 [DEBUG] plugin: starting plugin: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly args=[/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly]
2020-07-30T11:04:51.328+0700 [DEBUG] plugin: plugin started: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=48829
2020-07-30T11:04:51.328+0700 [DEBUG] plugin: waiting for RPC address: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly
2020-07-30T11:04:51.346+0700 [INFO]  plugin.terraform-provider-bizfly: configuring server automatic mTLS: timestamp=2020-07-30T11:04:51.346+0700
2020-07-30T11:04:51.372+0700 [DEBUG] plugin: using plugin: version=5
2020-07-30T11:04:51.372+0700 [DEBUG] plugin.terraform-provider-bizfly: plugin address: network=unix address=/var/folders/0r/zdwrk7wn22vd_g32twvblrpc0000gn/T/plugin634483784 timestamp=2020-07-30T11:04:51.372+0700
2020/07/30 11:04:51 [TRACE] BuiltinEvalContext: Initialized "bizfly" provider for provider.bizfly
2020/07/30 11:04:51 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:04:51 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/07/30 11:04:51 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:04:51 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 11:04:51 [TRACE] <root>: eval: *terraform.EvalValidateProvider
2020/07/30 11:04:51 [TRACE] buildProviderConfig for provider.bizfly: using explicit config only
2020/07/30 11:04:51 [TRACE] GRPCProvider: GetSchema
2020/07/30 11:04:51 [TRACE] GRPCProvider: PrepareProviderConfig
2020/07/30 11:04:51 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:04:51 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:04:51 [TRACE] [walkValidate] Exiting eval tree: provider.bizfly
2020/07/30 11:04:51 [TRACE] vertex "provider.bizfly": visit complete
2020/07/30 11:04:51 [TRACE] dag/walk: visiting "bizfly_instance.test"
2020/07/30 11:04:51 [TRACE] vertex "bizfly_instance.test": starting visit (*terraform.NodeValidatableResource)
2020/07/30 11:04:51 [TRACE] vertex "bizfly_instance.test": evaluating
2020/07/30 11:04:51 [TRACE] [walkValidate] Entering eval tree: bizfly_instance.test
2020/07/30 11:04:51 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:04:51 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 11:04:51 [TRACE] <root>: eval: *terraform.EvalValidateResource
2020/07/30 11:04:51 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/07/30 11:04:51 [TRACE] [walkValidate] Exiting eval tree: bizfly_instance.test
2020/07/30 11:04:51 [TRACE] vertex "bizfly_instance.test": visit complete
2020/07/30 11:04:51 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2020/07/30 11:04:51 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2020/07/30 11:04:51 [TRACE] vertex "meta.count-boundary (EachMode fixup)": evaluating
2020/07/30 11:04:51 [TRACE] [walkValidate] Entering eval tree: meta.count-boundary (EachMode fixup)
2020/07/30 11:04:51 [TRACE] <root>: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2020/07/30 11:04:51 [TRACE] [walkValidate] Exiting eval tree: meta.count-boundary (EachMode fixup)
2020/07/30 11:04:51 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2020/07/30 11:04:51 [TRACE] dag/walk: visiting "provider.bizfly (close)"
2020/07/30 11:04:51 [TRACE] vertex "provider.bizfly (close)": starting visit (*terraform.graphNodeCloseProvider)
2020/07/30 11:04:51 [TRACE] vertex "provider.bizfly (close)": evaluating
2020/07/30 11:04:51 [TRACE] [walkValidate] Entering eval tree: provider.bizfly (close)
2020/07/30 11:04:51 [TRACE] <root>: eval: *terraform.EvalCloseProvider
2020/07/30 11:04:51 [TRACE] GRPCProvider: Close
2020-07-30T11:04:51.432+0700 [DEBUG] plugin: plugin process exited: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=48829
2020-07-30T11:04:51.432+0700 [DEBUG] plugin: plugin exited
2020/07/30 11:04:51 [TRACE] [walkValidate] Exiting eval tree: provider.bizfly (close)
2020/07/30 11:04:51 [TRACE] vertex "provider.bizfly (close)": visit complete
2020/07/30 11:04:51 [TRACE] dag/walk: visiting "root"
2020/07/30 11:04:51 [TRACE] vertex "root": starting visit (terraform.graphNodeRoot)
2020/07/30 11:04:51 [TRACE] vertex "root": visit complete
2020/07/30 11:04:51 [INFO] backend/local: plan calling Refresh
2020/07/30 11:04:51 [INFO] terraform: building graph: GraphTypeRefresh
2020/07/30 11:04:51 [TRACE] No managed resources in state during refresh; skipping managed resource transformer
2020/07/30 11:04:51 [TRACE] Executing graph transform *terraform.ConfigTransformer
2020/07/30 11:04:51 [TRACE] ConfigTransformer: Starting for path: 
2020/07/30 11:04:51 [TRACE] Completed graph transform *terraform.ConfigTransformer (no changes)
2020/07/30 11:04:51 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2020/07/30 11:04:51 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2020/07/30 11:04:51 [TRACE] Executing graph transform *terraform.StateTransformer
2020/07/30 11:04:51 [TRACE] StateTransformer: state is empty, so nothing to do
2020/07/30 11:04:51 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2020/07/30 11:04:51 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/30 11:04:51 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/30 11:04:51 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2020/07/30 11:04:51 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2020/07/30 11:04:51 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2020/07/30 11:04:51 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
var.login - *terraform.NodeRootVariable
------
2020/07/30 11:04:51 [TRACE] Executing graph transform *terraform.LocalTransformer
2020/07/30 11:04:51 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2020/07/30 11:04:51 [TRACE] Executing graph transform *terraform.OutputTransformer
2020/07/30 11:04:51 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2020/07/30 11:04:51 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2020/07/30 11:04:51 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2020/07/30 11:04:51 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2020/07/30 11:04:51 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2020/07/30 11:04:51 [TRACE] ProviderConfigTransformer: attaching to "provider.bizfly" provider configuration from main.tf:1,1-18
2020/07/30 11:04:51 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
provider.bizfly - *terraform.NodeApplyableProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 11:04:51 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2020/07/30 11:04:51 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2020/07/30 11:04:51 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2020/07/30 11:04:51 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer (no changes)
2020/07/30 11:04:51 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2020/07/30 11:04:51 [DEBUG] pruning unused provider.bizfly
2020/07/30 11:04:51 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer with new graph:
var.login - *terraform.NodeRootVariable
------
2020/07/30 11:04:51 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2020/07/30 11:04:51 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2020/07/30 11:04:51 [TRACE] Completed graph transform *terraform.graphTransformerMulti (no changes)
2020/07/30 11:04:51 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2020/07/30 11:04:51 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2020/07/30 11:04:51 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/30 11:04:51 [DEBUG] ReferenceTransformer: "var.login" references: []
2020/07/30 11:04:51 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/30 11:04:51 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/30 11:04:51 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/30 11:04:51 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2020/07/30 11:04:51 [TRACE] Completed graph transform *terraform.CloseProviderTransformer (no changes)
2020/07/30 11:04:51 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/30 11:04:51 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/07/30 11:04:51 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2020/07/30 11:04:51 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer (no changes)
2020/07/30 11:04:51 [DEBUG] Starting graph walk: walkRefresh
2020/07/30 11:04:51 [TRACE] dag/walk: updating graph
2020/07/30 11:04:51 [TRACE] dag/walk: added new vertex: "var.login"
2020/07/30 11:04:51 [TRACE] dag/walk: visiting "var.login"
2020/07/30 11:04:51 [TRACE] vertex "var.login": starting visit (*terraform.NodeRootVariable)
2020/07/30 11:04:51 [TRACE] vertex "var.login": visit complete
2020/07/30 11:04:51 [INFO] backend/local: plan calling Plan
2020/07/30 11:04:51 [INFO] terraform: building graph: GraphTypePlan
2020/07/30 11:04:51 [TRACE] Executing graph transform *terraform.ConfigTransformer
2020/07/30 11:04:51 [TRACE] ConfigTransformer: Starting for path: 
2020/07/30 11:04:51 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
bizfly_instance.test - *terraform.NodePlannableResource
------
2020/07/30 11:04:51 [TRACE] Executing graph transform *terraform.LocalTransformer
2020/07/30 11:04:51 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2020/07/30 11:04:51 [TRACE] Executing graph transform *terraform.OutputTransformer
2020/07/30 11:04:51 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2020/07/30 11:04:51 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2020/07/30 11:04:51 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2020/07/30 11:04:51 [TRACE] Executing graph transform *terraform.StateTransformer
2020/07/30 11:04:51 [TRACE] StateTransformer: state is empty, so nothing to do
2020/07/30 11:04:51 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2020/07/30 11:04:51 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2020/07/30 11:04:51 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2020/07/30 11:04:51 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2020/07/30 11:04:51 [TRACE] AttachResourceConfigTransformer: attaching to "bizfly_instance.test" (*terraform.NodePlannableResource) config from main.tf:7,1-34
2020/07/30 11:04:51 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2020/07/30 11:04:51 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/30 11:04:51 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/30 11:04:51 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2020/07/30 11:04:51 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
bizfly_instance.test - *terraform.NodePlannableResource
var.login - *terraform.NodeRootVariable
------
2020/07/30 11:04:51 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2020/07/30 11:04:51 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2020/07/30 11:04:51 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2020/07/30 11:04:51 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2020/07/30 11:04:51 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2020/07/30 11:04:51 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2020/07/30 11:04:51 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2020/07/30 11:04:51 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2020/07/30 11:04:51 [TRACE] ProviderConfigTransformer: attaching to "provider.bizfly" provider configuration from main.tf:1,1-18
2020/07/30 11:04:51 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
bizfly_instance.test - *terraform.NodePlannableResource
provider.bizfly - *terraform.NodeApplyableProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 11:04:51 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2020/07/30 11:04:51 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2020/07/30 11:04:51 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2020/07/30 11:04:51 [TRACE] ProviderTransformer: bizfly_instance.test is provided by provider.bizfly or inherited equivalent
2020/07/30 11:04:51 [TRACE] ProviderTransformer: exact match for provider.bizfly serving bizfly_instance.test
2020/07/30 11:04:51 [DEBUG] ProviderTransformer: "bizfly_instance.test" (*terraform.NodePlannableResource) needs provider.bizfly
2020/07/30 11:04:51 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
bizfly_instance.test - *terraform.NodePlannableResource
  provider.bizfly - *terraform.NodeApplyableProvider
provider.bizfly - *terraform.NodeApplyableProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 11:04:51 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2020/07/30 11:04:51 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2020/07/30 11:04:51 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2020/07/30 11:04:51 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2020/07/30 11:04:51 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
bizfly_instance.test - *terraform.NodePlannableResource
  provider.bizfly - *terraform.NodeApplyableProvider
provider.bizfly - *terraform.NodeApplyableProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 11:04:51 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2020/07/30 11:04:51 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2020/07/30 11:04:51 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2020/07/30 11:04:51 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.bizfly
2020/07/30 11:04:51 [TRACE] AttachSchemaTransformer: attaching resource schema to bizfly_instance.test
2020/07/30 11:04:51 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2020/07/30 11:04:51 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/30 11:04:51 [DEBUG] ReferenceTransformer: "bizfly_instance.test" references: []
2020/07/30 11:04:51 [DEBUG] ReferenceTransformer: "var.login" references: []
2020/07/30 11:04:51 [DEBUG] ReferenceTransformer: "provider.bizfly" references: []
2020/07/30 11:04:51 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/30 11:04:51 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2020/07/30 11:04:51 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
bizfly_instance.test - *terraform.NodePlannableResource
  provider.bizfly - *terraform.NodeApplyableProvider
meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  bizfly_instance.test - *terraform.NodePlannableResource
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
provider.bizfly - *terraform.NodeApplyableProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 11:04:51 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/30 11:04:51 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/30 11:04:51 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2020/07/30 11:04:51 [TRACE] ForcedCBDTransformer: "bizfly_instance.test" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2020/07/30 11:04:51 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2020/07/30 11:04:51 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2020/07/30 11:04:51 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
bizfly_instance.test - *terraform.NodePlannableResource
  provider.bizfly - *terraform.NodeApplyableProvider
meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  bizfly_instance.test - *terraform.NodePlannableResource
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
provider.bizfly - *terraform.NodeApplyableProvider
provider.bizfly (close) - *terraform.graphNodeCloseProvider
  bizfly_instance.test - *terraform.NodePlannableResource
  provider.bizfly - *terraform.NodeApplyableProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 11:04:51 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2020/07/30 11:04:51 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer (no changes)
2020/07/30 11:04:51 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/30 11:04:51 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
bizfly_instance.test - *terraform.NodePlannableResource
  provider.bizfly - *terraform.NodeApplyableProvider
meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  bizfly_instance.test - *terraform.NodePlannableResource
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
provider.bizfly - *terraform.NodeApplyableProvider
provider.bizfly (close) - *terraform.graphNodeCloseProvider
  bizfly_instance.test - *terraform.NodePlannableResource
  provider.bizfly - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 11:04:51 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2020/07/30 11:04:51 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
bizfly_instance.test - *terraform.NodePlannableResource
  provider.bizfly - *terraform.NodeApplyableProvider
meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  bizfly_instance.test - *terraform.NodePlannableResource
  var.login - *terraform.NodeRootVariable
provider.bizfly - *terraform.NodeApplyableProvider
provider.bizfly (close) - *terraform.graphNodeCloseProvider
  bizfly_instance.test - *terraform.NodePlannableResource
root - terraform.graphNodeRoot
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 11:04:51 [DEBUG] Starting graph walk: walkPlan
2020/07/30 11:04:51 [TRACE] dag/walk: updating graph
2020/07/30 11:04:51 [TRACE] dag/walk: added new vertex: "provider.bizfly (close)"
2020/07/30 11:04:51 [TRACE] dag/walk: added new vertex: "root"
2020/07/30 11:04:51 [TRACE] dag/walk: added new vertex: "bizfly_instance.test"
2020/07/30 11:04:51 [TRACE] dag/walk: added new vertex: "var.login"
2020/07/30 11:04:51 [TRACE] dag/walk: added new vertex: "provider.bizfly"
2020/07/30 11:04:51 [TRACE] dag/walk: added new vertex: "meta.count-boundary (EachMode fixup)"
2020/07/30 11:04:51 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (EachMode fixup)"
2020/07/30 11:04:51 [TRACE] dag/walk: added edge: "bizfly_instance.test" waiting on "provider.bizfly"
2020/07/30 11:04:51 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "var.login"
2020/07/30 11:04:51 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "bizfly_instance.test"
2020/07/30 11:04:51 [TRACE] dag/walk: added edge: "provider.bizfly (close)" waiting on "bizfly_instance.test"
2020/07/30 11:04:51 [TRACE] dag/walk: added edge: "root" waiting on "provider.bizfly (close)"
2020/07/30 11:04:51 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2020/07/30 11:04:51 [TRACE] dag/walk: dependencies changed for "bizfly_instance.test", sending new deps
2020/07/30 11:04:51 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (EachMode fixup)", sending new deps
2020/07/30 11:04:51 [TRACE] dag/walk: dependencies changed for "provider.bizfly (close)", sending new deps
2020/07/30 11:04:51 [TRACE] dag/walk: visiting "provider.bizfly"
2020/07/30 11:04:51 [TRACE] vertex "provider.bizfly": starting visit (*terraform.NodeApplyableProvider)
2020/07/30 11:04:51 [TRACE] dag/walk: visiting "var.login"
2020/07/30 11:04:51 [TRACE] vertex "var.login": starting visit (*terraform.NodeRootVariable)
2020/07/30 11:04:51 [TRACE] vertex "var.login": visit complete
2020/07/30 11:04:51 [TRACE] vertex "provider.bizfly": evaluating
2020/07/30 11:04:51 [TRACE] [walkPlan] Entering eval tree: provider.bizfly
2020/07/30 11:04:51 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:04:51 [TRACE] <root>: eval: *terraform.EvalInitProvider
2020-07-30T11:04:51.435+0700 [INFO]  plugin: configuring client automatic mTLS
2020-07-30T11:04:51.461+0700 [DEBUG] plugin: starting plugin: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly args=[/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly]
2020-07-30T11:04:51.464+0700 [DEBUG] plugin: plugin started: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=48830
2020-07-30T11:04:51.464+0700 [DEBUG] plugin: waiting for RPC address: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly
2020-07-30T11:04:51.482+0700 [INFO]  plugin.terraform-provider-bizfly: configuring server automatic mTLS: timestamp=2020-07-30T11:04:51.481+0700
2020-07-30T11:04:51.508+0700 [DEBUG] plugin: using plugin: version=5
2020-07-30T11:04:51.508+0700 [DEBUG] plugin.terraform-provider-bizfly: plugin address: address=/var/folders/0r/zdwrk7wn22vd_g32twvblrpc0000gn/T/plugin613715341 network=unix timestamp=2020-07-30T11:04:51.507+0700
2020/07/30 11:04:51 [TRACE] BuiltinEvalContext: Initialized "bizfly" provider for provider.bizfly
2020/07/30 11:04:51 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:04:51 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:04:51 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/07/30 11:04:51 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:04:51 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 11:04:51 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/07/30 11:04:51 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:04:51 [TRACE] <root>: eval: *terraform.EvalConfigProvider
2020/07/30 11:04:51 [TRACE] buildProviderConfig for provider.bizfly: using explicit config only
2020/07/30 11:04:51 [TRACE] GRPCProvider: GetSchema
2020/07/30 11:04:51 [TRACE] GRPCProvider: Configure
2020/07/30 11:04:53 [TRACE] [walkPlan] Exiting eval tree: provider.bizfly
2020/07/30 11:04:53 [TRACE] vertex "provider.bizfly": visit complete
2020/07/30 11:04:53 [TRACE] dag/walk: visiting "bizfly_instance.test"
2020/07/30 11:04:53 [TRACE] vertex "bizfly_instance.test": starting visit (*terraform.NodePlannableResource)
2020/07/30 11:04:53 [TRACE] vertex "bizfly_instance.test": evaluating
2020/07/30 11:04:53 [TRACE] [walkPlan] Entering eval tree: bizfly_instance.test
2020/07/30 11:04:53 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/07/30 11:04:53 [TRACE] [walkPlan] Exiting eval tree: bizfly_instance.test
2020/07/30 11:04:53 [TRACE] vertex "bizfly_instance.test": expanding dynamic subgraph
2020/07/30 11:04:53 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/07/30 11:04:53 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
bizfly_instance.test - *terraform.NodePlannableResourceInstance
------
2020/07/30 11:04:53 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/07/30 11:04:53 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/07/30 11:04:53 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/30 11:04:53 [DEBUG] Resource instance state not found for node "bizfly_instance.test", instance bizfly_instance.test
2020/07/30 11:04:53 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/30 11:04:53 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/30 11:04:53 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/30 11:04:53 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/30 11:04:53 [DEBUG] ReferenceTransformer: "bizfly_instance.test" references: []
2020/07/30 11:04:53 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/30 11:04:53 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/30 11:04:53 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/07/30 11:04:53 [TRACE] vertex "bizfly_instance.test": entering dynamic subgraph
2020/07/30 11:04:53 [TRACE] dag/walk: updating graph
2020/07/30 11:04:53 [TRACE] dag/walk: added new vertex: "bizfly_instance.test"
2020/07/30 11:04:53 [TRACE] dag/walk: visiting "bizfly_instance.test"
2020/07/30 11:04:53 [TRACE] vertex "bizfly_instance.test": starting visit (*terraform.NodePlannableResourceInstance)
2020/07/30 11:04:53 [TRACE] vertex "bizfly_instance.test": evaluating
2020/07/30 11:04:53 [TRACE] [walkPlan] Entering eval tree: bizfly_instance.test
2020/07/30 11:04:53 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:04:53 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 11:04:53 [TRACE] <root>: eval: *terraform.EvalReadState
2020/07/30 11:04:53 [TRACE] EvalReadState: reading state for bizfly_instance.test
2020/07/30 11:04:53 [TRACE] EvalReadState: no state present for bizfly_instance.test
2020/07/30 11:04:53 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2020/07/30 11:04:53 [TRACE] <root>: eval: *terraform.EvalDiff
2020/07/30 11:04:53 [TRACE] Re-validating config for "bizfly_instance.test"
2020/07/30 11:04:53 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/07/30 11:04:53 [TRACE] GRPCProvider: PlanResourceChange
2020/07/30 11:04:53 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2020/07/30 11:04:53 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/07/30 11:04:53 [TRACE] EvalWriteState: writing current state object for bizfly_instance.test
2020/07/30 11:04:53 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/07/30 11:04:53 [TRACE] EvalWriteDiff: recorded Create change for bizfly_instance.test
2020/07/30 11:04:53 [TRACE] [walkPlan] Exiting eval tree: bizfly_instance.test
2020/07/30 11:04:53 [TRACE] vertex "bizfly_instance.test": visit complete
2020/07/30 11:04:53 [TRACE] vertex "bizfly_instance.test": dynamic subgraph completed successfully
2020/07/30 11:04:53 [TRACE] vertex "bizfly_instance.test": visit complete
2020/07/30 11:04:53 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2020/07/30 11:04:53 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2020/07/30 11:04:53 [TRACE] vertex "meta.count-boundary (EachMode fixup)": evaluating
2020/07/30 11:04:53 [TRACE] [walkPlan] Entering eval tree: meta.count-boundary (EachMode fixup)
2020/07/30 11:04:53 [TRACE] dag/walk: visiting "provider.bizfly (close)"
2020/07/30 11:04:53 [TRACE] vertex "provider.bizfly (close)": starting visit (*terraform.graphNodeCloseProvider)
2020/07/30 11:04:53 [TRACE] <root>: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2020/07/30 11:04:53 [TRACE] vertex "provider.bizfly (close)": evaluating
2020/07/30 11:04:53 [TRACE] [walkPlan] Entering eval tree: provider.bizfly (close)
2020/07/30 11:04:53 [TRACE] <root>: eval: *terraform.EvalCloseProvider
2020/07/30 11:04:53 [TRACE] GRPCProvider: Close
2020/07/30 11:04:53 [TRACE] [walkPlan] Exiting eval tree: meta.count-boundary (EachMode fixup)
2020/07/30 11:04:53 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2020-07-30T11:04:53.157+0700 [DEBUG] plugin: plugin process exited: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=48830
2020-07-30T11:04:53.157+0700 [DEBUG] plugin: plugin exited
2020/07/30 11:04:53 [TRACE] [walkPlan] Exiting eval tree: provider.bizfly (close)
2020/07/30 11:04:53 [TRACE] vertex "provider.bizfly (close)": visit complete
2020/07/30 11:04:53 [TRACE] dag/walk: visiting "root"
2020/07/30 11:04:53 [TRACE] vertex "root": starting visit (terraform.graphNodeRoot)
2020/07/30 11:04:53 [TRACE] vertex "root": visit complete
2020/07/30 11:04:53 [INFO] backend/local: plan operation completed
2020/07/30 11:04:53 [TRACE] statemgr.Filesystem: removing lock metadata file .terraform.tfstate.lock.info
2020/07/30 11:04:53 [TRACE] statemgr.Filesystem: unlocking terraform.tfstate using fcntl flock
2020/07/30 11:04:56 [INFO] Terraform version: 0.12.9  
2020/07/30 11:04:56 [INFO] Go runtime version: go1.13
2020/07/30 11:04:56 [INFO] CLI args: []string{"/usr/local/bin/terraform", "apply"}
2020/07/30 11:04:56 [DEBUG] Attempting to open CLI config file: /Users/hung/.terraformrc
2020/07/30 11:04:56 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2020/07/30 11:04:56 [INFO] CLI command args: []string{"apply"}
2020/07/30 11:04:56 [TRACE] Meta.Backend: no config given or present on disk, so returning nil config
2020/07/30 11:04:56 [TRACE] Meta.Backend: backend has not previously been initialized in this working directory
2020/07/30 11:04:56 [DEBUG] New state was assigned lineage "3cddaa44-4e02-d85b-e3df-79856eae2c5a"
2020/07/30 11:04:56 [TRACE] Meta.Backend: using default local state only (no backend configuration, and no existing initialized backend)
2020/07/30 11:04:56 [TRACE] Meta.Backend: instantiated backend of type <nil>
2020/07/30 11:04:56 [DEBUG] checking for provider in "."
2020/07/30 11:04:56 [WARN] found legacy provider "terraform-provider-bizfly"
2020/07/30 11:04:56 [DEBUG] checking for provider in "/usr/local/bin"
2020/07/30 11:04:56 [DEBUG] checking for provider in ".terraform/plugins/darwin_amd64"
2020/07/30 11:04:56 [DEBUG] found valid plugin: "bizfly", "0.0.0", "/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly"
2020/07/30 11:04:56 [DEBUG] checking for provisioner in "."
2020/07/30 11:04:56 [DEBUG] checking for provisioner in "/usr/local/bin"
2020/07/30 11:04:56 [DEBUG] checking for provisioner in ".terraform/plugins/darwin_amd64"
2020/07/30 11:04:56 [TRACE] Meta.Backend: backend <nil> does not support operations, so wrapping it in a local backend
2020/07/30 11:04:56 [INFO] backend/local: starting Apply operation
2020/07/30 11:04:56 [TRACE] backend/local: requesting state manager for workspace "default"
2020/07/30 11:04:56 [TRACE] backend/local: state manager for workspace "default" will:
 - read initial snapshot from terraform.tfstate
 - write new snapshots to terraform.tfstate
 - create any backup at terraform.tfstate.backup
2020/07/30 11:04:56 [TRACE] backend/local: requesting state lock for workspace "default"
2020/07/30 11:04:56 [TRACE] statemgr.Filesystem: preparing to manage state snapshots at terraform.tfstate
2020/07/30 11:04:56 [TRACE] statemgr.Filesystem: existing snapshot has lineage "8e1934d5-1d8f-e9a8-58e8-6c54c3aa209a" serial 1
2020/07/30 11:04:56 [TRACE] statemgr.Filesystem: locking terraform.tfstate using fcntl flock
2020/07/30 11:04:56 [TRACE] statemgr.Filesystem: writing lock metadata to .terraform.tfstate.lock.info
2020/07/30 11:04:56 [TRACE] backend/local: reading remote state for workspace "default"
2020/07/30 11:04:56 [TRACE] statemgr.Filesystem: reading latest snapshot from terraform.tfstate
2020/07/30 11:04:56 [TRACE] statemgr.Filesystem: read snapshot with lineage "8e1934d5-1d8f-e9a8-58e8-6c54c3aa209a" serial 1
2020/07/30 11:04:56 [TRACE] backend/local: retrieving local state snapshot for workspace "default"
2020/07/30 11:04:56 [TRACE] backend/local: building context for current working directory
2020/07/30 11:04:56 [TRACE] terraform.NewContext: starting
2020/07/30 11:04:56 [TRACE] terraform.NewContext: resolving provider version selections
2020/07/30 11:04:56 [TRACE] terraform.NewContext: loading provider schemas
2020/07/30 11:04:56 [TRACE] LoadSchemas: retrieving schema for provider type "bizfly"
2020-07-30T11:04:56.746+0700 [INFO]  plugin: configuring client automatic mTLS
2020-07-30T11:04:56.771+0700 [DEBUG] plugin: starting plugin: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly args=[/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly]
2020-07-30T11:04:56.774+0700 [DEBUG] plugin: plugin started: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=48850
2020-07-30T11:04:56.774+0700 [DEBUG] plugin: waiting for RPC address: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly
2020-07-30T11:04:56.796+0700 [INFO]  plugin.terraform-provider-bizfly: configuring server automatic mTLS: timestamp=2020-07-30T11:04:56.795+0700
2020-07-30T11:04:56.823+0700 [DEBUG] plugin: using plugin: version=5
2020-07-30T11:04:56.823+0700 [DEBUG] plugin.terraform-provider-bizfly: plugin address: address=/var/folders/0r/zdwrk7wn22vd_g32twvblrpc0000gn/T/plugin783058641 network=unix timestamp=2020-07-30T11:04:56.823+0700
2020/07/30 11:04:56 [TRACE] GRPCProvider: GetSchema
2020/07/30 11:04:56 [TRACE] GRPCProvider: Close
2020-07-30T11:04:56.882+0700 [DEBUG] plugin: plugin process exited: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=48850
2020-07-30T11:04:56.882+0700 [DEBUG] plugin: plugin exited
2020/07/30 11:04:56 [TRACE] terraform.NewContext: complete
2020/07/30 11:04:56 [TRACE] backend/local: finished building terraform.Context
2020/07/30 11:04:56 [TRACE] backend/local: requesting interactive input, if necessary
2020/07/30 11:04:56 [TRACE] Context.Input: Prompting for variables
2020/07/30 11:04:56 [TRACE] Context.Input: Prompting for provider arguments
2020/07/30 11:04:56 [TRACE] Context.Input: Provider provider.bizfly declared at main.tf:1,1-18
2020/07/30 11:04:56 [TRACE] Context.Input: Input for provider.bizfly: map[string]cty.Value{}
2020/07/30 11:04:56 [TRACE] backend/local: running validation operation
2020/07/30 11:04:56 [INFO] terraform: building graph: GraphTypeValidate
2020/07/30 11:04:56 [TRACE] Executing graph transform *terraform.ConfigTransformer
2020/07/30 11:04:56 [TRACE] ConfigTransformer: Starting for path: 
2020/07/30 11:04:56 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
bizfly_instance.test - *terraform.NodeValidatableResource
------
2020/07/30 11:04:56 [TRACE] Executing graph transform *terraform.LocalTransformer
2020/07/30 11:04:56 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2020/07/30 11:04:56 [TRACE] Executing graph transform *terraform.OutputTransformer
2020/07/30 11:04:56 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2020/07/30 11:04:56 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2020/07/30 11:04:56 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2020/07/30 11:04:56 [TRACE] Executing graph transform *terraform.StateTransformer
2020/07/30 11:04:56 [TRACE] StateTransformer: state is empty, so nothing to do
2020/07/30 11:04:56 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2020/07/30 11:04:56 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2020/07/30 11:04:56 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2020/07/30 11:04:56 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2020/07/30 11:04:56 [TRACE] AttachResourceConfigTransformer: attaching to "bizfly_instance.test" (*terraform.NodeValidatableResource) config from main.tf:7,1-34
2020/07/30 11:04:56 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2020/07/30 11:04:56 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/30 11:04:56 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/30 11:04:56 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2020/07/30 11:04:56 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
bizfly_instance.test - *terraform.NodeValidatableResource
var.login - *terraform.NodeRootVariable
------
2020/07/30 11:04:56 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2020/07/30 11:04:56 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2020/07/30 11:04:56 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2020/07/30 11:04:56 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2020/07/30 11:04:56 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2020/07/30 11:04:56 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2020/07/30 11:04:56 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2020/07/30 11:04:56 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2020/07/30 11:04:56 [TRACE] ProviderConfigTransformer: attaching to "provider.bizfly" provider configuration from main.tf:1,1-18
2020/07/30 11:04:56 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
bizfly_instance.test - *terraform.NodeValidatableResource
provider.bizfly - *terraform.NodeApplyableProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 11:04:56 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2020/07/30 11:04:56 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2020/07/30 11:04:56 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2020/07/30 11:04:56 [TRACE] ProviderTransformer: bizfly_instance.test is provided by provider.bizfly or inherited equivalent
2020/07/30 11:04:56 [TRACE] ProviderTransformer: exact match for provider.bizfly serving bizfly_instance.test
2020/07/30 11:04:56 [DEBUG] ProviderTransformer: "bizfly_instance.test" (*terraform.NodeValidatableResource) needs provider.bizfly
2020/07/30 11:04:56 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
bizfly_instance.test - *terraform.NodeValidatableResource
  provider.bizfly - *terraform.NodeApplyableProvider
provider.bizfly - *terraform.NodeApplyableProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 11:04:56 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2020/07/30 11:04:56 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2020/07/30 11:04:56 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2020/07/30 11:04:56 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2020/07/30 11:04:56 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
bizfly_instance.test - *terraform.NodeValidatableResource
  provider.bizfly - *terraform.NodeApplyableProvider
provider.bizfly - *terraform.NodeApplyableProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 11:04:56 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2020/07/30 11:04:56 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2020/07/30 11:04:56 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2020/07/30 11:04:56 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.bizfly
2020/07/30 11:04:56 [TRACE] AttachSchemaTransformer: attaching resource schema to bizfly_instance.test
2020/07/30 11:04:56 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2020/07/30 11:04:56 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/30 11:04:56 [DEBUG] ReferenceTransformer: "bizfly_instance.test" references: []
2020/07/30 11:04:56 [DEBUG] ReferenceTransformer: "var.login" references: []
2020/07/30 11:04:56 [DEBUG] ReferenceTransformer: "provider.bizfly" references: []
2020/07/30 11:04:56 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/30 11:04:56 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2020/07/30 11:04:56 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
bizfly_instance.test - *terraform.NodeValidatableResource
  provider.bizfly - *terraform.NodeApplyableProvider
meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  bizfly_instance.test - *terraform.NodeValidatableResource
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
provider.bizfly - *terraform.NodeApplyableProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 11:04:56 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/30 11:04:56 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/30 11:04:56 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2020/07/30 11:04:56 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2020/07/30 11:04:56 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2020/07/30 11:04:56 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
bizfly_instance.test - *terraform.NodeValidatableResource
  provider.bizfly - *terraform.NodeApplyableProvider
meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  bizfly_instance.test - *terraform.NodeValidatableResource
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
provider.bizfly - *terraform.NodeApplyableProvider
provider.bizfly (close) - *terraform.graphNodeCloseProvider
  bizfly_instance.test - *terraform.NodeValidatableResource
  provider.bizfly - *terraform.NodeApplyableProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 11:04:56 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2020/07/30 11:04:56 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer (no changes)
2020/07/30 11:04:56 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/30 11:04:56 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
bizfly_instance.test - *terraform.NodeValidatableResource
  provider.bizfly - *terraform.NodeApplyableProvider
meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  bizfly_instance.test - *terraform.NodeValidatableResource
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
provider.bizfly - *terraform.NodeApplyableProvider
provider.bizfly (close) - *terraform.graphNodeCloseProvider
  bizfly_instance.test - *terraform.NodeValidatableResource
  provider.bizfly - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 11:04:56 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2020/07/30 11:04:56 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
bizfly_instance.test - *terraform.NodeValidatableResource
  provider.bizfly - *terraform.NodeApplyableProvider
meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  bizfly_instance.test - *terraform.NodeValidatableResource
  var.login - *terraform.NodeRootVariable
provider.bizfly - *terraform.NodeApplyableProvider
provider.bizfly (close) - *terraform.graphNodeCloseProvider
  bizfly_instance.test - *terraform.NodeValidatableResource
root - terraform.graphNodeRoot
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 11:04:56 [DEBUG] Starting graph walk: walkValidate
2020/07/30 11:04:56 [TRACE] dag/walk: updating graph
2020/07/30 11:04:56 [TRACE] dag/walk: added new vertex: "meta.count-boundary (EachMode fixup)"
2020/07/30 11:04:56 [TRACE] dag/walk: added new vertex: "provider.bizfly (close)"
2020/07/30 11:04:56 [TRACE] dag/walk: added new vertex: "root"
2020/07/30 11:04:56 [TRACE] dag/walk: added new vertex: "bizfly_instance.test"
2020/07/30 11:04:56 [TRACE] dag/walk: added new vertex: "var.login"
2020/07/30 11:04:56 [TRACE] dag/walk: added new vertex: "provider.bizfly"
2020/07/30 11:04:56 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "bizfly_instance.test"
2020/07/30 11:04:56 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "var.login"
2020/07/30 11:04:56 [TRACE] dag/walk: added edge: "provider.bizfly (close)" waiting on "bizfly_instance.test"
2020/07/30 11:04:56 [TRACE] dag/walk: added edge: "root" waiting on "provider.bizfly (close)"
2020/07/30 11:04:56 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (EachMode fixup)"
2020/07/30 11:04:56 [TRACE] dag/walk: added edge: "bizfly_instance.test" waiting on "provider.bizfly"
2020/07/30 11:04:56 [TRACE] dag/walk: dependencies changed for "bizfly_instance.test", sending new deps
2020/07/30 11:04:56 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (EachMode fixup)", sending new deps
2020/07/30 11:04:56 [TRACE] dag/walk: dependencies changed for "provider.bizfly (close)", sending new deps
2020/07/30 11:04:56 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2020/07/30 11:04:56 [TRACE] dag/walk: visiting "provider.bizfly"
2020/07/30 11:04:56 [TRACE] vertex "provider.bizfly": starting visit (*terraform.NodeApplyableProvider)
2020/07/30 11:04:56 [TRACE] vertex "provider.bizfly": evaluating
2020/07/30 11:04:56 [TRACE] [walkValidate] Entering eval tree: provider.bizfly
2020/07/30 11:04:56 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:04:56 [TRACE] <root>: eval: *terraform.EvalInitProvider
2020-07-30T11:04:56.884+0700 [INFO]  plugin: configuring client automatic mTLS
2020/07/30 11:04:56 [TRACE] dag/walk: visiting "var.login"
2020/07/30 11:04:56 [TRACE] vertex "var.login": starting visit (*terraform.NodeRootVariable)
2020/07/30 11:04:56 [TRACE] vertex "var.login": visit complete
2020-07-30T11:04:56.908+0700 [DEBUG] plugin: starting plugin: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly args=[/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly]
2020-07-30T11:04:56.912+0700 [DEBUG] plugin: plugin started: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=48851
2020-07-30T11:04:56.912+0700 [DEBUG] plugin: waiting for RPC address: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly
2020-07-30T11:04:56.931+0700 [INFO]  plugin.terraform-provider-bizfly: configuring server automatic mTLS: timestamp=2020-07-30T11:04:56.931+0700
2020-07-30T11:04:56.959+0700 [DEBUG] plugin: using plugin: version=5
2020-07-30T11:04:56.959+0700 [DEBUG] plugin.terraform-provider-bizfly: plugin address: network=unix address=/var/folders/0r/zdwrk7wn22vd_g32twvblrpc0000gn/T/plugin046741630 timestamp=2020-07-30T11:04:56.959+0700
2020/07/30 11:04:56 [TRACE] BuiltinEvalContext: Initialized "bizfly" provider for provider.bizfly
2020/07/30 11:04:56 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:04:56 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/07/30 11:04:56 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:04:56 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 11:04:56 [TRACE] <root>: eval: *terraform.EvalValidateProvider
2020/07/30 11:04:56 [TRACE] buildProviderConfig for provider.bizfly: using explicit config only
2020/07/30 11:04:56 [TRACE] GRPCProvider: GetSchema
2020/07/30 11:04:57 [TRACE] GRPCProvider: PrepareProviderConfig
2020/07/30 11:04:57 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:04:57 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:04:57 [TRACE] [walkValidate] Exiting eval tree: provider.bizfly
2020/07/30 11:04:57 [TRACE] vertex "provider.bizfly": visit complete
2020/07/30 11:04:57 [TRACE] dag/walk: visiting "bizfly_instance.test"
2020/07/30 11:04:57 [TRACE] vertex "bizfly_instance.test": starting visit (*terraform.NodeValidatableResource)
2020/07/30 11:04:57 [TRACE] vertex "bizfly_instance.test": evaluating
2020/07/30 11:04:57 [TRACE] [walkValidate] Entering eval tree: bizfly_instance.test
2020/07/30 11:04:57 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:04:57 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 11:04:57 [TRACE] <root>: eval: *terraform.EvalValidateResource
2020/07/30 11:04:57 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/07/30 11:04:57 [TRACE] [walkValidate] Exiting eval tree: bizfly_instance.test
2020/07/30 11:04:57 [TRACE] vertex "bizfly_instance.test": visit complete
2020/07/30 11:04:57 [TRACE] dag/walk: visiting "provider.bizfly (close)"
2020/07/30 11:04:57 [TRACE] vertex "provider.bizfly (close)": starting visit (*terraform.graphNodeCloseProvider)
2020/07/30 11:04:57 [TRACE] vertex "provider.bizfly (close)": evaluating
2020/07/30 11:04:57 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2020/07/30 11:04:57 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2020/07/30 11:04:57 [TRACE] [walkValidate] Entering eval tree: provider.bizfly (close)
2020/07/30 11:04:57 [TRACE] <root>: eval: *terraform.EvalCloseProvider
2020/07/30 11:04:57 [TRACE] vertex "meta.count-boundary (EachMode fixup)": evaluating
2020/07/30 11:04:57 [TRACE] [walkValidate] Entering eval tree: meta.count-boundary (EachMode fixup)
2020/07/30 11:04:57 [TRACE] GRPCProvider: Close
2020/07/30 11:04:57 [TRACE] <root>: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2020/07/30 11:04:57 [TRACE] [walkValidate] Exiting eval tree: meta.count-boundary (EachMode fixup)
2020/07/30 11:04:57 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2020-07-30T11:04:57.017+0700 [DEBUG] plugin: plugin process exited: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=48851
2020-07-30T11:04:57.017+0700 [DEBUG] plugin: plugin exited
2020/07/30 11:04:57 [TRACE] [walkValidate] Exiting eval tree: provider.bizfly (close)
2020/07/30 11:04:57 [TRACE] vertex "provider.bizfly (close)": visit complete
2020/07/30 11:04:57 [TRACE] dag/walk: visiting "root"
2020/07/30 11:04:57 [TRACE] vertex "root": starting visit (terraform.graphNodeRoot)
2020/07/30 11:04:57 [TRACE] vertex "root": visit complete
2020/07/30 11:04:57 [INFO] backend/local: apply calling Refresh
2020/07/30 11:04:57 [INFO] terraform: building graph: GraphTypeRefresh
2020/07/30 11:04:57 [TRACE] No managed resources in state during refresh; skipping managed resource transformer
2020/07/30 11:04:57 [TRACE] Executing graph transform *terraform.ConfigTransformer
2020/07/30 11:04:57 [TRACE] ConfigTransformer: Starting for path: 
2020/07/30 11:04:57 [TRACE] Completed graph transform *terraform.ConfigTransformer (no changes)
2020/07/30 11:04:57 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2020/07/30 11:04:57 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2020/07/30 11:04:57 [TRACE] Executing graph transform *terraform.StateTransformer
2020/07/30 11:04:57 [TRACE] StateTransformer: state is empty, so nothing to do
2020/07/30 11:04:57 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2020/07/30 11:04:57 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/30 11:04:57 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/30 11:04:57 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2020/07/30 11:04:57 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2020/07/30 11:04:57 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2020/07/30 11:04:57 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
var.login - *terraform.NodeRootVariable
------
2020/07/30 11:04:57 [TRACE] Executing graph transform *terraform.LocalTransformer
2020/07/30 11:04:57 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2020/07/30 11:04:57 [TRACE] Executing graph transform *terraform.OutputTransformer
2020/07/30 11:04:57 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2020/07/30 11:04:57 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2020/07/30 11:04:57 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2020/07/30 11:04:57 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2020/07/30 11:04:57 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2020/07/30 11:04:57 [TRACE] ProviderConfigTransformer: attaching to "provider.bizfly" provider configuration from main.tf:1,1-18
2020/07/30 11:04:57 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
provider.bizfly - *terraform.NodeApplyableProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 11:04:57 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2020/07/30 11:04:57 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2020/07/30 11:04:57 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2020/07/30 11:04:57 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer (no changes)
2020/07/30 11:04:57 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2020/07/30 11:04:57 [DEBUG] pruning unused provider.bizfly
2020/07/30 11:04:57 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer with new graph:
var.login - *terraform.NodeRootVariable
------
2020/07/30 11:04:57 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2020/07/30 11:04:57 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2020/07/30 11:04:57 [TRACE] Completed graph transform *terraform.graphTransformerMulti (no changes)
2020/07/30 11:04:57 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2020/07/30 11:04:57 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2020/07/30 11:04:57 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/30 11:04:57 [DEBUG] ReferenceTransformer: "var.login" references: []
2020/07/30 11:04:57 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/30 11:04:57 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/30 11:04:57 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/30 11:04:57 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2020/07/30 11:04:57 [TRACE] Completed graph transform *terraform.CloseProviderTransformer (no changes)
2020/07/30 11:04:57 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/30 11:04:57 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/07/30 11:04:57 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2020/07/30 11:04:57 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer (no changes)
2020/07/30 11:04:57 [DEBUG] Starting graph walk: walkRefresh
2020/07/30 11:04:57 [TRACE] dag/walk: updating graph
2020/07/30 11:04:57 [TRACE] dag/walk: added new vertex: "var.login"
2020/07/30 11:04:57 [TRACE] dag/walk: visiting "var.login"
2020/07/30 11:04:57 [TRACE] vertex "var.login": starting visit (*terraform.NodeRootVariable)
2020/07/30 11:04:57 [TRACE] vertex "var.login": visit complete
2020/07/30 11:04:57 [INFO] backend/local: apply calling Plan
2020/07/30 11:04:57 [INFO] terraform: building graph: GraphTypePlan
2020/07/30 11:04:57 [TRACE] Executing graph transform *terraform.ConfigTransformer
2020/07/30 11:04:57 [TRACE] ConfigTransformer: Starting for path: 
2020/07/30 11:04:57 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
bizfly_instance.test - *terraform.NodePlannableResource
------
2020/07/30 11:04:57 [TRACE] Executing graph transform *terraform.LocalTransformer
2020/07/30 11:04:57 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2020/07/30 11:04:57 [TRACE] Executing graph transform *terraform.OutputTransformer
2020/07/30 11:04:57 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2020/07/30 11:04:57 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2020/07/30 11:04:57 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2020/07/30 11:04:57 [TRACE] Executing graph transform *terraform.StateTransformer
2020/07/30 11:04:57 [TRACE] StateTransformer: state is empty, so nothing to do
2020/07/30 11:04:57 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2020/07/30 11:04:57 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2020/07/30 11:04:57 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2020/07/30 11:04:57 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2020/07/30 11:04:57 [TRACE] AttachResourceConfigTransformer: attaching to "bizfly_instance.test" (*terraform.NodePlannableResource) config from main.tf:7,1-34
2020/07/30 11:04:57 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2020/07/30 11:04:57 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/30 11:04:57 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/30 11:04:57 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2020/07/30 11:04:57 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
bizfly_instance.test - *terraform.NodePlannableResource
var.login - *terraform.NodeRootVariable
------
2020/07/30 11:04:57 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2020/07/30 11:04:57 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2020/07/30 11:04:57 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2020/07/30 11:04:57 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2020/07/30 11:04:57 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2020/07/30 11:04:57 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2020/07/30 11:04:57 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2020/07/30 11:04:57 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2020/07/30 11:04:57 [TRACE] ProviderConfigTransformer: attaching to "provider.bizfly" provider configuration from main.tf:1,1-18
2020/07/30 11:04:57 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
bizfly_instance.test - *terraform.NodePlannableResource
provider.bizfly - *terraform.NodeApplyableProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 11:04:57 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2020/07/30 11:04:57 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2020/07/30 11:04:57 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2020/07/30 11:04:57 [TRACE] ProviderTransformer: bizfly_instance.test is provided by provider.bizfly or inherited equivalent
2020/07/30 11:04:57 [TRACE] ProviderTransformer: exact match for provider.bizfly serving bizfly_instance.test
2020/07/30 11:04:57 [DEBUG] ProviderTransformer: "bizfly_instance.test" (*terraform.NodePlannableResource) needs provider.bizfly
2020/07/30 11:04:57 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
bizfly_instance.test - *terraform.NodePlannableResource
  provider.bizfly - *terraform.NodeApplyableProvider
provider.bizfly - *terraform.NodeApplyableProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 11:04:57 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2020/07/30 11:04:57 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2020/07/30 11:04:57 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2020/07/30 11:04:57 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2020/07/30 11:04:57 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
bizfly_instance.test - *terraform.NodePlannableResource
  provider.bizfly - *terraform.NodeApplyableProvider
provider.bizfly - *terraform.NodeApplyableProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 11:04:57 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2020/07/30 11:04:57 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2020/07/30 11:04:57 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2020/07/30 11:04:57 [TRACE] AttachSchemaTransformer: attaching resource schema to bizfly_instance.test
2020/07/30 11:04:57 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.bizfly
2020/07/30 11:04:57 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2020/07/30 11:04:57 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/30 11:04:57 [DEBUG] ReferenceTransformer: "bizfly_instance.test" references: []
2020/07/30 11:04:57 [DEBUG] ReferenceTransformer: "var.login" references: []
2020/07/30 11:04:57 [DEBUG] ReferenceTransformer: "provider.bizfly" references: []
2020/07/30 11:04:57 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/30 11:04:57 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2020/07/30 11:04:57 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
bizfly_instance.test - *terraform.NodePlannableResource
  provider.bizfly - *terraform.NodeApplyableProvider
meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  bizfly_instance.test - *terraform.NodePlannableResource
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
provider.bizfly - *terraform.NodeApplyableProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 11:04:57 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/30 11:04:57 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/30 11:04:57 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2020/07/30 11:04:57 [TRACE] ForcedCBDTransformer: "bizfly_instance.test" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2020/07/30 11:04:57 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2020/07/30 11:04:57 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2020/07/30 11:04:57 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
bizfly_instance.test - *terraform.NodePlannableResource
  provider.bizfly - *terraform.NodeApplyableProvider
meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  bizfly_instance.test - *terraform.NodePlannableResource
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
provider.bizfly - *terraform.NodeApplyableProvider
provider.bizfly (close) - *terraform.graphNodeCloseProvider
  bizfly_instance.test - *terraform.NodePlannableResource
  provider.bizfly - *terraform.NodeApplyableProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 11:04:57 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2020/07/30 11:04:57 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer (no changes)
2020/07/30 11:04:57 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/30 11:04:57 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
bizfly_instance.test - *terraform.NodePlannableResource
  provider.bizfly - *terraform.NodeApplyableProvider
meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  bizfly_instance.test - *terraform.NodePlannableResource
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
provider.bizfly - *terraform.NodeApplyableProvider
provider.bizfly (close) - *terraform.graphNodeCloseProvider
  bizfly_instance.test - *terraform.NodePlannableResource
  provider.bizfly - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 11:04:57 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2020/07/30 11:04:57 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
bizfly_instance.test - *terraform.NodePlannableResource
  provider.bizfly - *terraform.NodeApplyableProvider
meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  bizfly_instance.test - *terraform.NodePlannableResource
  var.login - *terraform.NodeRootVariable
provider.bizfly - *terraform.NodeApplyableProvider
provider.bizfly (close) - *terraform.graphNodeCloseProvider
  bizfly_instance.test - *terraform.NodePlannableResource
root - terraform.graphNodeRoot
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 11:04:57 [DEBUG] Starting graph walk: walkPlan
2020/07/30 11:04:57 [TRACE] dag/walk: updating graph
2020/07/30 11:04:57 [TRACE] dag/walk: added new vertex: "bizfly_instance.test"
2020/07/30 11:04:57 [TRACE] dag/walk: added new vertex: "var.login"
2020/07/30 11:04:57 [TRACE] dag/walk: added new vertex: "provider.bizfly"
2020/07/30 11:04:57 [TRACE] dag/walk: added new vertex: "meta.count-boundary (EachMode fixup)"
2020/07/30 11:04:57 [TRACE] dag/walk: added new vertex: "provider.bizfly (close)"
2020/07/30 11:04:57 [TRACE] dag/walk: added new vertex: "root"
2020/07/30 11:04:57 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (EachMode fixup)"
2020/07/30 11:04:57 [TRACE] dag/walk: added edge: "root" waiting on "provider.bizfly (close)"
2020/07/30 11:04:57 [TRACE] dag/walk: added edge: "bizfly_instance.test" waiting on "provider.bizfly"
2020/07/30 11:04:57 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "bizfly_instance.test"
2020/07/30 11:04:57 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "var.login"
2020/07/30 11:04:57 [TRACE] dag/walk: added edge: "provider.bizfly (close)" waiting on "bizfly_instance.test"
2020/07/30 11:04:57 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2020/07/30 11:04:57 [TRACE] dag/walk: dependencies changed for "bizfly_instance.test", sending new deps
2020/07/30 11:04:57 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (EachMode fixup)", sending new deps
2020/07/30 11:04:57 [TRACE] dag/walk: dependencies changed for "provider.bizfly (close)", sending new deps
2020/07/30 11:04:57 [TRACE] dag/walk: visiting "var.login"
2020/07/30 11:04:57 [TRACE] dag/walk: visiting "provider.bizfly"
2020/07/30 11:04:57 [TRACE] vertex "provider.bizfly": starting visit (*terraform.NodeApplyableProvider)
2020/07/30 11:04:57 [TRACE] vertex "var.login": starting visit (*terraform.NodeRootVariable)
2020/07/30 11:04:57 [TRACE] vertex "var.login": visit complete
2020/07/30 11:04:57 [TRACE] vertex "provider.bizfly": evaluating
2020/07/30 11:04:57 [TRACE] [walkPlan] Entering eval tree: provider.bizfly
2020/07/30 11:04:57 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:04:57 [TRACE] <root>: eval: *terraform.EvalInitProvider
2020-07-30T11:04:57.020+0700 [INFO]  plugin: configuring client automatic mTLS
2020-07-30T11:04:57.046+0700 [DEBUG] plugin: starting plugin: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly args=[/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly]
2020-07-30T11:04:57.050+0700 [DEBUG] plugin: plugin started: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=48852
2020-07-30T11:04:57.050+0700 [DEBUG] plugin: waiting for RPC address: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly
2020-07-30T11:04:57.068+0700 [INFO]  plugin.terraform-provider-bizfly: configuring server automatic mTLS: timestamp=2020-07-30T11:04:57.068+0700
2020-07-30T11:04:57.095+0700 [DEBUG] plugin: using plugin: version=5
2020-07-30T11:04:57.095+0700 [DEBUG] plugin.terraform-provider-bizfly: plugin address: address=/var/folders/0r/zdwrk7wn22vd_g32twvblrpc0000gn/T/plugin423269435 network=unix timestamp=2020-07-30T11:04:57.095+0700
2020/07/30 11:04:57 [TRACE] BuiltinEvalContext: Initialized "bizfly" provider for provider.bizfly
2020/07/30 11:04:57 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:04:57 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:04:57 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/07/30 11:04:57 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:04:57 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 11:04:57 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/07/30 11:04:57 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:04:57 [TRACE] <root>: eval: *terraform.EvalConfigProvider
2020/07/30 11:04:57 [TRACE] buildProviderConfig for provider.bizfly: using explicit config only
2020/07/30 11:04:57 [TRACE] GRPCProvider: GetSchema
2020/07/30 11:04:57 [TRACE] GRPCProvider: Configure
2020/07/30 11:04:58 [TRACE] [walkPlan] Exiting eval tree: provider.bizfly
2020/07/30 11:04:58 [TRACE] vertex "provider.bizfly": visit complete
2020/07/30 11:04:58 [TRACE] dag/walk: visiting "bizfly_instance.test"
2020/07/30 11:04:58 [TRACE] vertex "bizfly_instance.test": starting visit (*terraform.NodePlannableResource)
2020/07/30 11:04:58 [TRACE] vertex "bizfly_instance.test": evaluating
2020/07/30 11:04:58 [TRACE] [walkPlan] Entering eval tree: bizfly_instance.test
2020/07/30 11:04:58 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/07/30 11:04:58 [TRACE] [walkPlan] Exiting eval tree: bizfly_instance.test
2020/07/30 11:04:58 [TRACE] vertex "bizfly_instance.test": expanding dynamic subgraph
2020/07/30 11:04:58 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/07/30 11:04:58 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
bizfly_instance.test - *terraform.NodePlannableResourceInstance
------
2020/07/30 11:04:58 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/07/30 11:04:58 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/07/30 11:04:58 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/30 11:04:58 [DEBUG] Resource instance state not found for node "bizfly_instance.test", instance bizfly_instance.test
2020/07/30 11:04:58 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/30 11:04:58 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/30 11:04:58 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/30 11:04:58 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/30 11:04:58 [DEBUG] ReferenceTransformer: "bizfly_instance.test" references: []
2020/07/30 11:04:58 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/30 11:04:58 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/30 11:04:58 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/07/30 11:04:58 [TRACE] vertex "bizfly_instance.test": entering dynamic subgraph
2020/07/30 11:04:58 [TRACE] dag/walk: updating graph
2020/07/30 11:04:58 [TRACE] dag/walk: added new vertex: "bizfly_instance.test"
2020/07/30 11:04:58 [TRACE] dag/walk: visiting "bizfly_instance.test"
2020/07/30 11:04:58 [TRACE] vertex "bizfly_instance.test": starting visit (*terraform.NodePlannableResourceInstance)
2020/07/30 11:04:58 [TRACE] vertex "bizfly_instance.test": evaluating
2020/07/30 11:04:58 [TRACE] [walkPlan] Entering eval tree: bizfly_instance.test
2020/07/30 11:04:58 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:04:58 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 11:04:58 [TRACE] <root>: eval: *terraform.EvalReadState
2020/07/30 11:04:58 [TRACE] EvalReadState: reading state for bizfly_instance.test
2020/07/30 11:04:58 [TRACE] EvalReadState: no state present for bizfly_instance.test
2020/07/30 11:04:58 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2020/07/30 11:04:58 [TRACE] <root>: eval: *terraform.EvalDiff
2020/07/30 11:04:58 [TRACE] Re-validating config for "bizfly_instance.test"
2020/07/30 11:04:58 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/07/30 11:04:58 [TRACE] GRPCProvider: PlanResourceChange
2020/07/30 11:04:58 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2020/07/30 11:04:58 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/07/30 11:04:58 [TRACE] EvalWriteState: writing current state object for bizfly_instance.test
2020/07/30 11:04:58 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/07/30 11:04:58 [TRACE] EvalWriteDiff: recorded Create change for bizfly_instance.test
2020/07/30 11:04:58 [TRACE] [walkPlan] Exiting eval tree: bizfly_instance.test
2020/07/30 11:04:58 [TRACE] vertex "bizfly_instance.test": visit complete
2020/07/30 11:04:58 [TRACE] vertex "bizfly_instance.test": dynamic subgraph completed successfully
2020/07/30 11:04:58 [TRACE] vertex "bizfly_instance.test": visit complete
2020/07/30 11:04:58 [TRACE] dag/walk: visiting "provider.bizfly (close)"
2020/07/30 11:04:58 [TRACE] vertex "provider.bizfly (close)": starting visit (*terraform.graphNodeCloseProvider)
2020/07/30 11:04:58 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2020/07/30 11:04:58 [TRACE] vertex "provider.bizfly (close)": evaluating
2020/07/30 11:04:58 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2020/07/30 11:04:58 [TRACE] [walkPlan] Entering eval tree: provider.bizfly (close)
2020/07/30 11:04:58 [TRACE] <root>: eval: *terraform.EvalCloseProvider
2020/07/30 11:04:58 [TRACE] vertex "meta.count-boundary (EachMode fixup)": evaluating
2020/07/30 11:04:58 [TRACE] [walkPlan] Entering eval tree: meta.count-boundary (EachMode fixup)
2020/07/30 11:04:58 [TRACE] GRPCProvider: Close
2020/07/30 11:04:58 [TRACE] <root>: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2020/07/30 11:04:58 [TRACE] [walkPlan] Exiting eval tree: meta.count-boundary (EachMode fixup)
2020/07/30 11:04:58 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2020-07-30T11:04:58.476+0700 [DEBUG] plugin: plugin process exited: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=48852
2020-07-30T11:04:58.476+0700 [DEBUG] plugin: plugin exited
2020/07/30 11:04:58 [TRACE] [walkPlan] Exiting eval tree: provider.bizfly (close)
2020/07/30 11:04:58 [TRACE] vertex "provider.bizfly (close)": visit complete
2020/07/30 11:04:58 [TRACE] dag/walk: visiting "root"
2020/07/30 11:04:58 [TRACE] vertex "root": starting visit (terraform.graphNodeRoot)
2020/07/30 11:04:58 [TRACE] vertex "root": visit complete
2020/07/30 11:04:58 [DEBUG] command: asking for input: "Do you want to perform these actions?"
2020/07/30 11:04:59 [INFO] backend/local: apply calling Apply
2020/07/30 11:04:59 [INFO] terraform: building graph: GraphTypeApply
2020/07/30 11:04:59 [TRACE] Executing graph transform *terraform.ConfigTransformer
2020/07/30 11:04:59 [TRACE] ConfigTransformer: Starting for path: 
2020/07/30 11:04:59 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
------
2020/07/30 11:04:59 [TRACE] Executing graph transform *terraform.DiffTransformer
2020/07/30 11:04:59 [TRACE] DiffTransformer starting
2020/07/30 11:04:59 [TRACE] DiffTransformer: found Create change for bizfly_instance.test 
2020/07/30 11:04:59 [TRACE] DiffTransformer: bizfly_instance.test will be represented by bizfly_instance.test
2020/07/30 11:04:59 [TRACE] DiffTransformer complete
2020/07/30 11:04:59 [TRACE] Completed graph transform *terraform.DiffTransformer with new graph:
bizfly_instance.test - *terraform.NodeApplyableResourceInstance
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
------
2020/07/30 11:04:59 [TRACE] Executing graph transform *terraform.OrphanResourceTransformer
2020/07/30 11:04:59 [TRACE] Completed graph transform *terraform.OrphanResourceTransformer (no changes)
2020/07/30 11:04:59 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2020/07/30 11:04:59 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2020/07/30 11:04:59 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2020/07/30 11:04:59 [TRACE] AttachResourceConfigTransformer: attaching to "bizfly_instance.test (prepare state)" (*terraform.NodeApplyableResource) config from main.tf:7,1-34
2020/07/30 11:04:59 [TRACE] AttachResourceConfigTransformer: attaching to "bizfly_instance.test" (*terraform.NodeApplyableResourceInstance) config from main.tf:7,1-34
2020/07/30 11:04:59 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2020/07/30 11:04:59 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/30 11:04:59 [DEBUG] Resource state not found for node "bizfly_instance.test", instance bizfly_instance.test
2020/07/30 11:04:59 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/30 11:04:59 [TRACE] Executing graph transform *terraform.DestroyEdgeTransformer
2020/07/30 11:04:59 [TRACE] Completed graph transform *terraform.DestroyEdgeTransformer (no changes)
2020/07/30 11:04:59 [TRACE] Executing graph transform *terraform.CBDEdgeTransformer
2020/07/30 11:04:59 [TRACE] Completed graph transform *terraform.CBDEdgeTransformer (no changes)
2020/07/30 11:04:59 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2020/07/30 11:04:59 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2020/07/30 11:04:59 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2020/07/30 11:04:59 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2020/07/30 11:04:59 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2020/07/30 11:04:59 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
bizfly_instance.test - *terraform.NodeApplyableResourceInstance
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
var.login - *terraform.NodeRootVariable
------
2020/07/30 11:04:59 [TRACE] Executing graph transform *terraform.LocalTransformer
2020/07/30 11:04:59 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2020/07/30 11:04:59 [TRACE] Executing graph transform *terraform.OutputTransformer
2020/07/30 11:04:59 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2020/07/30 11:04:59 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2020/07/30 11:04:59 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2020/07/30 11:04:59 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2020/07/30 11:04:59 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2020/07/30 11:04:59 [TRACE] ProviderConfigTransformer: attaching to "provider.bizfly" provider configuration from main.tf:1,1-18
2020/07/30 11:04:59 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
bizfly_instance.test - *terraform.NodeApplyableResourceInstance
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
provider.bizfly - *terraform.NodeApplyableProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 11:04:59 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2020/07/30 11:04:59 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2020/07/30 11:04:59 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2020/07/30 11:04:59 [TRACE] ProviderTransformer: bizfly_instance.test (prepare state) is provided by provider.bizfly or inherited equivalent
2020/07/30 11:04:59 [TRACE] ProviderTransformer: bizfly_instance.test is provided by provider.bizfly or inherited equivalent
2020/07/30 11:04:59 [TRACE] ProviderTransformer: exact match for provider.bizfly serving bizfly_instance.test
2020/07/30 11:04:59 [DEBUG] ProviderTransformer: "bizfly_instance.test" (*terraform.NodeApplyableResourceInstance) needs provider.bizfly
2020/07/30 11:04:59 [TRACE] ProviderTransformer: exact match for provider.bizfly serving bizfly_instance.test (prepare state)
2020/07/30 11:04:59 [DEBUG] ProviderTransformer: "bizfly_instance.test (prepare state)" (*terraform.NodeApplyableResource) needs provider.bizfly
2020/07/30 11:04:59 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
bizfly_instance.test - *terraform.NodeApplyableResourceInstance
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
  provider.bizfly - *terraform.NodeApplyableProvider
bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
  provider.bizfly - *terraform.NodeApplyableProvider
provider.bizfly - *terraform.NodeApplyableProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 11:04:59 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2020/07/30 11:04:59 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2020/07/30 11:04:59 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2020/07/30 11:04:59 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2020/07/30 11:04:59 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
bizfly_instance.test - *terraform.NodeApplyableResourceInstance
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
  provider.bizfly - *terraform.NodeApplyableProvider
bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
  provider.bizfly - *terraform.NodeApplyableProvider
provider.bizfly - *terraform.NodeApplyableProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 11:04:59 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2020/07/30 11:04:59 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2020/07/30 11:04:59 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2020/07/30 11:04:59 [TRACE] AttachSchemaTransformer: attaching resource schema to bizfly_instance.test (prepare state)
2020/07/30 11:04:59 [TRACE] AttachSchemaTransformer: attaching resource schema to bizfly_instance.test
2020/07/30 11:04:59 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.bizfly
2020/07/30 11:04:59 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2020/07/30 11:04:59 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/30 11:04:59 [DEBUG] ReferenceTransformer: "bizfly_instance.test (prepare state)" references: []
2020/07/30 11:04:59 [DEBUG] ReferenceTransformer: "bizfly_instance.test" references: []
2020/07/30 11:04:59 [DEBUG] ReferenceTransformer: "var.login" references: []
2020/07/30 11:04:59 [DEBUG] ReferenceTransformer: "provider.bizfly" references: []
2020/07/30 11:04:59 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/30 11:04:59 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2020/07/30 11:04:59 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
bizfly_instance.test - *terraform.NodeApplyableResourceInstance
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
  provider.bizfly - *terraform.NodeApplyableProvider
bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
  provider.bizfly - *terraform.NodeApplyableProvider
meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  bizfly_instance.test - *terraform.NodeApplyableResourceInstance
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
provider.bizfly - *terraform.NodeApplyableProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 11:04:59 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/30 11:04:59 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/30 11:04:59 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2020/07/30 11:04:59 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
bizfly_instance.test - *terraform.NodeApplyableResourceInstance
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
  provider.bizfly - *terraform.NodeApplyableProvider
bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
  provider.bizfly - *terraform.NodeApplyableProvider
meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  bizfly_instance.test - *terraform.NodeApplyableResourceInstance
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
provider.bizfly - *terraform.NodeApplyableProvider
provider.bizfly (close) - *terraform.graphNodeCloseProvider
  bizfly_instance.test - *terraform.NodeApplyableResourceInstance
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
  provider.bizfly - *terraform.NodeApplyableProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 11:04:59 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2020/07/30 11:04:59 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer (no changes)
2020/07/30 11:04:59 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/30 11:04:59 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
bizfly_instance.test - *terraform.NodeApplyableResourceInstance
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
  provider.bizfly - *terraform.NodeApplyableProvider
bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
  provider.bizfly - *terraform.NodeApplyableProvider
meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  bizfly_instance.test - *terraform.NodeApplyableResourceInstance
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
provider.bizfly - *terraform.NodeApplyableProvider
provider.bizfly (close) - *terraform.graphNodeCloseProvider
  bizfly_instance.test - *terraform.NodeApplyableResourceInstance
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
  provider.bizfly - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 11:04:59 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2020/07/30 11:04:59 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
bizfly_instance.test - *terraform.NodeApplyableResourceInstance
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
  provider.bizfly - *terraform.NodeApplyableProvider
meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  bizfly_instance.test - *terraform.NodeApplyableResourceInstance
  var.login - *terraform.NodeRootVariable
provider.bizfly - *terraform.NodeApplyableProvider
provider.bizfly (close) - *terraform.graphNodeCloseProvider
  bizfly_instance.test - *terraform.NodeApplyableResourceInstance
root - terraform.graphNodeRoot
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 11:04:59 [DEBUG] Starting graph walk: walkApply
2020/07/30 11:04:59 [TRACE] dag/walk: updating graph
2020/07/30 11:04:59 [TRACE] dag/walk: added new vertex: "bizfly_instance.test"
2020/07/30 11:04:59 [TRACE] dag/walk: added new vertex: "var.login"
2020/07/30 11:04:59 [TRACE] dag/walk: added new vertex: "provider.bizfly"
2020/07/30 11:04:59 [TRACE] dag/walk: added new vertex: "meta.count-boundary (EachMode fixup)"
2020/07/30 11:04:59 [TRACE] dag/walk: added new vertex: "provider.bizfly (close)"
2020/07/30 11:04:59 [TRACE] dag/walk: added new vertex: "root"
2020/07/30 11:04:59 [TRACE] dag/walk: added new vertex: "bizfly_instance.test (prepare state)"
2020/07/30 11:04:59 [TRACE] dag/walk: added edge: "root" waiting on "provider.bizfly (close)"
2020/07/30 11:04:59 [TRACE] dag/walk: added edge: "bizfly_instance.test (prepare state)" waiting on "provider.bizfly"
2020/07/30 11:04:59 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "bizfly_instance.test"
2020/07/30 11:04:59 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "var.login"
2020/07/30 11:04:59 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (EachMode fixup)"
2020/07/30 11:04:59 [TRACE] dag/walk: added edge: "bizfly_instance.test" waiting on "bizfly_instance.test (prepare state)"
2020/07/30 11:04:59 [TRACE] dag/walk: added edge: "provider.bizfly (close)" waiting on "bizfly_instance.test"
2020/07/30 11:04:59 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (EachMode fixup)", sending new deps
2020/07/30 11:04:59 [TRACE] dag/walk: dependencies changed for "bizfly_instance.test", sending new deps
2020/07/30 11:04:59 [TRACE] dag/walk: dependencies changed for "provider.bizfly (close)", sending new deps
2020/07/30 11:04:59 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2020/07/30 11:04:59 [TRACE] dag/walk: dependencies changed for "bizfly_instance.test (prepare state)", sending new deps
2020/07/30 11:04:59 [TRACE] dag/walk: visiting "provider.bizfly"
2020/07/30 11:04:59 [TRACE] vertex "provider.bizfly": starting visit (*terraform.NodeApplyableProvider)
2020/07/30 11:04:59 [TRACE] dag/walk: visiting "var.login"
2020/07/30 11:04:59 [TRACE] vertex "var.login": starting visit (*terraform.NodeRootVariable)
2020/07/30 11:04:59 [TRACE] vertex "var.login": visit complete
2020/07/30 11:04:59 [TRACE] vertex "provider.bizfly": evaluating
2020/07/30 11:04:59 [TRACE] [walkApply] Entering eval tree: provider.bizfly
2020/07/30 11:04:59 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:04:59 [TRACE] <root>: eval: *terraform.EvalInitProvider
2020-07-30T11:04:59.940+0700 [INFO]  plugin: configuring client automatic mTLS
2020-07-30T11:04:59.969+0700 [DEBUG] plugin: starting plugin: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly args=[/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly]
2020-07-30T11:04:59.972+0700 [DEBUG] plugin: plugin started: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=48857
2020-07-30T11:04:59.972+0700 [DEBUG] plugin: waiting for RPC address: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly
2020-07-30T11:04:59.991+0700 [INFO]  plugin.terraform-provider-bizfly: configuring server automatic mTLS: timestamp=2020-07-30T11:04:59.991+0700
2020-07-30T11:05:00.018+0700 [DEBUG] plugin: using plugin: version=5
2020-07-30T11:05:00.018+0700 [DEBUG] plugin.terraform-provider-bizfly: plugin address: address=/var/folders/0r/zdwrk7wn22vd_g32twvblrpc0000gn/T/plugin305757676 network=unix timestamp=2020-07-30T11:05:00.018+0700
2020/07/30 11:05:00 [TRACE] BuiltinEvalContext: Initialized "bizfly" provider for provider.bizfly
2020/07/30 11:05:00 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:05:00 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:05:00 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/07/30 11:05:00 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:05:00 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 11:05:00 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/07/30 11:05:00 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:05:00 [TRACE] <root>: eval: *terraform.EvalConfigProvider
2020/07/30 11:05:00 [TRACE] buildProviderConfig for provider.bizfly: using explicit config only
2020/07/30 11:05:00 [TRACE] GRPCProvider: GetSchema
2020/07/30 11:05:00 [TRACE] GRPCProvider: Configure
2020/07/30 11:05:02 [TRACE] [walkApply] Exiting eval tree: provider.bizfly
2020/07/30 11:05:02 [TRACE] vertex "provider.bizfly": visit complete
2020/07/30 11:05:02 [TRACE] dag/walk: visiting "bizfly_instance.test (prepare state)"
2020/07/30 11:05:02 [TRACE] vertex "bizfly_instance.test (prepare state)": starting visit (*terraform.NodeApplyableResource)
2020/07/30 11:05:02 [TRACE] vertex "bizfly_instance.test (prepare state)": evaluating
2020/07/30 11:05:02 [TRACE] [walkApply] Entering eval tree: bizfly_instance.test (prepare state)
2020/07/30 11:05:02 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/07/30 11:05:02 [TRACE] [walkApply] Exiting eval tree: bizfly_instance.test (prepare state)
2020/07/30 11:05:02 [TRACE] vertex "bizfly_instance.test (prepare state)": visit complete
2020/07/30 11:05:02 [TRACE] dag/walk: visiting "bizfly_instance.test"
2020/07/30 11:05:02 [TRACE] vertex "bizfly_instance.test": starting visit (*terraform.NodeApplyableResourceInstance)
2020/07/30 11:05:02 [TRACE] vertex "bizfly_instance.test": evaluating
2020/07/30 11:05:02 [TRACE] [walkApply] Entering eval tree: bizfly_instance.test
2020/07/30 11:05:02 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:05:02 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 11:05:02 [TRACE] <root>: eval: *terraform.EvalReadDiff
2020/07/30 11:05:02 [TRACE] EvalReadDiff: Read Create change from plan for bizfly_instance.test
2020/07/30 11:05:02 [TRACE] <root>: eval: *terraform.EvalIf
2020/07/30 11:05:02 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:05:02 [TRACE] <root>: eval: *terraform.EvalIf
2020/07/30 11:05:02 [TRACE] <root>: eval: *terraform.EvalReadState
2020/07/30 11:05:02 [TRACE] EvalReadState: reading state for bizfly_instance.test
2020/07/30 11:05:02 [TRACE] EvalReadState: no state present for bizfly_instance.test
2020/07/30 11:05:02 [TRACE] <root>: eval: *terraform.EvalReadDiff
2020/07/30 11:05:02 [TRACE] EvalReadDiff: Read Create change from plan for bizfly_instance.test
2020/07/30 11:05:02 [TRACE] <root>: eval: *terraform.EvalDiff
2020/07/30 11:05:02 [TRACE] Re-validating config for "bizfly_instance.test"
2020/07/30 11:05:02 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/07/30 11:05:02 [TRACE] GRPCProvider: PlanResourceChange
2020/07/30 11:05:02 [TRACE] <root>: eval: *terraform.EvalCheckPlannedChange
2020/07/30 11:05:02 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2020/07/30 11:05:02 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 11:05:02 [TRACE] <root>: eval: *terraform.EvalReadState
2020/07/30 11:05:02 [TRACE] EvalReadState: reading state for bizfly_instance.test
2020/07/30 11:05:02 [TRACE] EvalReadState: no state present for bizfly_instance.test
2020/07/30 11:05:02 [TRACE] <root>: eval: *terraform.EvalReduceDiff
2020/07/30 11:05:02 [TRACE] <root>: eval: *terraform.EvalIf
2020/07/30 11:05:02 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:05:02 [TRACE] <root>: eval: *terraform.EvalApplyPre
2020/07/30 11:05:02 [TRACE] <root>: eval: *terraform.EvalApply
2020/07/30 11:05:02 [DEBUG] bizfly_instance.test: applying the planned Create change
2020/07/30 11:05:02 [TRACE] GRPCProvider: ApplyResourceChange
2020-07-30T11:05:02.467+0700 [DEBUG] plugin.terraform-provider-bizfly: panic: interface conversion: interface {} is *schema.Set, not []interface {}
2020-07-30T11:05:02.467+0700 [DEBUG] plugin.terraform-provider-bizfly: 
2020-07-30T11:05:02.467+0700 [DEBUG] plugin.terraform-provider-bizfly: goroutine 83 [running]:
2020-07-30T11:05:02.467+0700 [DEBUG] plugin.terraform-provider-bizfly: terraform-provider-bizfly/provider.resouceInstanceCreate(0xc00013cee0, 0x1aeb820, 0xc000320f00, 0x2, 0x25cf840)
2020-07-30T11:05:02.467+0700 [DEBUG] plugin.terraform-provider-bizfly: 	/Users/hung/go/src/terraform-provider-bizfly/provider/resource_instance.go:136 +0x356
2020-07-30T11:05:02.467+0700 [DEBUG] plugin.terraform-provider-bizfly: github.com/hashicorp/terraform-plugin-sdk/helper/schema.(*Resource).Apply(0xc000522240, 0xc00024c0a0, 0xc0001ca9e0, 0x1aeb820, 0xc000320f00, 0x1a9e901, 0xc000413378, 0xc00033cba0)
2020-07-30T11:05:02.467+0700 [DEBUG] plugin.terraform-provider-bizfly: 	/Users/hung/go/pkg/mod/github.com/hashicorp/terraform-plugin-sdk@v1.15.0/helper/schema/resource.go:310 +0x365
2020-07-30T11:05:02.467+0700 [DEBUG] plugin.terraform-provider-bizfly: github.com/hashicorp/terraform-plugin-sdk/helper/schema.(*Provider).Apply(0xc000500080, 0xc00010ba10, 0xc00024c0a0, 0xc0001ca9e0, 0xc00031f3a8, 0xc00058e700, 0x1aa0540)
2020-07-30T11:05:02.467+0700 [DEBUG] plugin.terraform-provider-bizfly: 	/Users/hung/go/pkg/mod/github.com/hashicorp/terraform-plugin-sdk@v1.15.0/helper/schema/provider.go:294 +0x99
2020-07-30T11:05:02.467+0700 [DEBUG] plugin.terraform-provider-bizfly: github.com/hashicorp/terraform-plugin-sdk/internal/helper/plugin.(*GRPCProviderServer).ApplyResourceChange(0xc000010040, 0x1e83940, 0xc0002d4cc0, 0xc00013c850, 0xc000010040, 0xc0002d4cc0, 0xc00030ab78)
2020-07-30T11:05:02.467+0700 [DEBUG] plugin.terraform-provider-bizfly: 	/Users/hung/go/pkg/mod/github.com/hashicorp/terraform-plugin-sdk@v1.15.0/internal/helper/plugin/grpc_provider.go:885 +0x8b4
2020-07-30T11:05:02.467+0700 [DEBUG] plugin.terraform-provider-bizfly: github.com/hashicorp/terraform-plugin-sdk/internal/tfplugin5._Provider_ApplyResourceChange_Handler(0x1bb14c0, 0xc000010040, 0x1e83940, 0xc0002d4cc0, 0xc0005d10e0, 0x0, 0x1e83940, 0xc0002d4cc0, 0xc0002cc5a0, 0x1ce)
2020-07-30T11:05:02.467+0700 [DEBUG] plugin.terraform-provider-bizfly: 	/Users/hung/go/pkg/mod/github.com/hashicorp/terraform-plugin-sdk@v1.15.0/internal/tfplugin5/tfplugin5.pb.go:3305 +0x217
2020-07-30T11:05:02.467+0700 [DEBUG] plugin.terraform-provider-bizfly: google.golang.org/grpc.(*Server).processUnaryRPC(0xc00008b500, 0x1e8e1e0, 0xc000642600, 0xc00013a500, 0xc000598510, 0x2595940, 0x0, 0x0, 0x0)
2020-07-30T11:05:02.467+0700 [DEBUG] plugin.terraform-provider-bizfly: 	/Users/hung/go/pkg/mod/google.golang.org/grpc@v1.27.1/server.go:1024 +0x501
2020-07-30T11:05:02.467+0700 [DEBUG] plugin.terraform-provider-bizfly: google.golang.org/grpc.(*Server).handleStream(0xc00008b500, 0x1e8e1e0, 0xc000642600, 0xc00013a500, 0x0)
2020-07-30T11:05:02.467+0700 [DEBUG] plugin.terraform-provider-bizfly: 	/Users/hung/go/pkg/mod/google.golang.org/grpc@v1.27.1/server.go:1313 +0xd3d
2020-07-30T11:05:02.467+0700 [DEBUG] plugin.terraform-provider-bizfly: google.golang.org/grpc.(*Server).serveStreams.func1.1(0xc0005801b0, 0xc00008b500, 0x1e8e1e0, 0xc000642600, 0xc00013a500)
2020-07-30T11:05:02.467+0700 [DEBUG] plugin.terraform-provider-bizfly: 	/Users/hung/go/pkg/mod/google.golang.org/grpc@v1.27.1/server.go:722 +0xa1
2020-07-30T11:05:02.467+0700 [DEBUG] plugin.terraform-provider-bizfly: created by google.golang.org/grpc.(*Server).serveStreams.func1
2020-07-30T11:05:02.467+0700 [DEBUG] plugin.terraform-provider-bizfly: 	/Users/hung/go/pkg/mod/google.golang.org/grpc@v1.27.1/server.go:720 +0xa1
2020-07-30T11:05:02.471+0700 [DEBUG] plugin: plugin process exited: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=48857 error="exit status 2"
2020/07/30 11:05:02 [DEBUG] bizfly_instance.test: apply errored, but we're indicating that via the Error pointer rather than returning it: rpc error: code = Unavailable desc = transport is closing
2020/07/30 11:05:02 [TRACE] <root>: eval: *terraform.EvalMaybeTainted
2020/07/30 11:05:02 [TRACE] EvalMaybeTainted: bizfly_instance.test encountered an error during creation, so it is now marked as tainted
2020/07/30 11:05:02 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/07/30 11:05:02 [TRACE] EvalWriteState: removing state object for bizfly_instance.test
2020/07/30 11:05:02 [TRACE] <root>: eval: *terraform.EvalApplyProvisioners
2020/07/30 11:05:02 [TRACE] EvalApplyProvisioners: bizfly_instance.test has no state, so skipping provisioners
2020/07/30 11:05:02 [TRACE] <root>: eval: *terraform.EvalMaybeTainted
2020/07/30 11:05:02 [TRACE] EvalMaybeTainted: bizfly_instance.test encountered an error during creation, so it is now marked as tainted
2020/07/30 11:05:02 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/07/30 11:05:02 [TRACE] EvalWriteState: removing state object for bizfly_instance.test
2020/07/30 11:05:02 [TRACE] <root>: eval: *terraform.EvalIf
2020/07/30 11:05:02 [TRACE] <root>: eval: *terraform.EvalIf
2020/07/30 11:05:02 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/07/30 11:05:02 [TRACE] <root>: eval: *terraform.EvalApplyPost
2020/07/30 11:05:02 [ERROR] <root>: eval: *terraform.EvalApplyPost, err: rpc error: code = Unavailable desc = transport is closing
2020/07/30 11:05:02 [ERROR] <root>: eval: *terraform.EvalSequence, err: rpc error: code = Unavailable desc = transport is closing
2020/07/30 11:05:02 [TRACE] [walkApply] Exiting eval tree: bizfly_instance.test
2020/07/30 11:05:02 [TRACE] vertex "bizfly_instance.test": visit complete
2020/07/30 11:05:02 [TRACE] dag/walk: upstream of "provider.bizfly (close)" errored, so skipping
2020/07/30 11:05:02 [TRACE] dag/walk: upstream of "meta.count-boundary (EachMode fixup)" errored, so skipping
2020/07/30 11:05:02 [TRACE] dag/walk: upstream of "root" errored, so skipping
2020/07/30 11:05:02 [TRACE] statemgr.Filesystem: not making a backup, because the new snapshot is identical to the old
2020/07/30 11:05:02 [TRACE] statemgr.Filesystem: no state changes since last snapshot
2020/07/30 11:05:02 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2020/07/30 11:05:02 [TRACE] statemgr.Filesystem: removing lock metadata file .terraform.tfstate.lock.info
2020/07/30 11:05:02 [TRACE] statemgr.Filesystem: unlocking terraform.tfstate using fcntl flock
2020-07-30T11:05:02.479+0700 [DEBUG] plugin: plugin exited
2020/07/30 11:05:47 [INFO] Terraform version: 0.12.9  
2020/07/30 11:05:47 [INFO] Go runtime version: go1.13
2020/07/30 11:05:47 [INFO] CLI args: []string{"/usr/local/bin/terraform", "init"}
2020/07/30 11:05:47 [DEBUG] Attempting to open CLI config file: /Users/hung/.terraformrc
2020/07/30 11:05:47 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2020/07/30 11:05:47 [INFO] CLI command args: []string{"init"}
2020/07/30 11:05:47 [TRACE] Meta.Backend: no config given or present on disk, so returning nil config
2020/07/30 11:05:47 [TRACE] Meta.Backend: backend has not previously been initialized in this working directory
2020/07/30 11:05:47 [DEBUG] New state was assigned lineage "e21cdc6d-4149-9d84-00d9-1dc805d2894e"
2020/07/30 11:05:47 [TRACE] Meta.Backend: using default local state only (no backend configuration, and no existing initialized backend)
2020/07/30 11:05:47 [TRACE] Meta.Backend: instantiated backend of type <nil>
2020/07/30 11:05:47 [DEBUG] checking for provider in "."
2020/07/30 11:05:47 [WARN] found legacy provider "terraform-provider-bizfly"
2020/07/30 11:05:47 [DEBUG] checking for provider in "/usr/local/bin"
2020/07/30 11:05:47 [DEBUG] checking for provider in ".terraform/plugins/darwin_amd64"
2020/07/30 11:05:47 [DEBUG] found valid plugin: "bizfly", "0.0.0", "/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly"
2020/07/30 11:05:47 [DEBUG] checking for provisioner in "."
2020/07/30 11:05:47 [DEBUG] checking for provisioner in "/usr/local/bin"
2020/07/30 11:05:47 [DEBUG] checking for provisioner in ".terraform/plugins/darwin_amd64"
2020/07/30 11:05:47 [TRACE] Meta.Backend: backend <nil> does not support operations, so wrapping it in a local backend
2020/07/30 11:05:47 [TRACE] backend/local: state manager for workspace "default" will:
 - read initial snapshot from terraform.tfstate
 - write new snapshots to terraform.tfstate
 - create any backup at terraform.tfstate.backup
2020/07/30 11:05:47 [TRACE] statemgr.Filesystem: reading initial snapshot from terraform.tfstate
2020/07/30 11:05:47 [TRACE] statemgr.Filesystem: read snapshot with lineage "8e1934d5-1d8f-e9a8-58e8-6c54c3aa209a" serial 1
2020/07/30 11:05:47 [DEBUG] checking for provider in "."
2020/07/30 11:05:47 [WARN] found legacy provider "terraform-provider-bizfly"
2020/07/30 11:05:47 [DEBUG] checking for provider in "/usr/local/bin"
2020/07/30 11:05:47 [DEBUG] checking for provider in ".terraform/plugins/darwin_amd64"
2020/07/30 11:05:47 [DEBUG] found valid plugin: "bizfly", "0.0.0", "/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly"
2020/07/30 11:05:47 [DEBUG] plugin requirements: "bizfly"=""
2020/07/30 11:05:47 [DEBUG] checking for provider in "."
2020/07/30 11:05:47 [WARN] found legacy provider "terraform-provider-bizfly"
2020/07/30 11:05:47 [DEBUG] checking for provider in "/usr/local/bin"
2020/07/30 11:05:47 [DEBUG] checking for provider in ".terraform/plugins/darwin_amd64"
2020/07/30 11:05:47 [DEBUG] found valid plugin: "bizfly", "0.0.0", "/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly"
2020/07/30 11:05:47 [DEBUG] checking for provider in ".terraform/plugins/darwin_amd64"
2020/07/30 11:05:50 [INFO] Terraform version: 0.12.9  
2020/07/30 11:05:50 [INFO] Go runtime version: go1.13
2020/07/30 11:05:50 [INFO] CLI args: []string{"/usr/local/bin/terraform", "plan"}
2020/07/30 11:05:50 [DEBUG] Attempting to open CLI config file: /Users/hung/.terraformrc
2020/07/30 11:05:50 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2020/07/30 11:05:50 [INFO] CLI command args: []string{"plan"}
2020/07/30 11:05:50 [TRACE] Meta.Backend: no config given or present on disk, so returning nil config
2020/07/30 11:05:50 [TRACE] Meta.Backend: backend has not previously been initialized in this working directory
2020/07/30 11:05:50 [DEBUG] New state was assigned lineage "0fbb6254-d86d-e7ff-8249-6dce93180204"
2020/07/30 11:05:50 [TRACE] Meta.Backend: using default local state only (no backend configuration, and no existing initialized backend)
2020/07/30 11:05:50 [TRACE] Meta.Backend: instantiated backend of type <nil>
2020/07/30 11:05:50 [DEBUG] checking for provider in "."
2020/07/30 11:05:50 [WARN] found legacy provider "terraform-provider-bizfly"
2020/07/30 11:05:50 [DEBUG] checking for provider in "/usr/local/bin"
2020/07/30 11:05:50 [DEBUG] checking for provider in ".terraform/plugins/darwin_amd64"
2020/07/30 11:05:50 [DEBUG] found valid plugin: "bizfly", "0.0.0", "/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly"
2020/07/30 11:05:50 [DEBUG] checking for provisioner in "."
2020/07/30 11:05:50 [DEBUG] checking for provisioner in "/usr/local/bin"
2020/07/30 11:05:50 [DEBUG] checking for provisioner in ".terraform/plugins/darwin_amd64"
2020/07/30 11:05:50 [TRACE] Meta.Backend: backend <nil> does not support operations, so wrapping it in a local backend
2020/07/30 11:05:50 [INFO] backend/local: starting Plan operation
2020/07/30 11:05:50 [TRACE] backend/local: requesting state manager for workspace "default"
2020/07/30 11:05:50 [TRACE] backend/local: state manager for workspace "default" will:
 - read initial snapshot from terraform.tfstate
 - write new snapshots to terraform.tfstate
 - create any backup at terraform.tfstate.backup
2020/07/30 11:05:50 [TRACE] backend/local: requesting state lock for workspace "default"
2020/07/30 11:05:50 [TRACE] statemgr.Filesystem: preparing to manage state snapshots at terraform.tfstate
2020/07/30 11:05:50 [TRACE] statemgr.Filesystem: existing snapshot has lineage "8e1934d5-1d8f-e9a8-58e8-6c54c3aa209a" serial 1
2020/07/30 11:05:50 [TRACE] statemgr.Filesystem: locking terraform.tfstate using fcntl flock
2020/07/30 11:05:50 [TRACE] statemgr.Filesystem: writing lock metadata to .terraform.tfstate.lock.info
2020/07/30 11:05:50 [TRACE] backend/local: reading remote state for workspace "default"
2020/07/30 11:05:50 [TRACE] statemgr.Filesystem: reading latest snapshot from terraform.tfstate
2020/07/30 11:05:50 [TRACE] statemgr.Filesystem: read snapshot with lineage "8e1934d5-1d8f-e9a8-58e8-6c54c3aa209a" serial 1
2020/07/30 11:05:50 [TRACE] backend/local: retrieving local state snapshot for workspace "default"
2020/07/30 11:05:50 [TRACE] backend/local: building context for current working directory
2020/07/30 11:05:50 [TRACE] terraform.NewContext: starting
2020/07/30 11:05:50 [TRACE] terraform.NewContext: resolving provider version selections
2020/07/30 11:05:50 [TRACE] terraform.NewContext: loading provider schemas
2020/07/30 11:05:50 [TRACE] LoadSchemas: retrieving schema for provider type "bizfly"
2020-07-30T11:05:50.315+0700 [INFO]  plugin: configuring client automatic mTLS
2020-07-30T11:05:50.342+0700 [DEBUG] plugin: starting plugin: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly args=[/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly]
2020-07-30T11:05:50.346+0700 [DEBUG] plugin: plugin started: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=49027
2020-07-30T11:05:50.346+0700 [DEBUG] plugin: waiting for RPC address: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly
2020-07-30T11:05:50.364+0700 [INFO]  plugin.terraform-provider-bizfly: configuring server automatic mTLS: timestamp=2020-07-30T11:05:50.364+0700
2020-07-30T11:05:50.393+0700 [DEBUG] plugin: using plugin: version=5
2020-07-30T11:05:50.393+0700 [DEBUG] plugin.terraform-provider-bizfly: plugin address: network=unix address=/var/folders/0r/zdwrk7wn22vd_g32twvblrpc0000gn/T/plugin065006006 timestamp=2020-07-30T11:05:50.393+0700
2020/07/30 11:05:50 [TRACE] GRPCProvider: GetSchema
2020/07/30 11:05:50 [TRACE] GRPCProvider: Close
2020-07-30T11:05:50.451+0700 [DEBUG] plugin: plugin process exited: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=49027
2020-07-30T11:05:50.451+0700 [DEBUG] plugin: plugin exited
2020/07/30 11:05:50 [TRACE] terraform.NewContext: complete
2020/07/30 11:05:50 [TRACE] backend/local: finished building terraform.Context
2020/07/30 11:05:50 [TRACE] backend/local: requesting interactive input, if necessary
2020/07/30 11:05:50 [TRACE] Context.Input: Prompting for variables
2020/07/30 11:05:50 [TRACE] Context.Input: Prompting for provider arguments
2020/07/30 11:05:50 [TRACE] Context.Input: Provider provider.bizfly declared at main.tf:1,1-18
2020/07/30 11:05:50 [TRACE] Context.Input: Input for provider.bizfly: map[string]cty.Value{}
2020/07/30 11:05:50 [TRACE] backend/local: running validation operation
2020/07/30 11:05:50 [INFO] terraform: building graph: GraphTypeValidate
2020/07/30 11:05:50 [TRACE] Executing graph transform *terraform.ConfigTransformer
2020/07/30 11:05:50 [TRACE] ConfigTransformer: Starting for path: 
2020/07/30 11:05:50 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
bizfly_instance.test - *terraform.NodeValidatableResource
------
2020/07/30 11:05:50 [TRACE] Executing graph transform *terraform.LocalTransformer
2020/07/30 11:05:50 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2020/07/30 11:05:50 [TRACE] Executing graph transform *terraform.OutputTransformer
2020/07/30 11:05:50 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2020/07/30 11:05:50 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2020/07/30 11:05:50 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2020/07/30 11:05:50 [TRACE] Executing graph transform *terraform.StateTransformer
2020/07/30 11:05:50 [TRACE] StateTransformer: state is empty, so nothing to do
2020/07/30 11:05:50 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2020/07/30 11:05:50 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2020/07/30 11:05:50 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2020/07/30 11:05:50 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2020/07/30 11:05:50 [TRACE] AttachResourceConfigTransformer: attaching to "bizfly_instance.test" (*terraform.NodeValidatableResource) config from main.tf:7,1-34
2020/07/30 11:05:50 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2020/07/30 11:05:50 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/30 11:05:50 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/30 11:05:50 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2020/07/30 11:05:50 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
bizfly_instance.test - *terraform.NodeValidatableResource
var.login - *terraform.NodeRootVariable
------
2020/07/30 11:05:50 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2020/07/30 11:05:50 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2020/07/30 11:05:50 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2020/07/30 11:05:50 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2020/07/30 11:05:50 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2020/07/30 11:05:50 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2020/07/30 11:05:50 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2020/07/30 11:05:50 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2020/07/30 11:05:50 [TRACE] ProviderConfigTransformer: attaching to "provider.bizfly" provider configuration from main.tf:1,1-18
2020/07/30 11:05:50 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
bizfly_instance.test - *terraform.NodeValidatableResource
provider.bizfly - *terraform.NodeApplyableProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 11:05:50 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2020/07/30 11:05:50 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2020/07/30 11:05:50 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2020/07/30 11:05:50 [TRACE] ProviderTransformer: bizfly_instance.test is provided by provider.bizfly or inherited equivalent
2020/07/30 11:05:50 [TRACE] ProviderTransformer: exact match for provider.bizfly serving bizfly_instance.test
2020/07/30 11:05:50 [DEBUG] ProviderTransformer: "bizfly_instance.test" (*terraform.NodeValidatableResource) needs provider.bizfly
2020/07/30 11:05:50 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
bizfly_instance.test - *terraform.NodeValidatableResource
  provider.bizfly - *terraform.NodeApplyableProvider
provider.bizfly - *terraform.NodeApplyableProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 11:05:50 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2020/07/30 11:05:50 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2020/07/30 11:05:50 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2020/07/30 11:05:50 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2020/07/30 11:05:50 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
bizfly_instance.test - *terraform.NodeValidatableResource
  provider.bizfly - *terraform.NodeApplyableProvider
provider.bizfly - *terraform.NodeApplyableProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 11:05:50 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2020/07/30 11:05:50 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2020/07/30 11:05:50 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2020/07/30 11:05:50 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.bizfly
2020/07/30 11:05:50 [TRACE] AttachSchemaTransformer: attaching resource schema to bizfly_instance.test
2020/07/30 11:05:50 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2020/07/30 11:05:50 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/30 11:05:50 [DEBUG] ReferenceTransformer: "bizfly_instance.test" references: []
2020/07/30 11:05:50 [DEBUG] ReferenceTransformer: "var.login" references: []
2020/07/30 11:05:50 [DEBUG] ReferenceTransformer: "provider.bizfly" references: []
2020/07/30 11:05:50 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/30 11:05:50 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2020/07/30 11:05:50 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
bizfly_instance.test - *terraform.NodeValidatableResource
  provider.bizfly - *terraform.NodeApplyableProvider
meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  bizfly_instance.test - *terraform.NodeValidatableResource
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
provider.bizfly - *terraform.NodeApplyableProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 11:05:50 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/30 11:05:50 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/30 11:05:50 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2020/07/30 11:05:50 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2020/07/30 11:05:50 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2020/07/30 11:05:50 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
bizfly_instance.test - *terraform.NodeValidatableResource
  provider.bizfly - *terraform.NodeApplyableProvider
meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  bizfly_instance.test - *terraform.NodeValidatableResource
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
provider.bizfly - *terraform.NodeApplyableProvider
provider.bizfly (close) - *terraform.graphNodeCloseProvider
  bizfly_instance.test - *terraform.NodeValidatableResource
  provider.bizfly - *terraform.NodeApplyableProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 11:05:50 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2020/07/30 11:05:50 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer (no changes)
2020/07/30 11:05:50 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/30 11:05:50 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
bizfly_instance.test - *terraform.NodeValidatableResource
  provider.bizfly - *terraform.NodeApplyableProvider
meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  bizfly_instance.test - *terraform.NodeValidatableResource
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
provider.bizfly - *terraform.NodeApplyableProvider
provider.bizfly (close) - *terraform.graphNodeCloseProvider
  bizfly_instance.test - *terraform.NodeValidatableResource
  provider.bizfly - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 11:05:50 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2020/07/30 11:05:50 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
bizfly_instance.test - *terraform.NodeValidatableResource
  provider.bizfly - *terraform.NodeApplyableProvider
meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  bizfly_instance.test - *terraform.NodeValidatableResource
  var.login - *terraform.NodeRootVariable
provider.bizfly - *terraform.NodeApplyableProvider
provider.bizfly (close) - *terraform.graphNodeCloseProvider
  bizfly_instance.test - *terraform.NodeValidatableResource
root - terraform.graphNodeRoot
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 11:05:50 [DEBUG] Starting graph walk: walkValidate
2020/07/30 11:05:50 [TRACE] dag/walk: updating graph
2020/07/30 11:05:50 [TRACE] dag/walk: added new vertex: "bizfly_instance.test"
2020/07/30 11:05:50 [TRACE] dag/walk: added new vertex: "var.login"
2020/07/30 11:05:50 [TRACE] dag/walk: added new vertex: "provider.bizfly"
2020/07/30 11:05:50 [TRACE] dag/walk: added new vertex: "meta.count-boundary (EachMode fixup)"
2020/07/30 11:05:50 [TRACE] dag/walk: added new vertex: "provider.bizfly (close)"
2020/07/30 11:05:50 [TRACE] dag/walk: added new vertex: "root"
2020/07/30 11:05:50 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (EachMode fixup)"
2020/07/30 11:05:50 [TRACE] dag/walk: added edge: "root" waiting on "provider.bizfly (close)"
2020/07/30 11:05:50 [TRACE] dag/walk: added edge: "bizfly_instance.test" waiting on "provider.bizfly"
2020/07/30 11:05:50 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "bizfly_instance.test"
2020/07/30 11:05:50 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "var.login"
2020/07/30 11:05:50 [TRACE] dag/walk: added edge: "provider.bizfly (close)" waiting on "bizfly_instance.test"
2020/07/30 11:05:50 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2020/07/30 11:05:50 [TRACE] dag/walk: dependencies changed for "bizfly_instance.test", sending new deps
2020/07/30 11:05:50 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (EachMode fixup)", sending new deps
2020/07/30 11:05:50 [TRACE] dag/walk: dependencies changed for "provider.bizfly (close)", sending new deps
2020/07/30 11:05:50 [TRACE] dag/walk: visiting "var.login"
2020/07/30 11:05:50 [TRACE] vertex "var.login": starting visit (*terraform.NodeRootVariable)
2020/07/30 11:05:50 [TRACE] vertex "var.login": visit complete
2020/07/30 11:05:50 [TRACE] dag/walk: visiting "provider.bizfly"
2020/07/30 11:05:50 [TRACE] vertex "provider.bizfly": starting visit (*terraform.NodeApplyableProvider)
2020/07/30 11:05:50 [TRACE] vertex "provider.bizfly": evaluating
2020/07/30 11:05:50 [TRACE] [walkValidate] Entering eval tree: provider.bizfly
2020/07/30 11:05:50 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:05:50 [TRACE] <root>: eval: *terraform.EvalInitProvider
2020-07-30T11:05:50.452+0700 [INFO]  plugin: configuring client automatic mTLS
2020-07-30T11:05:50.476+0700 [DEBUG] plugin: starting plugin: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly args=[/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly]
2020-07-30T11:05:50.479+0700 [DEBUG] plugin: plugin started: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=49028
2020-07-30T11:05:50.479+0700 [DEBUG] plugin: waiting for RPC address: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly
2020-07-30T11:05:50.497+0700 [INFO]  plugin.terraform-provider-bizfly: configuring server automatic mTLS: timestamp=2020-07-30T11:05:50.496+0700
2020-07-30T11:05:50.524+0700 [DEBUG] plugin: using plugin: version=5
2020-07-30T11:05:50.524+0700 [DEBUG] plugin.terraform-provider-bizfly: plugin address: network=unix address=/var/folders/0r/zdwrk7wn22vd_g32twvblrpc0000gn/T/plugin605399947 timestamp=2020-07-30T11:05:50.524+0700
2020/07/30 11:05:50 [TRACE] BuiltinEvalContext: Initialized "bizfly" provider for provider.bizfly
2020/07/30 11:05:50 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:05:50 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/07/30 11:05:50 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:05:50 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 11:05:50 [TRACE] <root>: eval: *terraform.EvalValidateProvider
2020/07/30 11:05:50 [TRACE] buildProviderConfig for provider.bizfly: using explicit config only
2020/07/30 11:05:50 [TRACE] GRPCProvider: GetSchema
2020/07/30 11:05:50 [TRACE] GRPCProvider: PrepareProviderConfig
2020/07/30 11:05:50 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:05:50 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:05:50 [TRACE] [walkValidate] Exiting eval tree: provider.bizfly
2020/07/30 11:05:50 [TRACE] vertex "provider.bizfly": visit complete
2020/07/30 11:05:50 [TRACE] dag/walk: visiting "bizfly_instance.test"
2020/07/30 11:05:50 [TRACE] vertex "bizfly_instance.test": starting visit (*terraform.NodeValidatableResource)
2020/07/30 11:05:50 [TRACE] vertex "bizfly_instance.test": evaluating
2020/07/30 11:05:50 [TRACE] [walkValidate] Entering eval tree: bizfly_instance.test
2020/07/30 11:05:50 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:05:50 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 11:05:50 [TRACE] <root>: eval: *terraform.EvalValidateResource
2020/07/30 11:05:50 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/07/30 11:05:50 [TRACE] [walkValidate] Exiting eval tree: bizfly_instance.test
2020/07/30 11:05:50 [TRACE] vertex "bizfly_instance.test": visit complete
2020/07/30 11:05:50 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2020/07/30 11:05:50 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2020/07/30 11:05:50 [TRACE] vertex "meta.count-boundary (EachMode fixup)": evaluating
2020/07/30 11:05:50 [TRACE] [walkValidate] Entering eval tree: meta.count-boundary (EachMode fixup)
2020/07/30 11:05:50 [TRACE] <root>: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2020/07/30 11:05:50 [TRACE] dag/walk: visiting "provider.bizfly (close)"
2020/07/30 11:05:50 [TRACE] [walkValidate] Exiting eval tree: meta.count-boundary (EachMode fixup)
2020/07/30 11:05:50 [TRACE] vertex "provider.bizfly (close)": starting visit (*terraform.graphNodeCloseProvider)
2020/07/30 11:05:50 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2020/07/30 11:05:50 [TRACE] vertex "provider.bizfly (close)": evaluating
2020/07/30 11:05:50 [TRACE] [walkValidate] Entering eval tree: provider.bizfly (close)
2020/07/30 11:05:50 [TRACE] <root>: eval: *terraform.EvalCloseProvider
2020/07/30 11:05:50 [TRACE] GRPCProvider: Close
2020-07-30T11:05:50.583+0700 [DEBUG] plugin: plugin process exited: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=49028
2020-07-30T11:05:50.583+0700 [DEBUG] plugin: plugin exited
2020/07/30 11:05:50 [TRACE] [walkValidate] Exiting eval tree: provider.bizfly (close)
2020/07/30 11:05:50 [TRACE] vertex "provider.bizfly (close)": visit complete
2020/07/30 11:05:50 [TRACE] dag/walk: visiting "root"
2020/07/30 11:05:50 [TRACE] vertex "root": starting visit (terraform.graphNodeRoot)
2020/07/30 11:05:50 [TRACE] vertex "root": visit complete
2020/07/30 11:05:50 [INFO] backend/local: plan calling Refresh
2020/07/30 11:05:50 [INFO] terraform: building graph: GraphTypeRefresh
2020/07/30 11:05:50 [TRACE] No managed resources in state during refresh; skipping managed resource transformer
2020/07/30 11:05:50 [TRACE] Executing graph transform *terraform.ConfigTransformer
2020/07/30 11:05:50 [TRACE] ConfigTransformer: Starting for path: 
2020/07/30 11:05:50 [TRACE] Completed graph transform *terraform.ConfigTransformer (no changes)
2020/07/30 11:05:50 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2020/07/30 11:05:50 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2020/07/30 11:05:50 [TRACE] Executing graph transform *terraform.StateTransformer
2020/07/30 11:05:50 [TRACE] StateTransformer: state is empty, so nothing to do
2020/07/30 11:05:50 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2020/07/30 11:05:50 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/30 11:05:50 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/30 11:05:50 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2020/07/30 11:05:50 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2020/07/30 11:05:50 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2020/07/30 11:05:50 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
var.login - *terraform.NodeRootVariable
------
2020/07/30 11:05:50 [TRACE] Executing graph transform *terraform.LocalTransformer
2020/07/30 11:05:50 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2020/07/30 11:05:50 [TRACE] Executing graph transform *terraform.OutputTransformer
2020/07/30 11:05:50 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2020/07/30 11:05:50 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2020/07/30 11:05:50 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2020/07/30 11:05:50 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2020/07/30 11:05:50 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2020/07/30 11:05:50 [TRACE] ProviderConfigTransformer: attaching to "provider.bizfly" provider configuration from main.tf:1,1-18
2020/07/30 11:05:50 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
provider.bizfly - *terraform.NodeApplyableProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 11:05:50 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2020/07/30 11:05:50 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2020/07/30 11:05:50 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2020/07/30 11:05:50 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer (no changes)
2020/07/30 11:05:50 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2020/07/30 11:05:50 [DEBUG] pruning unused provider.bizfly
2020/07/30 11:05:50 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer with new graph:
var.login - *terraform.NodeRootVariable
------
2020/07/30 11:05:50 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2020/07/30 11:05:50 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2020/07/30 11:05:50 [TRACE] Completed graph transform *terraform.graphTransformerMulti (no changes)
2020/07/30 11:05:50 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2020/07/30 11:05:50 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2020/07/30 11:05:50 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/30 11:05:50 [DEBUG] ReferenceTransformer: "var.login" references: []
2020/07/30 11:05:50 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/30 11:05:50 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/30 11:05:50 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/30 11:05:50 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2020/07/30 11:05:50 [TRACE] Completed graph transform *terraform.CloseProviderTransformer (no changes)
2020/07/30 11:05:50 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/30 11:05:50 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/07/30 11:05:50 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2020/07/30 11:05:50 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer (no changes)
2020/07/30 11:05:50 [DEBUG] Starting graph walk: walkRefresh
2020/07/30 11:05:50 [TRACE] dag/walk: updating graph
2020/07/30 11:05:50 [TRACE] dag/walk: added new vertex: "var.login"
2020/07/30 11:05:50 [TRACE] dag/walk: visiting "var.login"
2020/07/30 11:05:50 [TRACE] vertex "var.login": starting visit (*terraform.NodeRootVariable)
2020/07/30 11:05:50 [TRACE] vertex "var.login": visit complete
2020/07/30 11:05:50 [INFO] backend/local: plan calling Plan
2020/07/30 11:05:50 [INFO] terraform: building graph: GraphTypePlan
2020/07/30 11:05:50 [TRACE] Executing graph transform *terraform.ConfigTransformer
2020/07/30 11:05:50 [TRACE] ConfigTransformer: Starting for path: 
2020/07/30 11:05:50 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
bizfly_instance.test - *terraform.NodePlannableResource
------
2020/07/30 11:05:50 [TRACE] Executing graph transform *terraform.LocalTransformer
2020/07/30 11:05:50 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2020/07/30 11:05:50 [TRACE] Executing graph transform *terraform.OutputTransformer
2020/07/30 11:05:50 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2020/07/30 11:05:50 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2020/07/30 11:05:50 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2020/07/30 11:05:50 [TRACE] Executing graph transform *terraform.StateTransformer
2020/07/30 11:05:50 [TRACE] StateTransformer: state is empty, so nothing to do
2020/07/30 11:05:50 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2020/07/30 11:05:50 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2020/07/30 11:05:50 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2020/07/30 11:05:50 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2020/07/30 11:05:50 [TRACE] AttachResourceConfigTransformer: attaching to "bizfly_instance.test" (*terraform.NodePlannableResource) config from main.tf:7,1-34
2020/07/30 11:05:50 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2020/07/30 11:05:50 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/30 11:05:50 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/30 11:05:50 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2020/07/30 11:05:50 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
bizfly_instance.test - *terraform.NodePlannableResource
var.login - *terraform.NodeRootVariable
------
2020/07/30 11:05:50 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2020/07/30 11:05:50 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2020/07/30 11:05:50 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2020/07/30 11:05:50 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2020/07/30 11:05:50 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2020/07/30 11:05:50 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2020/07/30 11:05:50 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2020/07/30 11:05:50 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2020/07/30 11:05:50 [TRACE] ProviderConfigTransformer: attaching to "provider.bizfly" provider configuration from main.tf:1,1-18
2020/07/30 11:05:50 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
bizfly_instance.test - *terraform.NodePlannableResource
provider.bizfly - *terraform.NodeApplyableProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 11:05:50 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2020/07/30 11:05:50 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2020/07/30 11:05:50 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2020/07/30 11:05:50 [TRACE] ProviderTransformer: bizfly_instance.test is provided by provider.bizfly or inherited equivalent
2020/07/30 11:05:50 [TRACE] ProviderTransformer: exact match for provider.bizfly serving bizfly_instance.test
2020/07/30 11:05:50 [DEBUG] ProviderTransformer: "bizfly_instance.test" (*terraform.NodePlannableResource) needs provider.bizfly
2020/07/30 11:05:50 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
bizfly_instance.test - *terraform.NodePlannableResource
  provider.bizfly - *terraform.NodeApplyableProvider
provider.bizfly - *terraform.NodeApplyableProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 11:05:50 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2020/07/30 11:05:50 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2020/07/30 11:05:50 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2020/07/30 11:05:50 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2020/07/30 11:05:50 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
bizfly_instance.test - *terraform.NodePlannableResource
  provider.bizfly - *terraform.NodeApplyableProvider
provider.bizfly - *terraform.NodeApplyableProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 11:05:50 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2020/07/30 11:05:50 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2020/07/30 11:05:50 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2020/07/30 11:05:50 [TRACE] AttachSchemaTransformer: attaching resource schema to bizfly_instance.test
2020/07/30 11:05:50 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.bizfly
2020/07/30 11:05:50 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2020/07/30 11:05:50 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/30 11:05:50 [DEBUG] ReferenceTransformer: "bizfly_instance.test" references: []
2020/07/30 11:05:50 [DEBUG] ReferenceTransformer: "var.login" references: []
2020/07/30 11:05:50 [DEBUG] ReferenceTransformer: "provider.bizfly" references: []
2020/07/30 11:05:50 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/30 11:05:50 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2020/07/30 11:05:50 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
bizfly_instance.test - *terraform.NodePlannableResource
  provider.bizfly - *terraform.NodeApplyableProvider
meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  bizfly_instance.test - *terraform.NodePlannableResource
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
provider.bizfly - *terraform.NodeApplyableProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 11:05:50 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/30 11:05:50 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/30 11:05:50 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2020/07/30 11:05:50 [TRACE] ForcedCBDTransformer: "bizfly_instance.test" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2020/07/30 11:05:50 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2020/07/30 11:05:50 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2020/07/30 11:05:50 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
bizfly_instance.test - *terraform.NodePlannableResource
  provider.bizfly - *terraform.NodeApplyableProvider
meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  bizfly_instance.test - *terraform.NodePlannableResource
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
provider.bizfly - *terraform.NodeApplyableProvider
provider.bizfly (close) - *terraform.graphNodeCloseProvider
  bizfly_instance.test - *terraform.NodePlannableResource
  provider.bizfly - *terraform.NodeApplyableProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 11:05:50 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2020/07/30 11:05:50 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer (no changes)
2020/07/30 11:05:50 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/30 11:05:50 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
bizfly_instance.test - *terraform.NodePlannableResource
  provider.bizfly - *terraform.NodeApplyableProvider
meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  bizfly_instance.test - *terraform.NodePlannableResource
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
provider.bizfly - *terraform.NodeApplyableProvider
provider.bizfly (close) - *terraform.graphNodeCloseProvider
  bizfly_instance.test - *terraform.NodePlannableResource
  provider.bizfly - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 11:05:50 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2020/07/30 11:05:50 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
bizfly_instance.test - *terraform.NodePlannableResource
  provider.bizfly - *terraform.NodeApplyableProvider
meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  bizfly_instance.test - *terraform.NodePlannableResource
  var.login - *terraform.NodeRootVariable
provider.bizfly - *terraform.NodeApplyableProvider
provider.bizfly (close) - *terraform.graphNodeCloseProvider
  bizfly_instance.test - *terraform.NodePlannableResource
root - terraform.graphNodeRoot
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 11:05:50 [DEBUG] Starting graph walk: walkPlan
2020/07/30 11:05:50 [TRACE] dag/walk: updating graph
2020/07/30 11:05:50 [TRACE] dag/walk: added new vertex: "provider.bizfly (close)"
2020/07/30 11:05:50 [TRACE] dag/walk: added new vertex: "root"
2020/07/30 11:05:50 [TRACE] dag/walk: added new vertex: "bizfly_instance.test"
2020/07/30 11:05:50 [TRACE] dag/walk: added new vertex: "var.login"
2020/07/30 11:05:50 [TRACE] dag/walk: added new vertex: "provider.bizfly"
2020/07/30 11:05:50 [TRACE] dag/walk: added new vertex: "meta.count-boundary (EachMode fixup)"
2020/07/30 11:05:50 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "bizfly_instance.test"
2020/07/30 11:05:50 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "var.login"
2020/07/30 11:05:50 [TRACE] dag/walk: added edge: "provider.bizfly (close)" waiting on "bizfly_instance.test"
2020/07/30 11:05:50 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (EachMode fixup)"
2020/07/30 11:05:50 [TRACE] dag/walk: added edge: "root" waiting on "provider.bizfly (close)"
2020/07/30 11:05:50 [TRACE] dag/walk: added edge: "bizfly_instance.test" waiting on "provider.bizfly"
2020/07/30 11:05:50 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (EachMode fixup)", sending new deps
2020/07/30 11:05:50 [TRACE] dag/walk: dependencies changed for "provider.bizfly (close)", sending new deps
2020/07/30 11:05:50 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2020/07/30 11:05:50 [TRACE] dag/walk: dependencies changed for "bizfly_instance.test", sending new deps
2020/07/30 11:05:50 [TRACE] dag/walk: visiting "var.login"
2020/07/30 11:05:50 [TRACE] vertex "var.login": starting visit (*terraform.NodeRootVariable)
2020/07/30 11:05:50 [TRACE] vertex "var.login": visit complete
2020/07/30 11:05:50 [TRACE] dag/walk: visiting "provider.bizfly"
2020/07/30 11:05:50 [TRACE] vertex "provider.bizfly": starting visit (*terraform.NodeApplyableProvider)
2020/07/30 11:05:50 [TRACE] vertex "provider.bizfly": evaluating
2020/07/30 11:05:50 [TRACE] [walkPlan] Entering eval tree: provider.bizfly
2020/07/30 11:05:50 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:05:50 [TRACE] <root>: eval: *terraform.EvalInitProvider
2020-07-30T11:05:50.585+0700 [INFO]  plugin: configuring client automatic mTLS
2020-07-30T11:05:50.611+0700 [DEBUG] plugin: starting plugin: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly args=[/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly]
2020-07-30T11:05:50.617+0700 [DEBUG] plugin: plugin started: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=49029
2020-07-30T11:05:50.617+0700 [DEBUG] plugin: waiting for RPC address: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly
2020-07-30T11:05:50.639+0700 [INFO]  plugin.terraform-provider-bizfly: configuring server automatic mTLS: timestamp=2020-07-30T11:05:50.639+0700
2020-07-30T11:05:50.666+0700 [DEBUG] plugin.terraform-provider-bizfly: plugin address: network=unix address=/var/folders/0r/zdwrk7wn22vd_g32twvblrpc0000gn/T/plugin318558800 timestamp=2020-07-30T11:05:50.666+0700
2020-07-30T11:05:50.666+0700 [DEBUG] plugin: using plugin: version=5
2020/07/30 11:05:50 [TRACE] BuiltinEvalContext: Initialized "bizfly" provider for provider.bizfly
2020/07/30 11:05:50 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:05:50 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:05:50 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/07/30 11:05:50 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:05:50 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 11:05:50 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/07/30 11:05:50 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:05:50 [TRACE] <root>: eval: *terraform.EvalConfigProvider
2020/07/30 11:05:50 [TRACE] buildProviderConfig for provider.bizfly: using explicit config only
2020/07/30 11:05:50 [TRACE] GRPCProvider: GetSchema
2020/07/30 11:05:50 [TRACE] GRPCProvider: Configure
2020/07/30 11:05:52 [TRACE] [walkPlan] Exiting eval tree: provider.bizfly
2020/07/30 11:05:52 [TRACE] vertex "provider.bizfly": visit complete
2020/07/30 11:05:52 [TRACE] dag/walk: visiting "bizfly_instance.test"
2020/07/30 11:05:52 [TRACE] vertex "bizfly_instance.test": starting visit (*terraform.NodePlannableResource)
2020/07/30 11:05:52 [TRACE] vertex "bizfly_instance.test": evaluating
2020/07/30 11:05:52 [TRACE] [walkPlan] Entering eval tree: bizfly_instance.test
2020/07/30 11:05:52 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/07/30 11:05:52 [TRACE] [walkPlan] Exiting eval tree: bizfly_instance.test
2020/07/30 11:05:52 [TRACE] vertex "bizfly_instance.test": expanding dynamic subgraph
2020/07/30 11:05:52 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/07/30 11:05:52 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
bizfly_instance.test - *terraform.NodePlannableResourceInstance
------
2020/07/30 11:05:52 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/07/30 11:05:52 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/07/30 11:05:52 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/30 11:05:52 [DEBUG] Resource instance state not found for node "bizfly_instance.test", instance bizfly_instance.test
2020/07/30 11:05:52 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/30 11:05:52 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/30 11:05:52 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/30 11:05:52 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/30 11:05:52 [DEBUG] ReferenceTransformer: "bizfly_instance.test" references: []
2020/07/30 11:05:52 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/30 11:05:52 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/30 11:05:52 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/07/30 11:05:52 [TRACE] vertex "bizfly_instance.test": entering dynamic subgraph
2020/07/30 11:05:52 [TRACE] dag/walk: updating graph
2020/07/30 11:05:52 [TRACE] dag/walk: added new vertex: "bizfly_instance.test"
2020/07/30 11:05:52 [TRACE] dag/walk: visiting "bizfly_instance.test"
2020/07/30 11:05:52 [TRACE] vertex "bizfly_instance.test": starting visit (*terraform.NodePlannableResourceInstance)
2020/07/30 11:05:52 [TRACE] vertex "bizfly_instance.test": evaluating
2020/07/30 11:05:52 [TRACE] [walkPlan] Entering eval tree: bizfly_instance.test
2020/07/30 11:05:52 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:05:52 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 11:05:52 [TRACE] <root>: eval: *terraform.EvalReadState
2020/07/30 11:05:52 [TRACE] EvalReadState: reading state for bizfly_instance.test
2020/07/30 11:05:52 [TRACE] EvalReadState: no state present for bizfly_instance.test
2020/07/30 11:05:52 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2020/07/30 11:05:52 [TRACE] <root>: eval: *terraform.EvalDiff
2020/07/30 11:05:52 [TRACE] Re-validating config for "bizfly_instance.test"
2020/07/30 11:05:52 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/07/30 11:05:52 [TRACE] GRPCProvider: PlanResourceChange
2020/07/30 11:05:52 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2020/07/30 11:05:52 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/07/30 11:05:52 [TRACE] EvalWriteState: writing current state object for bizfly_instance.test
2020/07/30 11:05:52 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/07/30 11:05:52 [TRACE] EvalWriteDiff: recorded Create change for bizfly_instance.test
2020/07/30 11:05:52 [TRACE] [walkPlan] Exiting eval tree: bizfly_instance.test
2020/07/30 11:05:52 [TRACE] vertex "bizfly_instance.test": visit complete
2020/07/30 11:05:52 [TRACE] vertex "bizfly_instance.test": dynamic subgraph completed successfully
2020/07/30 11:05:52 [TRACE] vertex "bizfly_instance.test": visit complete
2020/07/30 11:05:52 [TRACE] dag/walk: visiting "provider.bizfly (close)"
2020/07/30 11:05:52 [TRACE] vertex "provider.bizfly (close)": starting visit (*terraform.graphNodeCloseProvider)
2020/07/30 11:05:52 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2020/07/30 11:05:52 [TRACE] vertex "provider.bizfly (close)": evaluating
2020/07/30 11:05:52 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2020/07/30 11:05:52 [TRACE] vertex "meta.count-boundary (EachMode fixup)": evaluating
2020/07/30 11:05:52 [TRACE] [walkPlan] Entering eval tree: provider.bizfly (close)
2020/07/30 11:05:52 [TRACE] <root>: eval: *terraform.EvalCloseProvider
2020/07/30 11:05:52 [TRACE] [walkPlan] Entering eval tree: meta.count-boundary (EachMode fixup)
2020/07/30 11:05:52 [TRACE] <root>: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2020/07/30 11:05:52 [TRACE] GRPCProvider: Close
2020/07/30 11:05:52 [TRACE] [walkPlan] Exiting eval tree: meta.count-boundary (EachMode fixup)
2020/07/30 11:05:52 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2020-07-30T11:05:52.028+0700 [DEBUG] plugin: plugin process exited: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=49029
2020-07-30T11:05:52.028+0700 [DEBUG] plugin: plugin exited
2020/07/30 11:05:52 [TRACE] [walkPlan] Exiting eval tree: provider.bizfly (close)
2020/07/30 11:05:52 [TRACE] vertex "provider.bizfly (close)": visit complete
2020/07/30 11:05:52 [TRACE] dag/walk: visiting "root"
2020/07/30 11:05:52 [TRACE] vertex "root": starting visit (terraform.graphNodeRoot)
2020/07/30 11:05:52 [TRACE] vertex "root": visit complete
2020/07/30 11:05:52 [INFO] backend/local: plan operation completed
2020/07/30 11:05:52 [TRACE] statemgr.Filesystem: removing lock metadata file .terraform.tfstate.lock.info
2020/07/30 11:05:52 [TRACE] statemgr.Filesystem: unlocking terraform.tfstate using fcntl flock
2020/07/30 11:05:55 [INFO] Terraform version: 0.12.9  
2020/07/30 11:05:55 [INFO] Go runtime version: go1.13
2020/07/30 11:05:55 [INFO] CLI args: []string{"/usr/local/bin/terraform", "apply"}
2020/07/30 11:05:55 [DEBUG] Attempting to open CLI config file: /Users/hung/.terraformrc
2020/07/30 11:05:55 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2020/07/30 11:05:55 [INFO] CLI command args: []string{"apply"}
2020/07/30 11:05:55 [TRACE] Meta.Backend: no config given or present on disk, so returning nil config
2020/07/30 11:05:55 [TRACE] Meta.Backend: backend has not previously been initialized in this working directory
2020/07/30 11:05:55 [DEBUG] New state was assigned lineage "faf9c9c3-6c5c-0ab0-09e7-43f889ada606"
2020/07/30 11:05:55 [TRACE] Meta.Backend: using default local state only (no backend configuration, and no existing initialized backend)
2020/07/30 11:05:55 [TRACE] Meta.Backend: instantiated backend of type <nil>
2020/07/30 11:05:55 [DEBUG] checking for provider in "."
2020/07/30 11:05:55 [WARN] found legacy provider "terraform-provider-bizfly"
2020/07/30 11:05:55 [DEBUG] checking for provider in "/usr/local/bin"
2020/07/30 11:05:55 [DEBUG] checking for provider in ".terraform/plugins/darwin_amd64"
2020/07/30 11:05:55 [DEBUG] found valid plugin: "bizfly", "0.0.0", "/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly"
2020/07/30 11:05:55 [DEBUG] checking for provisioner in "."
2020/07/30 11:05:55 [DEBUG] checking for provisioner in "/usr/local/bin"
2020/07/30 11:05:55 [DEBUG] checking for provisioner in ".terraform/plugins/darwin_amd64"
2020/07/30 11:05:55 [TRACE] Meta.Backend: backend <nil> does not support operations, so wrapping it in a local backend
2020/07/30 11:05:55 [INFO] backend/local: starting Apply operation
2020/07/30 11:05:55 [TRACE] backend/local: requesting state manager for workspace "default"
2020/07/30 11:05:55 [TRACE] backend/local: state manager for workspace "default" will:
 - read initial snapshot from terraform.tfstate
 - write new snapshots to terraform.tfstate
 - create any backup at terraform.tfstate.backup
2020/07/30 11:05:55 [TRACE] backend/local: requesting state lock for workspace "default"
2020/07/30 11:05:55 [TRACE] statemgr.Filesystem: preparing to manage state snapshots at terraform.tfstate
2020/07/30 11:05:55 [TRACE] statemgr.Filesystem: existing snapshot has lineage "8e1934d5-1d8f-e9a8-58e8-6c54c3aa209a" serial 1
2020/07/30 11:05:55 [TRACE] statemgr.Filesystem: locking terraform.tfstate using fcntl flock
2020/07/30 11:05:55 [TRACE] statemgr.Filesystem: writing lock metadata to .terraform.tfstate.lock.info
2020/07/30 11:05:55 [TRACE] backend/local: reading remote state for workspace "default"
2020/07/30 11:05:55 [TRACE] statemgr.Filesystem: reading latest snapshot from terraform.tfstate
2020/07/30 11:05:55 [TRACE] statemgr.Filesystem: read snapshot with lineage "8e1934d5-1d8f-e9a8-58e8-6c54c3aa209a" serial 1
2020/07/30 11:05:55 [TRACE] backend/local: retrieving local state snapshot for workspace "default"
2020/07/30 11:05:55 [TRACE] backend/local: building context for current working directory
2020/07/30 11:05:55 [TRACE] terraform.NewContext: starting
2020/07/30 11:05:55 [TRACE] terraform.NewContext: resolving provider version selections
2020/07/30 11:05:55 [TRACE] terraform.NewContext: loading provider schemas
2020/07/30 11:05:55 [TRACE] LoadSchemas: retrieving schema for provider type "bizfly"
2020-07-30T11:05:55.941+0700 [INFO]  plugin: configuring client automatic mTLS
2020-07-30T11:05:55.968+0700 [DEBUG] plugin: starting plugin: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly args=[/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly]
2020-07-30T11:05:55.972+0700 [DEBUG] plugin: plugin started: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=49048
2020-07-30T11:05:55.972+0700 [DEBUG] plugin: waiting for RPC address: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly
2020-07-30T11:05:55.992+0700 [INFO]  plugin.terraform-provider-bizfly: configuring server automatic mTLS: timestamp=2020-07-30T11:05:55.992+0700
2020-07-30T11:05:56.020+0700 [DEBUG] plugin: using plugin: version=5
2020-07-30T11:05:56.020+0700 [DEBUG] plugin.terraform-provider-bizfly: plugin address: network=unix address=/var/folders/0r/zdwrk7wn22vd_g32twvblrpc0000gn/T/plugin038592975 timestamp=2020-07-30T11:05:56.019+0700
2020/07/30 11:05:56 [TRACE] GRPCProvider: GetSchema
2020/07/30 11:05:56 [TRACE] GRPCProvider: Close
2020-07-30T11:05:56.078+0700 [DEBUG] plugin: plugin process exited: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=49048
2020-07-30T11:05:56.078+0700 [DEBUG] plugin: plugin exited
2020/07/30 11:05:56 [TRACE] terraform.NewContext: complete
2020/07/30 11:05:56 [TRACE] backend/local: finished building terraform.Context
2020/07/30 11:05:56 [TRACE] backend/local: requesting interactive input, if necessary
2020/07/30 11:05:56 [TRACE] Context.Input: Prompting for variables
2020/07/30 11:05:56 [TRACE] Context.Input: Prompting for provider arguments
2020/07/30 11:05:56 [TRACE] Context.Input: Provider provider.bizfly declared at main.tf:1,1-18
2020/07/30 11:05:56 [TRACE] Context.Input: Input for provider.bizfly: map[string]cty.Value{}
2020/07/30 11:05:56 [TRACE] backend/local: running validation operation
2020/07/30 11:05:56 [INFO] terraform: building graph: GraphTypeValidate
2020/07/30 11:05:56 [TRACE] Executing graph transform *terraform.ConfigTransformer
2020/07/30 11:05:56 [TRACE] ConfigTransformer: Starting for path: 
2020/07/30 11:05:56 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
bizfly_instance.test - *terraform.NodeValidatableResource
------
2020/07/30 11:05:56 [TRACE] Executing graph transform *terraform.LocalTransformer
2020/07/30 11:05:56 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2020/07/30 11:05:56 [TRACE] Executing graph transform *terraform.OutputTransformer
2020/07/30 11:05:56 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2020/07/30 11:05:56 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2020/07/30 11:05:56 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2020/07/30 11:05:56 [TRACE] Executing graph transform *terraform.StateTransformer
2020/07/30 11:05:56 [TRACE] StateTransformer: state is empty, so nothing to do
2020/07/30 11:05:56 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2020/07/30 11:05:56 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2020/07/30 11:05:56 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2020/07/30 11:05:56 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2020/07/30 11:05:56 [TRACE] AttachResourceConfigTransformer: attaching to "bizfly_instance.test" (*terraform.NodeValidatableResource) config from main.tf:7,1-34
2020/07/30 11:05:56 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2020/07/30 11:05:56 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/30 11:05:56 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/30 11:05:56 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2020/07/30 11:05:56 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
bizfly_instance.test - *terraform.NodeValidatableResource
var.login - *terraform.NodeRootVariable
------
2020/07/30 11:05:56 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2020/07/30 11:05:56 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2020/07/30 11:05:56 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2020/07/30 11:05:56 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2020/07/30 11:05:56 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2020/07/30 11:05:56 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2020/07/30 11:05:56 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2020/07/30 11:05:56 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2020/07/30 11:05:56 [TRACE] ProviderConfigTransformer: attaching to "provider.bizfly" provider configuration from main.tf:1,1-18
2020/07/30 11:05:56 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
bizfly_instance.test - *terraform.NodeValidatableResource
provider.bizfly - *terraform.NodeApplyableProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 11:05:56 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2020/07/30 11:05:56 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2020/07/30 11:05:56 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2020/07/30 11:05:56 [TRACE] ProviderTransformer: bizfly_instance.test is provided by provider.bizfly or inherited equivalent
2020/07/30 11:05:56 [TRACE] ProviderTransformer: exact match for provider.bizfly serving bizfly_instance.test
2020/07/30 11:05:56 [DEBUG] ProviderTransformer: "bizfly_instance.test" (*terraform.NodeValidatableResource) needs provider.bizfly
2020/07/30 11:05:56 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
bizfly_instance.test - *terraform.NodeValidatableResource
  provider.bizfly - *terraform.NodeApplyableProvider
provider.bizfly - *terraform.NodeApplyableProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 11:05:56 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2020/07/30 11:05:56 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2020/07/30 11:05:56 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2020/07/30 11:05:56 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2020/07/30 11:05:56 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
bizfly_instance.test - *terraform.NodeValidatableResource
  provider.bizfly - *terraform.NodeApplyableProvider
provider.bizfly - *terraform.NodeApplyableProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 11:05:56 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2020/07/30 11:05:56 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2020/07/30 11:05:56 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2020/07/30 11:05:56 [TRACE] AttachSchemaTransformer: attaching resource schema to bizfly_instance.test
2020/07/30 11:05:56 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.bizfly
2020/07/30 11:05:56 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2020/07/30 11:05:56 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/30 11:05:56 [DEBUG] ReferenceTransformer: "bizfly_instance.test" references: []
2020/07/30 11:05:56 [DEBUG] ReferenceTransformer: "var.login" references: []
2020/07/30 11:05:56 [DEBUG] ReferenceTransformer: "provider.bizfly" references: []
2020/07/30 11:05:56 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/30 11:05:56 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2020/07/30 11:05:56 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
bizfly_instance.test - *terraform.NodeValidatableResource
  provider.bizfly - *terraform.NodeApplyableProvider
meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  bizfly_instance.test - *terraform.NodeValidatableResource
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
provider.bizfly - *terraform.NodeApplyableProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 11:05:56 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/30 11:05:56 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/30 11:05:56 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2020/07/30 11:05:56 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2020/07/30 11:05:56 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2020/07/30 11:05:56 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
bizfly_instance.test - *terraform.NodeValidatableResource
  provider.bizfly - *terraform.NodeApplyableProvider
meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  bizfly_instance.test - *terraform.NodeValidatableResource
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
provider.bizfly - *terraform.NodeApplyableProvider
provider.bizfly (close) - *terraform.graphNodeCloseProvider
  bizfly_instance.test - *terraform.NodeValidatableResource
  provider.bizfly - *terraform.NodeApplyableProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 11:05:56 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2020/07/30 11:05:56 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer (no changes)
2020/07/30 11:05:56 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/30 11:05:56 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
bizfly_instance.test - *terraform.NodeValidatableResource
  provider.bizfly - *terraform.NodeApplyableProvider
meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  bizfly_instance.test - *terraform.NodeValidatableResource
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
provider.bizfly - *terraform.NodeApplyableProvider
provider.bizfly (close) - *terraform.graphNodeCloseProvider
  bizfly_instance.test - *terraform.NodeValidatableResource
  provider.bizfly - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 11:05:56 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2020/07/30 11:05:56 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
bizfly_instance.test - *terraform.NodeValidatableResource
  provider.bizfly - *terraform.NodeApplyableProvider
meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  bizfly_instance.test - *terraform.NodeValidatableResource
  var.login - *terraform.NodeRootVariable
provider.bizfly - *terraform.NodeApplyableProvider
provider.bizfly (close) - *terraform.graphNodeCloseProvider
  bizfly_instance.test - *terraform.NodeValidatableResource
root - terraform.graphNodeRoot
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 11:05:56 [DEBUG] Starting graph walk: walkValidate
2020/07/30 11:05:56 [TRACE] dag/walk: updating graph
2020/07/30 11:05:56 [TRACE] dag/walk: added new vertex: "bizfly_instance.test"
2020/07/30 11:05:56 [TRACE] dag/walk: added new vertex: "var.login"
2020/07/30 11:05:56 [TRACE] dag/walk: added new vertex: "provider.bizfly"
2020/07/30 11:05:56 [TRACE] dag/walk: added new vertex: "meta.count-boundary (EachMode fixup)"
2020/07/30 11:05:56 [TRACE] dag/walk: added new vertex: "provider.bizfly (close)"
2020/07/30 11:05:56 [TRACE] dag/walk: added new vertex: "root"
2020/07/30 11:05:56 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (EachMode fixup)"
2020/07/30 11:05:56 [TRACE] dag/walk: added edge: "root" waiting on "provider.bizfly (close)"
2020/07/30 11:05:56 [TRACE] dag/walk: added edge: "bizfly_instance.test" waiting on "provider.bizfly"
2020/07/30 11:05:56 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "var.login"
2020/07/30 11:05:56 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "bizfly_instance.test"
2020/07/30 11:05:56 [TRACE] dag/walk: added edge: "provider.bizfly (close)" waiting on "bizfly_instance.test"
2020/07/30 11:05:56 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2020/07/30 11:05:56 [TRACE] dag/walk: dependencies changed for "bizfly_instance.test", sending new deps
2020/07/30 11:05:56 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (EachMode fixup)", sending new deps
2020/07/30 11:05:56 [TRACE] dag/walk: dependencies changed for "provider.bizfly (close)", sending new deps
2020/07/30 11:05:56 [TRACE] dag/walk: visiting "provider.bizfly"
2020/07/30 11:05:56 [TRACE] dag/walk: visiting "var.login"
2020/07/30 11:05:56 [TRACE] vertex "var.login": starting visit (*terraform.NodeRootVariable)
2020/07/30 11:05:56 [TRACE] vertex "provider.bizfly": starting visit (*terraform.NodeApplyableProvider)
2020/07/30 11:05:56 [TRACE] vertex "provider.bizfly": evaluating
2020/07/30 11:05:56 [TRACE] [walkValidate] Entering eval tree: provider.bizfly
2020/07/30 11:05:56 [TRACE] vertex "var.login": visit complete
2020/07/30 11:05:56 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:05:56 [TRACE] <root>: eval: *terraform.EvalInitProvider
2020-07-30T11:05:56.080+0700 [INFO]  plugin: configuring client automatic mTLS
2020-07-30T11:05:56.105+0700 [DEBUG] plugin: starting plugin: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly args=[/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly]
2020-07-30T11:05:56.109+0700 [DEBUG] plugin: plugin started: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=49049
2020-07-30T11:05:56.109+0700 [DEBUG] plugin: waiting for RPC address: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly
2020-07-30T11:05:56.126+0700 [INFO]  plugin.terraform-provider-bizfly: configuring server automatic mTLS: timestamp=2020-07-30T11:05:56.126+0700
2020-07-30T11:05:56.153+0700 [DEBUG] plugin.terraform-provider-bizfly: plugin address: address=/var/folders/0r/zdwrk7wn22vd_g32twvblrpc0000gn/T/plugin447297836 network=unix timestamp=2020-07-30T11:05:56.153+0700
2020-07-30T11:05:56.154+0700 [DEBUG] plugin: using plugin: version=5
2020/07/30 11:05:56 [TRACE] BuiltinEvalContext: Initialized "bizfly" provider for provider.bizfly
2020/07/30 11:05:56 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:05:56 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/07/30 11:05:56 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:05:56 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 11:05:56 [TRACE] <root>: eval: *terraform.EvalValidateProvider
2020/07/30 11:05:56 [TRACE] buildProviderConfig for provider.bizfly: using explicit config only
2020/07/30 11:05:56 [TRACE] GRPCProvider: GetSchema
2020/07/30 11:05:56 [TRACE] GRPCProvider: PrepareProviderConfig
2020/07/30 11:05:56 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:05:56 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:05:56 [TRACE] [walkValidate] Exiting eval tree: provider.bizfly
2020/07/30 11:05:56 [TRACE] vertex "provider.bizfly": visit complete
2020/07/30 11:05:56 [TRACE] dag/walk: visiting "bizfly_instance.test"
2020/07/30 11:05:56 [TRACE] vertex "bizfly_instance.test": starting visit (*terraform.NodeValidatableResource)
2020/07/30 11:05:56 [TRACE] vertex "bizfly_instance.test": evaluating
2020/07/30 11:05:56 [TRACE] [walkValidate] Entering eval tree: bizfly_instance.test
2020/07/30 11:05:56 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:05:56 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 11:05:56 [TRACE] <root>: eval: *terraform.EvalValidateResource
2020/07/30 11:05:56 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/07/30 11:05:56 [TRACE] [walkValidate] Exiting eval tree: bizfly_instance.test
2020/07/30 11:05:56 [TRACE] vertex "bizfly_instance.test": visit complete
2020/07/30 11:05:56 [TRACE] dag/walk: visiting "provider.bizfly (close)"
2020/07/30 11:05:56 [TRACE] vertex "provider.bizfly (close)": starting visit (*terraform.graphNodeCloseProvider)
2020/07/30 11:05:56 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2020/07/30 11:05:56 [TRACE] vertex "provider.bizfly (close)": evaluating
2020/07/30 11:05:56 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2020/07/30 11:05:56 [TRACE] vertex "meta.count-boundary (EachMode fixup)": evaluating
2020/07/30 11:05:56 [TRACE] [walkValidate] Entering eval tree: provider.bizfly (close)
2020/07/30 11:05:56 [TRACE] <root>: eval: *terraform.EvalCloseProvider
2020/07/30 11:05:56 [TRACE] [walkValidate] Entering eval tree: meta.count-boundary (EachMode fixup)
2020/07/30 11:05:56 [TRACE] <root>: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2020/07/30 11:05:56 [TRACE] GRPCProvider: Close
2020/07/30 11:05:56 [TRACE] [walkValidate] Exiting eval tree: meta.count-boundary (EachMode fixup)
2020/07/30 11:05:56 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2020-07-30T11:05:56.212+0700 [DEBUG] plugin: plugin process exited: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=49049
2020-07-30T11:05:56.212+0700 [DEBUG] plugin: plugin exited
2020/07/30 11:05:56 [TRACE] [walkValidate] Exiting eval tree: provider.bizfly (close)
2020/07/30 11:05:56 [TRACE] vertex "provider.bizfly (close)": visit complete
2020/07/30 11:05:56 [TRACE] dag/walk: visiting "root"
2020/07/30 11:05:56 [TRACE] vertex "root": starting visit (terraform.graphNodeRoot)
2020/07/30 11:05:56 [TRACE] vertex "root": visit complete
2020/07/30 11:05:56 [INFO] backend/local: apply calling Refresh
2020/07/30 11:05:56 [INFO] terraform: building graph: GraphTypeRefresh
2020/07/30 11:05:56 [TRACE] No managed resources in state during refresh; skipping managed resource transformer
2020/07/30 11:05:56 [TRACE] Executing graph transform *terraform.ConfigTransformer
2020/07/30 11:05:56 [TRACE] ConfigTransformer: Starting for path: 
2020/07/30 11:05:56 [TRACE] Completed graph transform *terraform.ConfigTransformer (no changes)
2020/07/30 11:05:56 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2020/07/30 11:05:56 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2020/07/30 11:05:56 [TRACE] Executing graph transform *terraform.StateTransformer
2020/07/30 11:05:56 [TRACE] StateTransformer: state is empty, so nothing to do
2020/07/30 11:05:56 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2020/07/30 11:05:56 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/30 11:05:56 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/30 11:05:56 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2020/07/30 11:05:56 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2020/07/30 11:05:56 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2020/07/30 11:05:56 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
var.login - *terraform.NodeRootVariable
------
2020/07/30 11:05:56 [TRACE] Executing graph transform *terraform.LocalTransformer
2020/07/30 11:05:56 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2020/07/30 11:05:56 [TRACE] Executing graph transform *terraform.OutputTransformer
2020/07/30 11:05:56 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2020/07/30 11:05:56 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2020/07/30 11:05:56 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2020/07/30 11:05:56 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2020/07/30 11:05:56 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2020/07/30 11:05:56 [TRACE] ProviderConfigTransformer: attaching to "provider.bizfly" provider configuration from main.tf:1,1-18
2020/07/30 11:05:56 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
provider.bizfly - *terraform.NodeApplyableProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 11:05:56 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2020/07/30 11:05:56 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2020/07/30 11:05:56 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2020/07/30 11:05:56 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer (no changes)
2020/07/30 11:05:56 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2020/07/30 11:05:56 [DEBUG] pruning unused provider.bizfly
2020/07/30 11:05:56 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer with new graph:
var.login - *terraform.NodeRootVariable
------
2020/07/30 11:05:56 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2020/07/30 11:05:56 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2020/07/30 11:05:56 [TRACE] Completed graph transform *terraform.graphTransformerMulti (no changes)
2020/07/30 11:05:56 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2020/07/30 11:05:56 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2020/07/30 11:05:56 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/30 11:05:56 [DEBUG] ReferenceTransformer: "var.login" references: []
2020/07/30 11:05:56 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/30 11:05:56 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/30 11:05:56 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/30 11:05:56 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2020/07/30 11:05:56 [TRACE] Completed graph transform *terraform.CloseProviderTransformer (no changes)
2020/07/30 11:05:56 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/30 11:05:56 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/07/30 11:05:56 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2020/07/30 11:05:56 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer (no changes)
2020/07/30 11:05:56 [DEBUG] Starting graph walk: walkRefresh
2020/07/30 11:05:56 [TRACE] dag/walk: updating graph
2020/07/30 11:05:56 [TRACE] dag/walk: added new vertex: "var.login"
2020/07/30 11:05:56 [TRACE] dag/walk: visiting "var.login"
2020/07/30 11:05:56 [TRACE] vertex "var.login": starting visit (*terraform.NodeRootVariable)
2020/07/30 11:05:56 [TRACE] vertex "var.login": visit complete
2020/07/30 11:05:56 [INFO] backend/local: apply calling Plan
2020/07/30 11:05:56 [INFO] terraform: building graph: GraphTypePlan
2020/07/30 11:05:56 [TRACE] Executing graph transform *terraform.ConfigTransformer
2020/07/30 11:05:56 [TRACE] ConfigTransformer: Starting for path: 
2020/07/30 11:05:56 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
bizfly_instance.test - *terraform.NodePlannableResource
------
2020/07/30 11:05:56 [TRACE] Executing graph transform *terraform.LocalTransformer
2020/07/30 11:05:56 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2020/07/30 11:05:56 [TRACE] Executing graph transform *terraform.OutputTransformer
2020/07/30 11:05:56 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2020/07/30 11:05:56 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2020/07/30 11:05:56 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2020/07/30 11:05:56 [TRACE] Executing graph transform *terraform.StateTransformer
2020/07/30 11:05:56 [TRACE] StateTransformer: state is empty, so nothing to do
2020/07/30 11:05:56 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2020/07/30 11:05:56 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2020/07/30 11:05:56 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2020/07/30 11:05:56 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2020/07/30 11:05:56 [TRACE] AttachResourceConfigTransformer: attaching to "bizfly_instance.test" (*terraform.NodePlannableResource) config from main.tf:7,1-34
2020/07/30 11:05:56 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2020/07/30 11:05:56 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/30 11:05:56 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/30 11:05:56 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2020/07/30 11:05:56 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
bizfly_instance.test - *terraform.NodePlannableResource
var.login - *terraform.NodeRootVariable
------
2020/07/30 11:05:56 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2020/07/30 11:05:56 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2020/07/30 11:05:56 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2020/07/30 11:05:56 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2020/07/30 11:05:56 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2020/07/30 11:05:56 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2020/07/30 11:05:56 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2020/07/30 11:05:56 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2020/07/30 11:05:56 [TRACE] ProviderConfigTransformer: attaching to "provider.bizfly" provider configuration from main.tf:1,1-18
2020/07/30 11:05:56 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
bizfly_instance.test - *terraform.NodePlannableResource
provider.bizfly - *terraform.NodeApplyableProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 11:05:56 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2020/07/30 11:05:56 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2020/07/30 11:05:56 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2020/07/30 11:05:56 [TRACE] ProviderTransformer: bizfly_instance.test is provided by provider.bizfly or inherited equivalent
2020/07/30 11:05:56 [TRACE] ProviderTransformer: exact match for provider.bizfly serving bizfly_instance.test
2020/07/30 11:05:56 [DEBUG] ProviderTransformer: "bizfly_instance.test" (*terraform.NodePlannableResource) needs provider.bizfly
2020/07/30 11:05:56 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
bizfly_instance.test - *terraform.NodePlannableResource
  provider.bizfly - *terraform.NodeApplyableProvider
provider.bizfly - *terraform.NodeApplyableProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 11:05:56 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2020/07/30 11:05:56 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2020/07/30 11:05:56 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2020/07/30 11:05:56 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2020/07/30 11:05:56 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
bizfly_instance.test - *terraform.NodePlannableResource
  provider.bizfly - *terraform.NodeApplyableProvider
provider.bizfly - *terraform.NodeApplyableProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 11:05:56 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2020/07/30 11:05:56 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2020/07/30 11:05:56 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2020/07/30 11:05:56 [TRACE] AttachSchemaTransformer: attaching resource schema to bizfly_instance.test
2020/07/30 11:05:56 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.bizfly
2020/07/30 11:05:56 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2020/07/30 11:05:56 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/30 11:05:56 [DEBUG] ReferenceTransformer: "bizfly_instance.test" references: []
2020/07/30 11:05:56 [DEBUG] ReferenceTransformer: "var.login" references: []
2020/07/30 11:05:56 [DEBUG] ReferenceTransformer: "provider.bizfly" references: []
2020/07/30 11:05:56 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/30 11:05:56 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2020/07/30 11:05:56 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
bizfly_instance.test - *terraform.NodePlannableResource
  provider.bizfly - *terraform.NodeApplyableProvider
meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  bizfly_instance.test - *terraform.NodePlannableResource
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
provider.bizfly - *terraform.NodeApplyableProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 11:05:56 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/30 11:05:56 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/30 11:05:56 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2020/07/30 11:05:56 [TRACE] ForcedCBDTransformer: "bizfly_instance.test" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2020/07/30 11:05:56 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2020/07/30 11:05:56 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2020/07/30 11:05:56 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
bizfly_instance.test - *terraform.NodePlannableResource
  provider.bizfly - *terraform.NodeApplyableProvider
meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  bizfly_instance.test - *terraform.NodePlannableResource
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
provider.bizfly - *terraform.NodeApplyableProvider
provider.bizfly (close) - *terraform.graphNodeCloseProvider
  bizfly_instance.test - *terraform.NodePlannableResource
  provider.bizfly - *terraform.NodeApplyableProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 11:05:56 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2020/07/30 11:05:56 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer (no changes)
2020/07/30 11:05:56 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/30 11:05:56 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
bizfly_instance.test - *terraform.NodePlannableResource
  provider.bizfly - *terraform.NodeApplyableProvider
meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  bizfly_instance.test - *terraform.NodePlannableResource
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
provider.bizfly - *terraform.NodeApplyableProvider
provider.bizfly (close) - *terraform.graphNodeCloseProvider
  bizfly_instance.test - *terraform.NodePlannableResource
  provider.bizfly - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 11:05:56 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2020/07/30 11:05:56 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
bizfly_instance.test - *terraform.NodePlannableResource
  provider.bizfly - *terraform.NodeApplyableProvider
meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  bizfly_instance.test - *terraform.NodePlannableResource
  var.login - *terraform.NodeRootVariable
provider.bizfly - *terraform.NodeApplyableProvider
provider.bizfly (close) - *terraform.graphNodeCloseProvider
  bizfly_instance.test - *terraform.NodePlannableResource
root - terraform.graphNodeRoot
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 11:05:56 [DEBUG] Starting graph walk: walkPlan
2020/07/30 11:05:56 [TRACE] dag/walk: updating graph
2020/07/30 11:05:56 [TRACE] dag/walk: added new vertex: "bizfly_instance.test"
2020/07/30 11:05:56 [TRACE] dag/walk: added new vertex: "var.login"
2020/07/30 11:05:56 [TRACE] dag/walk: added new vertex: "provider.bizfly"
2020/07/30 11:05:56 [TRACE] dag/walk: added new vertex: "meta.count-boundary (EachMode fixup)"
2020/07/30 11:05:56 [TRACE] dag/walk: added new vertex: "provider.bizfly (close)"
2020/07/30 11:05:56 [TRACE] dag/walk: added new vertex: "root"
2020/07/30 11:05:56 [TRACE] dag/walk: added edge: "provider.bizfly (close)" waiting on "bizfly_instance.test"
2020/07/30 11:05:56 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (EachMode fixup)"
2020/07/30 11:05:56 [TRACE] dag/walk: added edge: "root" waiting on "provider.bizfly (close)"
2020/07/30 11:05:56 [TRACE] dag/walk: added edge: "bizfly_instance.test" waiting on "provider.bizfly"
2020/07/30 11:05:56 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "bizfly_instance.test"
2020/07/30 11:05:56 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "var.login"
2020/07/30 11:05:56 [TRACE] dag/walk: dependencies changed for "provider.bizfly (close)", sending new deps
2020/07/30 11:05:56 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2020/07/30 11:05:56 [TRACE] dag/walk: dependencies changed for "bizfly_instance.test", sending new deps
2020/07/30 11:05:56 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (EachMode fixup)", sending new deps
2020/07/30 11:05:56 [TRACE] dag/walk: visiting "var.login"
2020/07/30 11:05:56 [TRACE] vertex "var.login": starting visit (*terraform.NodeRootVariable)
2020/07/30 11:05:56 [TRACE] dag/walk: visiting "provider.bizfly"
2020/07/30 11:05:56 [TRACE] vertex "var.login": visit complete
2020/07/30 11:05:56 [TRACE] vertex "provider.bizfly": starting visit (*terraform.NodeApplyableProvider)
2020/07/30 11:05:56 [TRACE] vertex "provider.bizfly": evaluating
2020/07/30 11:05:56 [TRACE] [walkPlan] Entering eval tree: provider.bizfly
2020/07/30 11:05:56 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:05:56 [TRACE] <root>: eval: *terraform.EvalInitProvider
2020-07-30T11:05:56.214+0700 [INFO]  plugin: configuring client automatic mTLS
2020-07-30T11:05:56.238+0700 [DEBUG] plugin: starting plugin: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly args=[/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly]
2020-07-30T11:05:56.242+0700 [DEBUG] plugin: plugin started: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=49050
2020-07-30T11:05:56.242+0700 [DEBUG] plugin: waiting for RPC address: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly
2020-07-30T11:05:56.260+0700 [INFO]  plugin.terraform-provider-bizfly: configuring server automatic mTLS: timestamp=2020-07-30T11:05:56.260+0700
2020-07-30T11:05:56.287+0700 [DEBUG] plugin: using plugin: version=5
2020-07-30T11:05:56.287+0700 [DEBUG] plugin.terraform-provider-bizfly: plugin address: address=/var/folders/0r/zdwrk7wn22vd_g32twvblrpc0000gn/T/plugin200839761 network=unix timestamp=2020-07-30T11:05:56.287+0700
2020/07/30 11:05:56 [TRACE] BuiltinEvalContext: Initialized "bizfly" provider for provider.bizfly
2020/07/30 11:05:56 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:05:56 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:05:56 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/07/30 11:05:56 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:05:56 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 11:05:56 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/07/30 11:05:56 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:05:56 [TRACE] <root>: eval: *terraform.EvalConfigProvider
2020/07/30 11:05:56 [TRACE] buildProviderConfig for provider.bizfly: using explicit config only
2020/07/30 11:05:56 [TRACE] GRPCProvider: GetSchema
2020/07/30 11:05:56 [TRACE] GRPCProvider: Configure
2020/07/30 11:05:57 [TRACE] [walkPlan] Exiting eval tree: provider.bizfly
2020/07/30 11:05:57 [TRACE] vertex "provider.bizfly": visit complete
2020/07/30 11:05:57 [TRACE] dag/walk: visiting "bizfly_instance.test"
2020/07/30 11:05:57 [TRACE] vertex "bizfly_instance.test": starting visit (*terraform.NodePlannableResource)
2020/07/30 11:05:57 [TRACE] vertex "bizfly_instance.test": evaluating
2020/07/30 11:05:57 [TRACE] [walkPlan] Entering eval tree: bizfly_instance.test
2020/07/30 11:05:57 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/07/30 11:05:57 [TRACE] [walkPlan] Exiting eval tree: bizfly_instance.test
2020/07/30 11:05:57 [TRACE] vertex "bizfly_instance.test": expanding dynamic subgraph
2020/07/30 11:05:57 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/07/30 11:05:57 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
bizfly_instance.test - *terraform.NodePlannableResourceInstance
------
2020/07/30 11:05:57 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/07/30 11:05:57 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/07/30 11:05:57 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/30 11:05:57 [DEBUG] Resource instance state not found for node "bizfly_instance.test", instance bizfly_instance.test
2020/07/30 11:05:57 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/30 11:05:57 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/30 11:05:57 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/30 11:05:57 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/30 11:05:57 [DEBUG] ReferenceTransformer: "bizfly_instance.test" references: []
2020/07/30 11:05:57 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/30 11:05:57 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/30 11:05:57 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/07/30 11:05:57 [TRACE] vertex "bizfly_instance.test": entering dynamic subgraph
2020/07/30 11:05:57 [TRACE] dag/walk: updating graph
2020/07/30 11:05:57 [TRACE] dag/walk: added new vertex: "bizfly_instance.test"
2020/07/30 11:05:57 [TRACE] dag/walk: visiting "bizfly_instance.test"
2020/07/30 11:05:57 [TRACE] vertex "bizfly_instance.test": starting visit (*terraform.NodePlannableResourceInstance)
2020/07/30 11:05:57 [TRACE] vertex "bizfly_instance.test": evaluating
2020/07/30 11:05:57 [TRACE] [walkPlan] Entering eval tree: bizfly_instance.test
2020/07/30 11:05:57 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:05:57 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 11:05:57 [TRACE] <root>: eval: *terraform.EvalReadState
2020/07/30 11:05:57 [TRACE] EvalReadState: reading state for bizfly_instance.test
2020/07/30 11:05:57 [TRACE] EvalReadState: no state present for bizfly_instance.test
2020/07/30 11:05:57 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2020/07/30 11:05:57 [TRACE] <root>: eval: *terraform.EvalDiff
2020/07/30 11:05:57 [TRACE] Re-validating config for "bizfly_instance.test"
2020/07/30 11:05:57 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/07/30 11:05:57 [TRACE] GRPCProvider: PlanResourceChange
2020/07/30 11:05:57 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2020/07/30 11:05:57 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/07/30 11:05:57 [TRACE] EvalWriteState: writing current state object for bizfly_instance.test
2020/07/30 11:05:57 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/07/30 11:05:57 [TRACE] EvalWriteDiff: recorded Create change for bizfly_instance.test
2020/07/30 11:05:57 [TRACE] [walkPlan] Exiting eval tree: bizfly_instance.test
2020/07/30 11:05:57 [TRACE] vertex "bizfly_instance.test": visit complete
2020/07/30 11:05:57 [TRACE] vertex "bizfly_instance.test": dynamic subgraph completed successfully
2020/07/30 11:05:57 [TRACE] vertex "bizfly_instance.test": visit complete
2020/07/30 11:05:57 [TRACE] dag/walk: visiting "provider.bizfly (close)"
2020/07/30 11:05:57 [TRACE] vertex "provider.bizfly (close)": starting visit (*terraform.graphNodeCloseProvider)
2020/07/30 11:05:57 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2020/07/30 11:05:57 [TRACE] vertex "provider.bizfly (close)": evaluating
2020/07/30 11:05:57 [TRACE] [walkPlan] Entering eval tree: provider.bizfly (close)
2020/07/30 11:05:57 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2020/07/30 11:05:57 [TRACE] vertex "meta.count-boundary (EachMode fixup)": evaluating
2020/07/30 11:05:57 [TRACE] <root>: eval: *terraform.EvalCloseProvider
2020/07/30 11:05:57 [TRACE] [walkPlan] Entering eval tree: meta.count-boundary (EachMode fixup)
2020/07/30 11:05:57 [TRACE] <root>: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2020/07/30 11:05:57 [TRACE] GRPCProvider: Close
2020/07/30 11:05:57 [TRACE] [walkPlan] Exiting eval tree: meta.count-boundary (EachMode fixup)
2020/07/30 11:05:57 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2020-07-30T11:05:57.657+0700 [DEBUG] plugin: plugin process exited: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=49050
2020-07-30T11:05:57.657+0700 [DEBUG] plugin: plugin exited
2020/07/30 11:05:57 [TRACE] [walkPlan] Exiting eval tree: provider.bizfly (close)
2020/07/30 11:05:57 [TRACE] vertex "provider.bizfly (close)": visit complete
2020/07/30 11:05:57 [TRACE] dag/walk: visiting "root"
2020/07/30 11:05:57 [TRACE] vertex "root": starting visit (terraform.graphNodeRoot)
2020/07/30 11:05:57 [TRACE] vertex "root": visit complete
2020/07/30 11:05:57 [DEBUG] command: asking for input: "Do you want to perform these actions?"
2020/07/30 11:05:58 [INFO] backend/local: apply calling Apply
2020/07/30 11:05:58 [INFO] terraform: building graph: GraphTypeApply
2020/07/30 11:05:58 [TRACE] Executing graph transform *terraform.ConfigTransformer
2020/07/30 11:05:58 [TRACE] ConfigTransformer: Starting for path: 
2020/07/30 11:05:58 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
------
2020/07/30 11:05:58 [TRACE] Executing graph transform *terraform.DiffTransformer
2020/07/30 11:05:58 [TRACE] DiffTransformer starting
2020/07/30 11:05:58 [TRACE] DiffTransformer: found Create change for bizfly_instance.test 
2020/07/30 11:05:58 [TRACE] DiffTransformer: bizfly_instance.test will be represented by bizfly_instance.test
2020/07/30 11:05:58 [TRACE] DiffTransformer complete
2020/07/30 11:05:58 [TRACE] Completed graph transform *terraform.DiffTransformer with new graph:
bizfly_instance.test - *terraform.NodeApplyableResourceInstance
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
------
2020/07/30 11:05:58 [TRACE] Executing graph transform *terraform.OrphanResourceTransformer
2020/07/30 11:05:58 [TRACE] Completed graph transform *terraform.OrphanResourceTransformer (no changes)
2020/07/30 11:05:58 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2020/07/30 11:05:58 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2020/07/30 11:05:58 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2020/07/30 11:05:58 [TRACE] AttachResourceConfigTransformer: attaching to "bizfly_instance.test (prepare state)" (*terraform.NodeApplyableResource) config from main.tf:7,1-34
2020/07/30 11:05:58 [TRACE] AttachResourceConfigTransformer: attaching to "bizfly_instance.test" (*terraform.NodeApplyableResourceInstance) config from main.tf:7,1-34
2020/07/30 11:05:58 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2020/07/30 11:05:58 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/30 11:05:58 [DEBUG] Resource state not found for node "bizfly_instance.test", instance bizfly_instance.test
2020/07/30 11:05:58 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/30 11:05:58 [TRACE] Executing graph transform *terraform.DestroyEdgeTransformer
2020/07/30 11:05:58 [TRACE] Completed graph transform *terraform.DestroyEdgeTransformer (no changes)
2020/07/30 11:05:58 [TRACE] Executing graph transform *terraform.CBDEdgeTransformer
2020/07/30 11:05:58 [TRACE] Completed graph transform *terraform.CBDEdgeTransformer (no changes)
2020/07/30 11:05:58 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2020/07/30 11:05:58 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2020/07/30 11:05:58 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2020/07/30 11:05:58 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2020/07/30 11:05:58 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2020/07/30 11:05:58 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
bizfly_instance.test - *terraform.NodeApplyableResourceInstance
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
var.login - *terraform.NodeRootVariable
------
2020/07/30 11:05:58 [TRACE] Executing graph transform *terraform.LocalTransformer
2020/07/30 11:05:58 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2020/07/30 11:05:58 [TRACE] Executing graph transform *terraform.OutputTransformer
2020/07/30 11:05:58 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2020/07/30 11:05:58 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2020/07/30 11:05:58 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2020/07/30 11:05:58 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2020/07/30 11:05:58 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2020/07/30 11:05:58 [TRACE] ProviderConfigTransformer: attaching to "provider.bizfly" provider configuration from main.tf:1,1-18
2020/07/30 11:05:58 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
bizfly_instance.test - *terraform.NodeApplyableResourceInstance
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
provider.bizfly - *terraform.NodeApplyableProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 11:05:58 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2020/07/30 11:05:58 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2020/07/30 11:05:58 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2020/07/30 11:05:58 [TRACE] ProviderTransformer: bizfly_instance.test (prepare state) is provided by provider.bizfly or inherited equivalent
2020/07/30 11:05:58 [TRACE] ProviderTransformer: bizfly_instance.test is provided by provider.bizfly or inherited equivalent
2020/07/30 11:05:58 [TRACE] ProviderTransformer: exact match for provider.bizfly serving bizfly_instance.test (prepare state)
2020/07/30 11:05:58 [DEBUG] ProviderTransformer: "bizfly_instance.test (prepare state)" (*terraform.NodeApplyableResource) needs provider.bizfly
2020/07/30 11:05:58 [TRACE] ProviderTransformer: exact match for provider.bizfly serving bizfly_instance.test
2020/07/30 11:05:58 [DEBUG] ProviderTransformer: "bizfly_instance.test" (*terraform.NodeApplyableResourceInstance) needs provider.bizfly
2020/07/30 11:05:58 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
bizfly_instance.test - *terraform.NodeApplyableResourceInstance
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
  provider.bizfly - *terraform.NodeApplyableProvider
bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
  provider.bizfly - *terraform.NodeApplyableProvider
provider.bizfly - *terraform.NodeApplyableProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 11:05:58 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2020/07/30 11:05:58 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2020/07/30 11:05:58 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2020/07/30 11:05:58 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2020/07/30 11:05:58 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
bizfly_instance.test - *terraform.NodeApplyableResourceInstance
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
  provider.bizfly - *terraform.NodeApplyableProvider
bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
  provider.bizfly - *terraform.NodeApplyableProvider
provider.bizfly - *terraform.NodeApplyableProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 11:05:58 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2020/07/30 11:05:58 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2020/07/30 11:05:58 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2020/07/30 11:05:58 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.bizfly
2020/07/30 11:05:58 [TRACE] AttachSchemaTransformer: attaching resource schema to bizfly_instance.test (prepare state)
2020/07/30 11:05:58 [TRACE] AttachSchemaTransformer: attaching resource schema to bizfly_instance.test
2020/07/30 11:05:58 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2020/07/30 11:05:58 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/30 11:05:58 [DEBUG] ReferenceTransformer: "provider.bizfly" references: []
2020/07/30 11:05:58 [DEBUG] ReferenceTransformer: "bizfly_instance.test (prepare state)" references: []
2020/07/30 11:05:58 [DEBUG] ReferenceTransformer: "bizfly_instance.test" references: []
2020/07/30 11:05:58 [DEBUG] ReferenceTransformer: "var.login" references: []
2020/07/30 11:05:58 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/30 11:05:58 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2020/07/30 11:05:58 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
bizfly_instance.test - *terraform.NodeApplyableResourceInstance
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
  provider.bizfly - *terraform.NodeApplyableProvider
bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
  provider.bizfly - *terraform.NodeApplyableProvider
meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  bizfly_instance.test - *terraform.NodeApplyableResourceInstance
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
provider.bizfly - *terraform.NodeApplyableProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 11:05:58 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/30 11:05:58 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/30 11:05:58 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2020/07/30 11:05:58 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
bizfly_instance.test - *terraform.NodeApplyableResourceInstance
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
  provider.bizfly - *terraform.NodeApplyableProvider
bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
  provider.bizfly - *terraform.NodeApplyableProvider
meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  bizfly_instance.test - *terraform.NodeApplyableResourceInstance
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
provider.bizfly - *terraform.NodeApplyableProvider
provider.bizfly (close) - *terraform.graphNodeCloseProvider
  bizfly_instance.test - *terraform.NodeApplyableResourceInstance
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
  provider.bizfly - *terraform.NodeApplyableProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 11:05:58 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2020/07/30 11:05:58 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer (no changes)
2020/07/30 11:05:58 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/30 11:05:58 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
bizfly_instance.test - *terraform.NodeApplyableResourceInstance
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
  provider.bizfly - *terraform.NodeApplyableProvider
bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
  provider.bizfly - *terraform.NodeApplyableProvider
meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  bizfly_instance.test - *terraform.NodeApplyableResourceInstance
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
provider.bizfly - *terraform.NodeApplyableProvider
provider.bizfly (close) - *terraform.graphNodeCloseProvider
  bizfly_instance.test - *terraform.NodeApplyableResourceInstance
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
  provider.bizfly - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 11:05:58 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2020/07/30 11:05:58 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
bizfly_instance.test - *terraform.NodeApplyableResourceInstance
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
  provider.bizfly - *terraform.NodeApplyableProvider
meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  bizfly_instance.test - *terraform.NodeApplyableResourceInstance
  var.login - *terraform.NodeRootVariable
provider.bizfly - *terraform.NodeApplyableProvider
provider.bizfly (close) - *terraform.graphNodeCloseProvider
  bizfly_instance.test - *terraform.NodeApplyableResourceInstance
root - terraform.graphNodeRoot
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
var.login - *terraform.NodeRootVariable
------
2020/07/30 11:05:58 [DEBUG] Starting graph walk: walkApply
2020/07/30 11:05:58 [TRACE] dag/walk: updating graph
2020/07/30 11:05:58 [TRACE] dag/walk: added new vertex: "bizfly_instance.test"
2020/07/30 11:05:58 [TRACE] dag/walk: added new vertex: "var.login"
2020/07/30 11:05:58 [TRACE] dag/walk: added new vertex: "provider.bizfly"
2020/07/30 11:05:58 [TRACE] dag/walk: added new vertex: "meta.count-boundary (EachMode fixup)"
2020/07/30 11:05:58 [TRACE] dag/walk: added new vertex: "provider.bizfly (close)"
2020/07/30 11:05:58 [TRACE] dag/walk: added new vertex: "root"
2020/07/30 11:05:58 [TRACE] dag/walk: added new vertex: "bizfly_instance.test (prepare state)"
2020/07/30 11:05:58 [TRACE] dag/walk: added edge: "provider.bizfly (close)" waiting on "bizfly_instance.test"
2020/07/30 11:05:58 [TRACE] dag/walk: added edge: "bizfly_instance.test" waiting on "bizfly_instance.test (prepare state)"
2020/07/30 11:05:58 [TRACE] dag/walk: added edge: "bizfly_instance.test (prepare state)" waiting on "provider.bizfly"
2020/07/30 11:05:58 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "var.login"
2020/07/30 11:05:58 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "bizfly_instance.test"
2020/07/30 11:05:58 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (EachMode fixup)"
2020/07/30 11:05:58 [TRACE] dag/walk: added edge: "root" waiting on "provider.bizfly (close)"
2020/07/30 11:05:58 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2020/07/30 11:05:58 [TRACE] dag/walk: dependencies changed for "provider.bizfly (close)", sending new deps
2020/07/30 11:05:58 [TRACE] dag/walk: dependencies changed for "bizfly_instance.test", sending new deps
2020/07/30 11:05:58 [TRACE] dag/walk: dependencies changed for "bizfly_instance.test (prepare state)", sending new deps
2020/07/30 11:05:58 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (EachMode fixup)", sending new deps
2020/07/30 11:05:58 [TRACE] dag/walk: visiting "provider.bizfly"
2020/07/30 11:05:58 [TRACE] vertex "provider.bizfly": starting visit (*terraform.NodeApplyableProvider)
2020/07/30 11:05:58 [TRACE] dag/walk: visiting "var.login"
2020/07/30 11:05:58 [TRACE] vertex "var.login": starting visit (*terraform.NodeRootVariable)
2020/07/30 11:05:58 [TRACE] vertex "provider.bizfly": evaluating
2020/07/30 11:05:58 [TRACE] [walkApply] Entering eval tree: provider.bizfly
2020/07/30 11:05:58 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:05:58 [TRACE] vertex "var.login": visit complete
2020/07/30 11:05:58 [TRACE] <root>: eval: *terraform.EvalInitProvider
2020-07-30T11:05:58.903+0700 [INFO]  plugin: configuring client automatic mTLS
2020-07-30T11:05:58.932+0700 [DEBUG] plugin: starting plugin: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly args=[/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly]
2020-07-30T11:05:58.936+0700 [DEBUG] plugin: plugin started: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=49055
2020-07-30T11:05:58.936+0700 [DEBUG] plugin: waiting for RPC address: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly
2020-07-30T11:05:58.955+0700 [INFO]  plugin.terraform-provider-bizfly: configuring server automatic mTLS: timestamp=2020-07-30T11:05:58.954+0700
2020-07-30T11:05:58.981+0700 [DEBUG] plugin: using plugin: version=5
2020-07-30T11:05:58.981+0700 [DEBUG] plugin.terraform-provider-bizfly: plugin address: address=/var/folders/0r/zdwrk7wn22vd_g32twvblrpc0000gn/T/plugin919652602 network=unix timestamp=2020-07-30T11:05:58.981+0700
2020/07/30 11:05:58 [TRACE] BuiltinEvalContext: Initialized "bizfly" provider for provider.bizfly
2020/07/30 11:05:58 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:05:58 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:05:58 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/07/30 11:05:58 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:05:58 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 11:05:58 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/07/30 11:05:58 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:05:58 [TRACE] <root>: eval: *terraform.EvalConfigProvider
2020/07/30 11:05:58 [TRACE] buildProviderConfig for provider.bizfly: using explicit config only
2020/07/30 11:05:58 [TRACE] GRPCProvider: GetSchema
2020/07/30 11:05:59 [TRACE] GRPCProvider: Configure
2020/07/30 11:06:00 [TRACE] [walkApply] Exiting eval tree: provider.bizfly
2020/07/30 11:06:00 [TRACE] vertex "provider.bizfly": visit complete
2020/07/30 11:06:00 [TRACE] dag/walk: visiting "bizfly_instance.test (prepare state)"
2020/07/30 11:06:00 [TRACE] vertex "bizfly_instance.test (prepare state)": starting visit (*terraform.NodeApplyableResource)
2020/07/30 11:06:00 [TRACE] vertex "bizfly_instance.test (prepare state)": evaluating
2020/07/30 11:06:00 [TRACE] [walkApply] Entering eval tree: bizfly_instance.test (prepare state)
2020/07/30 11:06:00 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/07/30 11:06:00 [TRACE] [walkApply] Exiting eval tree: bizfly_instance.test (prepare state)
2020/07/30 11:06:00 [TRACE] vertex "bizfly_instance.test (prepare state)": visit complete
2020/07/30 11:06:00 [TRACE] dag/walk: visiting "bizfly_instance.test"
2020/07/30 11:06:00 [TRACE] vertex "bizfly_instance.test": starting visit (*terraform.NodeApplyableResourceInstance)
2020/07/30 11:06:00 [TRACE] vertex "bizfly_instance.test": evaluating
2020/07/30 11:06:00 [TRACE] [walkApply] Entering eval tree: bizfly_instance.test
2020/07/30 11:06:00 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:06:00 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 11:06:00 [TRACE] <root>: eval: *terraform.EvalReadDiff
2020/07/30 11:06:00 [TRACE] EvalReadDiff: Read Create change from plan for bizfly_instance.test
2020/07/30 11:06:00 [TRACE] <root>: eval: *terraform.EvalIf
2020/07/30 11:06:00 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:06:00 [TRACE] <root>: eval: *terraform.EvalIf
2020/07/30 11:06:00 [TRACE] <root>: eval: *terraform.EvalReadState
2020/07/30 11:06:00 [TRACE] EvalReadState: reading state for bizfly_instance.test
2020/07/30 11:06:00 [TRACE] EvalReadState: no state present for bizfly_instance.test
2020/07/30 11:06:00 [TRACE] <root>: eval: *terraform.EvalReadDiff
2020/07/30 11:06:00 [TRACE] EvalReadDiff: Read Create change from plan for bizfly_instance.test
2020/07/30 11:06:00 [TRACE] <root>: eval: *terraform.EvalDiff
2020/07/30 11:06:00 [TRACE] Re-validating config for "bizfly_instance.test"
2020/07/30 11:06:00 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/07/30 11:06:00 [TRACE] GRPCProvider: PlanResourceChange
2020/07/30 11:06:00 [TRACE] <root>: eval: *terraform.EvalCheckPlannedChange
2020/07/30 11:06:00 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2020/07/30 11:06:00 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 11:06:00 [TRACE] <root>: eval: *terraform.EvalReadState
2020/07/30 11:06:00 [TRACE] EvalReadState: reading state for bizfly_instance.test
2020/07/30 11:06:00 [TRACE] EvalReadState: no state present for bizfly_instance.test
2020/07/30 11:06:00 [TRACE] <root>: eval: *terraform.EvalReduceDiff
2020/07/30 11:06:00 [TRACE] <root>: eval: *terraform.EvalIf
2020/07/30 11:06:00 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:06:00 [TRACE] <root>: eval: *terraform.EvalApplyPre
2020/07/30 11:06:00 [TRACE] <root>: eval: *terraform.EvalApply
2020/07/30 11:06:00 [DEBUG] bizfly_instance.test: applying the planned Create change
2020/07/30 11:06:00 [TRACE] GRPCProvider: ApplyResourceChange
2020-07-30T11:06:00.321+0700 [DEBUG] plugin.terraform-provider-bizfly: panic: interface conversion: interface {} is map[string]interface {}, not string
2020-07-30T11:06:00.321+0700 [DEBUG] plugin.terraform-provider-bizfly: 
2020-07-30T11:06:00.321+0700 [DEBUG] plugin.terraform-provider-bizfly: goroutine 85 [running]:
2020-07-30T11:06:00.321+0700 [DEBUG] plugin.terraform-provider-bizfly: terraform-provider-bizfly/provider.resouceInstanceCreate(0xc00014fea0, 0x1aeb820, 0xc0007bcf00, 0x2, 0x25cf840)
2020-07-30T11:06:00.321+0700 [DEBUG] plugin.terraform-provider-bizfly: 	/Users/hung/go/src/terraform-provider-bizfly/provider/resource_instance.go:145 +0x349
2020-07-30T11:06:00.321+0700 [DEBUG] plugin.terraform-provider-bizfly: github.com/hashicorp/terraform-plugin-sdk/helper/schema.(*Resource).Apply(0xc0000a22d0, 0xc00053bb30, 0xc000538c20, 0x1aeb820, 0xc0007bcf00, 0x1a9e901, 0xc0004a67d8, 0xc0004ffaa0)
2020-07-30T11:06:00.321+0700 [DEBUG] plugin.terraform-provider-bizfly: 	/Users/hung/go/pkg/mod/github.com/hashicorp/terraform-plugin-sdk@v1.15.0/helper/schema/resource.go:310 +0x365
2020-07-30T11:06:00.321+0700 [DEBUG] plugin.terraform-provider-bizfly: github.com/hashicorp/terraform-plugin-sdk/helper/schema.(*Provider).Apply(0xc0000ca000, 0xc0005d5a10, 0xc00053bb30, 0xc000538c20, 0xc00001fb88, 0xc0000aa100, 0x1aa0540)
2020-07-30T11:06:00.321+0700 [DEBUG] plugin.terraform-provider-bizfly: 	/Users/hung/go/pkg/mod/github.com/hashicorp/terraform-plugin-sdk@v1.15.0/helper/schema/provider.go:294 +0x99
2020-07-30T11:06:00.321+0700 [DEBUG] plugin.terraform-provider-bizfly: github.com/hashicorp/terraform-plugin-sdk/internal/helper/plugin.(*GRPCProviderServer).ApplyResourceChange(0xc0000aa020, 0x1e83940, 0xc0001e87b0, 0xc00014f7a0, 0xc0000aa020, 0xc0001e87b0, 0xc000072b78)
2020-07-30T11:06:00.321+0700 [DEBUG] plugin.terraform-provider-bizfly: 	/Users/hung/go/pkg/mod/github.com/hashicorp/terraform-plugin-sdk@v1.15.0/internal/helper/plugin/grpc_provider.go:885 +0x8b4
2020-07-30T11:06:00.321+0700 [DEBUG] plugin.terraform-provider-bizfly: github.com/hashicorp/terraform-plugin-sdk/internal/tfplugin5._Provider_ApplyResourceChange_Handler(0x1bb14c0, 0xc0000aa020, 0x1e83940, 0xc0001e87b0, 0xc000512f60, 0x0, 0x1e83940, 0xc0001e87b0, 0xc0002fe3c0, 0x1ce)
2020-07-30T11:06:00.321+0700 [DEBUG] plugin.terraform-provider-bizfly: 	/Users/hung/go/pkg/mod/github.com/hashicorp/terraform-plugin-sdk@v1.15.0/internal/tfplugin5/tfplugin5.pb.go:3305 +0x217
2020-07-30T11:06:00.322+0700 [DEBUG] plugin.terraform-provider-bizfly: google.golang.org/grpc.(*Server).processUnaryRPC(0xc0004a8780, 0x1e8e1e0, 0xc0004a9680, 0xc000550500, 0xc00010b230, 0x2595940, 0x0, 0x0, 0x0)
2020-07-30T11:06:00.322+0700 [DEBUG] plugin.terraform-provider-bizfly: 	/Users/hung/go/pkg/mod/google.golang.org/grpc@v1.27.1/server.go:1024 +0x501
2020-07-30T11:06:00.322+0700 [DEBUG] plugin.terraform-provider-bizfly: google.golang.org/grpc.(*Server).handleStream(0xc0004a8780, 0x1e8e1e0, 0xc0004a9680, 0xc000550500, 0x0)
2020-07-30T11:06:00.322+0700 [DEBUG] plugin.terraform-provider-bizfly: 	/Users/hung/go/pkg/mod/google.golang.org/grpc@v1.27.1/server.go:1313 +0xd3d
2020-07-30T11:06:00.322+0700 [DEBUG] plugin.terraform-provider-bizfly: google.golang.org/grpc.(*Server).serveStreams.func1.1(0xc000038500, 0xc0004a8780, 0x1e8e1e0, 0xc0004a9680, 0xc000550500)
2020-07-30T11:06:00.322+0700 [DEBUG] plugin.terraform-provider-bizfly: 	/Users/hung/go/pkg/mod/google.golang.org/grpc@v1.27.1/server.go:722 +0xa1
2020-07-30T11:06:00.322+0700 [DEBUG] plugin.terraform-provider-bizfly: created by google.golang.org/grpc.(*Server).serveStreams.func1
2020-07-30T11:06:00.322+0700 [DEBUG] plugin.terraform-provider-bizfly: 	/Users/hung/go/pkg/mod/google.golang.org/grpc@v1.27.1/server.go:720 +0xa1
2020-07-30T11:06:00.327+0700 [DEBUG] plugin: plugin process exited: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=49055 error="exit status 2"
2020/07/30 11:06:00 [DEBUG] bizfly_instance.test: apply errored, but we're indicating that via the Error pointer rather than returning it: rpc error: code = Unavailable desc = transport is closing
2020/07/30 11:06:00 [TRACE] <root>: eval: *terraform.EvalMaybeTainted
2020/07/30 11:06:00 [TRACE] EvalMaybeTainted: bizfly_instance.test encountered an error during creation, so it is now marked as tainted
2020/07/30 11:06:00 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/07/30 11:06:00 [TRACE] EvalWriteState: removing state object for bizfly_instance.test
2020/07/30 11:06:00 [TRACE] <root>: eval: *terraform.EvalApplyProvisioners
2020/07/30 11:06:00 [TRACE] EvalApplyProvisioners: bizfly_instance.test has no state, so skipping provisioners
2020/07/30 11:06:00 [TRACE] <root>: eval: *terraform.EvalMaybeTainted
2020/07/30 11:06:00 [TRACE] EvalMaybeTainted: bizfly_instance.test encountered an error during creation, so it is now marked as tainted
2020/07/30 11:06:00 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/07/30 11:06:00 [TRACE] EvalWriteState: removing state object for bizfly_instance.test
2020/07/30 11:06:00 [TRACE] <root>: eval: *terraform.EvalIf
2020/07/30 11:06:00 [TRACE] <root>: eval: *terraform.EvalIf
2020/07/30 11:06:00 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/07/30 11:06:00 [TRACE] <root>: eval: *terraform.EvalApplyPost
2020/07/30 11:06:00 [ERROR] <root>: eval: *terraform.EvalApplyPost, err: rpc error: code = Unavailable desc = transport is closing
2020/07/30 11:06:00 [ERROR] <root>: eval: *terraform.EvalSequence, err: rpc error: code = Unavailable desc = transport is closing
2020/07/30 11:06:00 [TRACE] [walkApply] Exiting eval tree: bizfly_instance.test
2020/07/30 11:06:00 [TRACE] vertex "bizfly_instance.test": visit complete
2020/07/30 11:06:00 [TRACE] dag/walk: upstream of "provider.bizfly (close)" errored, so skipping
2020/07/30 11:06:00 [TRACE] dag/walk: upstream of "meta.count-boundary (EachMode fixup)" errored, so skipping
2020/07/30 11:06:00 [TRACE] dag/walk: upstream of "root" errored, so skipping
2020/07/30 11:06:00 [TRACE] statemgr.Filesystem: not making a backup, because the new snapshot is identical to the old
2020/07/30 11:06:00 [TRACE] statemgr.Filesystem: no state changes since last snapshot
2020/07/30 11:06:00 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2020/07/30 11:06:00 [TRACE] statemgr.Filesystem: removing lock metadata file .terraform.tfstate.lock.info
2020/07/30 11:06:00 [TRACE] statemgr.Filesystem: unlocking terraform.tfstate using fcntl flock
2020-07-30T11:06:00.337+0700 [DEBUG] plugin: plugin exited
2020/07/30 11:08:45 [INFO] Terraform version: 0.12.9  
2020/07/30 11:08:45 [INFO] Go runtime version: go1.13
2020/07/30 11:08:45 [INFO] CLI args: []string{"/usr/local/bin/terraform", "version"}
2020/07/30 11:08:45 [DEBUG] Attempting to open CLI config file: /Users/hung/.terraformrc
2020/07/30 11:08:45 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2020/07/30 11:08:45 [INFO] CLI command args: []string{"version"}
2020/07/30 11:08:45 [DEBUG] checking for provider in "."
2020/07/30 11:08:45 [WARN] found legacy provider "terraform-provider-bizfly"
2020/07/30 11:08:45 [DEBUG] checking for provider in "/usr/local/bin"
2020/07/30 11:08:45 [DEBUG] checking for provider in ".terraform/plugins/darwin_amd64"
2020/07/30 11:08:45 [DEBUG] found valid plugin: "bizfly", "0.0.0", "/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly"
2020/07/30 11:15:06 [INFO] Terraform version: 0.12.29  
2020/07/30 11:15:06 [INFO] Go runtime version: go1.13.14
2020/07/30 11:15:06 [INFO] CLI args: []string{"/usr/local/bin/terraform", "init"}
2020/07/30 11:15:06 [DEBUG] Attempting to open CLI config file: /Users/hung/.terraformrc
2020/07/30 11:15:06 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2020/07/30 11:15:06 [INFO] CLI command args: []string{"init"}
2020/07/30 11:15:06 [TRACE] Meta.Backend: no config given or present on disk, so returning nil config
2020/07/30 11:15:06 [TRACE] Meta.Backend: backend has not previously been initialized in this working directory
2020/07/30 11:15:06 [DEBUG] New state was assigned lineage "7a881258-4289-7a85-6a7b-8897076a7117"
2020/07/30 11:15:06 [TRACE] Meta.Backend: using default local state only (no backend configuration, and no existing initialized backend)
2020/07/30 11:15:06 [TRACE] Meta.Backend: instantiated backend of type <nil>
2020/07/30 11:15:06 [DEBUG] checking for provider in "."
2020/07/30 11:15:06 [WARN] found legacy provider "terraform-provider-bizfly"
2020/07/30 11:15:06 [DEBUG] checking for provider in "/usr/local/bin"
2020/07/30 11:15:06 [DEBUG] checking for provider in ".terraform/plugins/darwin_amd64"
2020/07/30 11:15:06 [DEBUG] found valid plugin: "bizfly", "0.0.0", "/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly"
2020/07/30 11:15:06 [DEBUG] checking for provisioner in "."
2020/07/30 11:15:06 [DEBUG] checking for provisioner in "/usr/local/bin"
2020/07/30 11:15:06 [DEBUG] checking for provisioner in ".terraform/plugins/darwin_amd64"
2020/07/30 11:15:06 [TRACE] Meta.Backend: backend <nil> does not support operations, so wrapping it in a local backend
2020/07/30 11:15:06 [TRACE] backend/local: state manager for workspace "default" will:
 - read initial snapshot from terraform.tfstate
 - write new snapshots to terraform.tfstate
 - create any backup at terraform.tfstate.backup
2020/07/30 11:15:06 [TRACE] statemgr.Filesystem: reading initial snapshot from terraform.tfstate
2020/07/30 11:15:06 [TRACE] statemgr.Filesystem: read snapshot with lineage "8e1934d5-1d8f-e9a8-58e8-6c54c3aa209a" serial 1
2020/07/30 11:15:06 [DEBUG] checking for provider in "."
2020/07/30 11:15:06 [WARN] found legacy provider "terraform-provider-bizfly"
2020/07/30 11:15:06 [DEBUG] checking for provider in "/usr/local/bin"
2020/07/30 11:15:06 [DEBUG] checking for provider in ".terraform/plugins/darwin_amd64"
2020/07/30 11:15:06 [DEBUG] found valid plugin: "bizfly", "0.0.0", "/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly"
2020/07/30 11:15:06 [DEBUG] plugin requirements: "bizfly"=""
2020/07/30 11:15:06 [DEBUG] checking for provider in "."
2020/07/30 11:15:06 [WARN] found legacy provider "terraform-provider-bizfly"
2020/07/30 11:15:06 [DEBUG] checking for provider in "/usr/local/bin"
2020/07/30 11:15:06 [DEBUG] checking for provider in ".terraform/plugins/darwin_amd64"
2020/07/30 11:15:06 [DEBUG] found valid plugin: "bizfly", "0.0.0", "/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly"
2020/07/30 11:15:06 [DEBUG] checking for provider in ".terraform/plugins/darwin_amd64"
2020/07/30 11:15:08 [INFO] Terraform version: 0.12.29  
2020/07/30 11:15:08 [INFO] Go runtime version: go1.13.14
2020/07/30 11:15:08 [INFO] CLI args: []string{"/usr/local/bin/terraform", "apply"}
2020/07/30 11:15:08 [DEBUG] Attempting to open CLI config file: /Users/hung/.terraformrc
2020/07/30 11:15:08 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2020/07/30 11:15:08 [INFO] CLI command args: []string{"apply"}
2020/07/30 11:15:08 [TRACE] Meta.Backend: no config given or present on disk, so returning nil config
2020/07/30 11:15:08 [TRACE] Meta.Backend: backend has not previously been initialized in this working directory
2020/07/30 11:15:08 [DEBUG] New state was assigned lineage "d8a24673-c25d-ea04-afb5-c44d7938e427"
2020/07/30 11:15:08 [TRACE] Meta.Backend: using default local state only (no backend configuration, and no existing initialized backend)
2020/07/30 11:15:08 [TRACE] Meta.Backend: instantiated backend of type <nil>
2020/07/30 11:15:08 [DEBUG] checking for provider in "."
2020/07/30 11:15:08 [WARN] found legacy provider "terraform-provider-bizfly"
2020/07/30 11:15:08 [DEBUG] checking for provider in "/usr/local/bin"
2020/07/30 11:15:08 [DEBUG] checking for provider in ".terraform/plugins/darwin_amd64"
2020/07/30 11:15:08 [DEBUG] found valid plugin: "bizfly", "0.0.0", "/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly"
2020/07/30 11:15:08 [DEBUG] checking for provisioner in "."
2020/07/30 11:15:08 [DEBUG] checking for provisioner in "/usr/local/bin"
2020/07/30 11:15:08 [DEBUG] checking for provisioner in ".terraform/plugins/darwin_amd64"
2020/07/30 11:15:08 [TRACE] Meta.Backend: backend <nil> does not support operations, so wrapping it in a local backend
2020/07/30 11:15:08 [INFO] backend/local: starting Apply operation
2020/07/30 11:15:08 [TRACE] backend/local: requesting state manager for workspace "default"
2020/07/30 11:15:08 [TRACE] backend/local: state manager for workspace "default" will:
 - read initial snapshot from terraform.tfstate
 - write new snapshots to terraform.tfstate
 - create any backup at terraform.tfstate.backup
2020/07/30 11:15:08 [TRACE] backend/local: requesting state lock for workspace "default"
2020/07/30 11:15:08 [TRACE] statemgr.Filesystem: preparing to manage state snapshots at terraform.tfstate
2020/07/30 11:15:08 [TRACE] statemgr.Filesystem: existing snapshot has lineage "8e1934d5-1d8f-e9a8-58e8-6c54c3aa209a" serial 1
2020/07/30 11:15:08 [TRACE] statemgr.Filesystem: locking terraform.tfstate using fcntl flock
2020/07/30 11:15:08 [TRACE] statemgr.Filesystem: writing lock metadata to .terraform.tfstate.lock.info
2020/07/30 11:15:08 [TRACE] backend/local: reading remote state for workspace "default"
2020/07/30 11:15:08 [TRACE] statemgr.Filesystem: reading latest snapshot from terraform.tfstate
2020/07/30 11:15:08 [TRACE] statemgr.Filesystem: read snapshot with lineage "8e1934d5-1d8f-e9a8-58e8-6c54c3aa209a" serial 1
2020/07/30 11:15:08 [TRACE] backend/local: retrieving local state snapshot for workspace "default"
2020/07/30 11:15:08 [TRACE] backend/local: building context for current working directory
2020/07/30 11:15:08 [TRACE] terraform.NewContext: starting
2020/07/30 11:15:08 [TRACE] terraform.NewContext: resolving provider version selections
2020/07/30 11:15:08 [TRACE] terraform.NewContext: loading provider schemas
2020/07/30 11:15:08 [TRACE] LoadSchemas: retrieving schema for provider type "bizfly"
2020-07-30T11:15:08.827+0700 [INFO]  plugin: configuring client automatic mTLS
2020-07-30T11:15:08.861+0700 [DEBUG] plugin: starting plugin: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly args=[/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly]
2020-07-30T11:15:08.864+0700 [DEBUG] plugin: plugin started: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=51243
2020-07-30T11:15:08.865+0700 [DEBUG] plugin: waiting for RPC address: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly
2020-07-30T11:15:08.882+0700 [INFO]  plugin.terraform-provider-bizfly: configuring server automatic mTLS: timestamp=2020-07-30T11:15:08.882+0700
2020-07-30T11:15:08.908+0700 [DEBUG] plugin: using plugin: version=5
2020-07-30T11:15:08.908+0700 [DEBUG] plugin.terraform-provider-bizfly: plugin address: address=/var/folders/0r/zdwrk7wn22vd_g32twvblrpc0000gn/T/plugin552748542 network=unix timestamp=2020-07-30T11:15:08.908+0700
2020/07/30 11:15:08 [TRACE] GRPCProvider: GetSchema
2020-07-30T11:15:08.967+0700 [TRACE] plugin.stdio: waiting for stdio data
2020/07/30 11:15:08 [TRACE] GRPCProvider: Close
2020-07-30T11:15:08.970+0700 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2020-07-30T11:15:08.972+0700 [DEBUG] plugin: plugin process exited: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=51243
2020-07-30T11:15:08.972+0700 [DEBUG] plugin: plugin exited
2020/07/30 11:15:08 [TRACE] terraform.NewContext: complete
2020/07/30 11:15:08 [TRACE] backend/local: finished building terraform.Context
2020/07/30 11:15:08 [TRACE] backend/local: requesting interactive input, if necessary
2020/07/30 11:15:08 [TRACE] Context.Input: Prompting for provider arguments
2020/07/30 11:15:08 [TRACE] Context.Input: Provider provider.bizfly declared at main.tf:1,1-18
2020/07/30 11:15:08 [TRACE] Context.Input: Input for provider.bizfly: map[string]cty.Value{}
2020/07/30 11:15:08 [TRACE] backend/local: running validation operation
2020/07/30 11:15:08 [INFO] terraform: building graph: GraphTypeValidate
2020/07/30 11:15:08 [TRACE] Executing graph transform *terraform.ConfigTransformer
2020/07/30 11:15:08 [TRACE] ConfigTransformer: Starting for path: 
2020/07/30 11:15:08 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
  ------
2020/07/30 11:15:08 [TRACE] Executing graph transform *terraform.LocalTransformer
2020/07/30 11:15:08 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2020/07/30 11:15:08 [TRACE] Executing graph transform *terraform.OutputTransformer
2020/07/30 11:15:08 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2020/07/30 11:15:08 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2020/07/30 11:15:08 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2020/07/30 11:15:08 [TRACE] Executing graph transform *terraform.StateTransformer
2020/07/30 11:15:08 [TRACE] StateTransformer: state is empty, so nothing to do
2020/07/30 11:15:08 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2020/07/30 11:15:08 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2020/07/30 11:15:08 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2020/07/30 11:15:08 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2020/07/30 11:15:08 [TRACE] AttachResourceConfigTransformer: attaching to "bizfly_instance.test" (*terraform.NodeValidatableResource) config from main.tf:7,1-34
2020/07/30 11:15:08 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2020/07/30 11:15:08 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/30 11:15:08 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/30 11:15:08 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2020/07/30 11:15:08 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:15:08 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2020/07/30 11:15:08 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2020/07/30 11:15:08 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2020/07/30 11:15:08 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2020/07/30 11:15:08 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2020/07/30 11:15:08 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2020/07/30 11:15:08 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2020/07/30 11:15:08 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2020/07/30 11:15:08 [TRACE] ProviderConfigTransformer: attaching to "provider.bizfly" provider configuration from main.tf:1,1-18
2020/07/30 11:15:08 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:15:08 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2020/07/30 11:15:08 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2020/07/30 11:15:08 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2020/07/30 11:15:08 [TRACE] ProviderTransformer: bizfly_instance.test is provided by provider.bizfly or inherited equivalent
2020/07/30 11:15:08 [TRACE] ProviderTransformer: exact match for provider.bizfly serving bizfly_instance.test
2020/07/30 11:15:08 [DEBUG] ProviderTransformer: "bizfly_instance.test" (*terraform.NodeValidatableResource) needs provider.bizfly
2020/07/30 11:15:08 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:15:08 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2020/07/30 11:15:08 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2020/07/30 11:15:08 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2020/07/30 11:15:08 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2020/07/30 11:15:08 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:15:08 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2020/07/30 11:15:08 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2020/07/30 11:15:08 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2020/07/30 11:15:08 [TRACE] AttachSchemaTransformer: attaching resource schema to bizfly_instance.test
2020/07/30 11:15:08 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.bizfly
2020/07/30 11:15:08 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2020/07/30 11:15:08 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/30 11:15:08 [DEBUG] ReferenceTransformer: "bizfly_instance.test" references: []
2020/07/30 11:15:08 [DEBUG] ReferenceTransformer: "var.login" references: []
2020/07/30 11:15:08 [DEBUG] ReferenceTransformer: "provider.bizfly" references: []
2020/07/30 11:15:08 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/30 11:15:08 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2020/07/30 11:15:08 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:15:08 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/30 11:15:08 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/30 11:15:08 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2020/07/30 11:15:08 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2020/07/30 11:15:08 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2020/07/30 11:15:08 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
    bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:15:08 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2020/07/30 11:15:08 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer (no changes)
2020/07/30 11:15:08 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/30 11:15:08 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
    bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.bizfly (close) - *terraform.graphNodeCloseProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:15:08 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2020/07/30 11:15:08 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodeValidatableResource
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
    bizfly_instance.test - *terraform.NodeValidatableResource
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.bizfly (close) - *terraform.graphNodeCloseProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:15:08 [DEBUG] Starting graph walk: walkValidate
2020/07/30 11:15:08 [TRACE] dag/walk: updating graph
2020/07/30 11:15:08 [TRACE] dag/walk: added new vertex: "root"
2020/07/30 11:15:08 [TRACE] dag/walk: added new vertex: "bizfly_instance.test"
2020/07/30 11:15:08 [TRACE] dag/walk: added new vertex: "var.login"
2020/07/30 11:15:08 [TRACE] dag/walk: added new vertex: "provider.bizfly"
2020/07/30 11:15:08 [TRACE] dag/walk: added new vertex: "meta.count-boundary (EachMode fixup)"
2020/07/30 11:15:08 [TRACE] dag/walk: added new vertex: "provider.bizfly (close)"
2020/07/30 11:15:08 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "var.login"
2020/07/30 11:15:08 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "bizfly_instance.test"
2020/07/30 11:15:08 [TRACE] dag/walk: added edge: "provider.bizfly (close)" waiting on "bizfly_instance.test"
2020/07/30 11:15:08 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (EachMode fixup)"
2020/07/30 11:15:08 [TRACE] dag/walk: added edge: "root" waiting on "provider.bizfly (close)"
2020/07/30 11:15:08 [TRACE] dag/walk: added edge: "bizfly_instance.test" waiting on "provider.bizfly"
2020/07/30 11:15:08 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (EachMode fixup)", sending new deps
2020/07/30 11:15:08 [TRACE] dag/walk: dependencies changed for "provider.bizfly (close)", sending new deps
2020/07/30 11:15:08 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2020/07/30 11:15:08 [TRACE] dag/walk: dependencies changed for "bizfly_instance.test", sending new deps
2020/07/30 11:15:08 [TRACE] dag/walk: visiting "var.login"
2020/07/30 11:15:08 [TRACE] vertex "var.login": starting visit (*terraform.NodeRootVariable)
2020/07/30 11:15:08 [TRACE] vertex "var.login": evaluating
2020/07/30 11:15:08 [TRACE] [walkValidate] Entering eval tree: var.login
2020/07/30 11:15:08 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:15:08 [TRACE] dag/walk: visiting "provider.bizfly"
2020/07/30 11:15:08 [TRACE] [walkValidate] Exiting eval tree: var.login
2020/07/30 11:15:08 [TRACE] vertex "provider.bizfly": starting visit (*terraform.NodeApplyableProvider)
2020/07/30 11:15:08 [TRACE] vertex "var.login": visit complete
2020/07/30 11:15:08 [TRACE] vertex "provider.bizfly": evaluating
2020/07/30 11:15:08 [TRACE] [walkValidate] Entering eval tree: provider.bizfly
2020/07/30 11:15:08 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:15:08 [TRACE] <root>: eval: *terraform.EvalInitProvider
2020-07-30T11:15:08.978+0700 [INFO]  plugin: configuring client automatic mTLS
2020-07-30T11:15:09.002+0700 [DEBUG] plugin: starting plugin: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly args=[/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly]
2020-07-30T11:15:09.006+0700 [DEBUG] plugin: plugin started: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=51244
2020-07-30T11:15:09.006+0700 [DEBUG] plugin: waiting for RPC address: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly
2020-07-30T11:15:09.023+0700 [INFO]  plugin.terraform-provider-bizfly: configuring server automatic mTLS: timestamp=2020-07-30T11:15:09.023+0700
2020-07-30T11:15:09.051+0700 [DEBUG] plugin.terraform-provider-bizfly: plugin address: address=/var/folders/0r/zdwrk7wn22vd_g32twvblrpc0000gn/T/plugin160761515 network=unix timestamp=2020-07-30T11:15:09.051+0700
2020-07-30T11:15:09.051+0700 [DEBUG] plugin: using plugin: version=5
2020/07/30 11:15:09 [TRACE] BuiltinEvalContext: Initialized "bizfly" provider for provider.bizfly
2020-07-30T11:15:09.104+0700 [TRACE] plugin.stdio: waiting for stdio data
2020/07/30 11:15:09 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:15:09 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/07/30 11:15:09 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:15:09 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 11:15:09 [TRACE] <root>: eval: *terraform.EvalValidateProvider
2020/07/30 11:15:09 [TRACE] buildProviderConfig for provider.bizfly: using explicit config only
2020/07/30 11:15:09 [TRACE] GRPCProvider: GetSchema
2020/07/30 11:15:09 [TRACE] GRPCProvider: PrepareProviderConfig
2020/07/30 11:15:09 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:15:09 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:15:09 [TRACE] [walkValidate] Exiting eval tree: provider.bizfly
2020/07/30 11:15:09 [TRACE] vertex "provider.bizfly": visit complete
2020/07/30 11:15:09 [TRACE] dag/walk: visiting "bizfly_instance.test"
2020/07/30 11:15:09 [TRACE] vertex "bizfly_instance.test": starting visit (*terraform.NodeValidatableResource)
2020/07/30 11:15:09 [TRACE] vertex "bizfly_instance.test": evaluating
2020/07/30 11:15:09 [TRACE] [walkValidate] Entering eval tree: bizfly_instance.test
2020/07/30 11:15:09 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:15:09 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 11:15:09 [TRACE] <root>: eval: *terraform.EvalValidateResource
2020/07/30 11:15:09 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/07/30 11:15:09 [TRACE] [walkValidate] Exiting eval tree: bizfly_instance.test
2020/07/30 11:15:09 [TRACE] vertex "bizfly_instance.test": visit complete
2020/07/30 11:15:09 [TRACE] dag/walk: visiting "provider.bizfly (close)"
2020/07/30 11:15:09 [TRACE] vertex "provider.bizfly (close)": starting visit (*terraform.graphNodeCloseProvider)
2020/07/30 11:15:09 [TRACE] vertex "provider.bizfly (close)": evaluating
2020/07/30 11:15:09 [TRACE] [walkValidate] Entering eval tree: provider.bizfly (close)
2020/07/30 11:15:09 [TRACE] <root>: eval: *terraform.EvalCloseProvider
2020/07/30 11:15:09 [TRACE] GRPCProvider: Close
2020/07/30 11:15:09 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2020/07/30 11:15:09 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2020/07/30 11:15:09 [TRACE] vertex "meta.count-boundary (EachMode fixup)": evaluating
2020/07/30 11:15:09 [TRACE] [walkValidate] Entering eval tree: meta.count-boundary (EachMode fixup)
2020/07/30 11:15:09 [TRACE] <root>: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2020/07/30 11:15:09 [TRACE] [walkValidate] Exiting eval tree: meta.count-boundary (EachMode fixup)
2020/07/30 11:15:09 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2020-07-30T11:15:09.109+0700 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2020-07-30T11:15:09.111+0700 [DEBUG] plugin: plugin process exited: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=51244
2020-07-30T11:15:09.111+0700 [DEBUG] plugin: plugin exited
2020/07/30 11:15:09 [TRACE] [walkValidate] Exiting eval tree: provider.bizfly (close)
2020/07/30 11:15:09 [TRACE] vertex "provider.bizfly (close)": visit complete
2020/07/30 11:15:09 [TRACE] dag/walk: visiting "root"
2020/07/30 11:15:09 [TRACE] vertex "root": starting visit (terraform.graphNodeRoot)
2020/07/30 11:15:09 [TRACE] vertex "root": visit complete
2020/07/30 11:15:09 [INFO] backend/local: apply calling Refresh
2020/07/30 11:15:09 [INFO] terraform: building graph: GraphTypeRefresh
2020/07/30 11:15:09 [TRACE] No managed resources in state during refresh; skipping managed resource transformer
2020/07/30 11:15:09 [TRACE] Executing graph transform *terraform.ConfigTransformer
2020/07/30 11:15:09 [TRACE] ConfigTransformer: Starting for path: 
2020/07/30 11:15:09 [TRACE] Completed graph transform *terraform.ConfigTransformer (no changes)
2020/07/30 11:15:09 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2020/07/30 11:15:09 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2020/07/30 11:15:09 [TRACE] Executing graph transform *terraform.StateTransformer
2020/07/30 11:15:09 [TRACE] StateTransformer: state is empty, so nothing to do
2020/07/30 11:15:09 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2020/07/30 11:15:09 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/30 11:15:09 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/30 11:15:09 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2020/07/30 11:15:09 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2020/07/30 11:15:09 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2020/07/30 11:15:09 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:15:09 [TRACE] Executing graph transform *terraform.LocalTransformer
2020/07/30 11:15:09 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2020/07/30 11:15:09 [TRACE] Executing graph transform *terraform.OutputTransformer
2020/07/30 11:15:09 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2020/07/30 11:15:09 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2020/07/30 11:15:09 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2020/07/30 11:15:09 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2020/07/30 11:15:09 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2020/07/30 11:15:09 [TRACE] ProviderConfigTransformer: attaching to "provider.bizfly" provider configuration from main.tf:1,1-18
2020/07/30 11:15:09 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:15:09 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2020/07/30 11:15:09 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2020/07/30 11:15:09 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2020/07/30 11:15:09 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer (no changes)
2020/07/30 11:15:09 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2020/07/30 11:15:09 [DEBUG] pruning unused provider.bizfly
2020/07/30 11:15:09 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer with new graph:
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:15:09 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2020/07/30 11:15:09 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2020/07/30 11:15:09 [TRACE] Completed graph transform *terraform.graphTransformerMulti (no changes)
2020/07/30 11:15:09 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2020/07/30 11:15:09 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2020/07/30 11:15:09 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/30 11:15:09 [DEBUG] ReferenceTransformer: "var.login" references: []
2020/07/30 11:15:09 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/30 11:15:09 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2020/07/30 11:15:09 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2020/07/30 11:15:09 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/30 11:15:09 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/30 11:15:09 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2020/07/30 11:15:09 [TRACE] Completed graph transform *terraform.CloseProviderTransformer (no changes)
2020/07/30 11:15:09 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/30 11:15:09 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/07/30 11:15:09 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2020/07/30 11:15:09 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer (no changes)
2020/07/30 11:15:09 [DEBUG] Starting graph walk: walkRefresh
2020/07/30 11:15:09 [TRACE] dag/walk: updating graph
2020/07/30 11:15:09 [TRACE] dag/walk: added new vertex: "var.login"
2020/07/30 11:15:09 [TRACE] dag/walk: visiting "var.login"
2020/07/30 11:15:09 [TRACE] vertex "var.login": starting visit (*terraform.NodeRootVariable)
2020/07/30 11:15:09 [TRACE] vertex "var.login": evaluating
2020/07/30 11:15:09 [TRACE] [walkRefresh] Entering eval tree: var.login
2020/07/30 11:15:09 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:15:09 [TRACE] [walkRefresh] Exiting eval tree: var.login
2020/07/30 11:15:09 [TRACE] vertex "var.login": visit complete
2020/07/30 11:15:09 [INFO] backend/local: apply calling Plan
2020/07/30 11:15:09 [INFO] terraform: building graph: GraphTypePlan
2020/07/30 11:15:09 [TRACE] Executing graph transform *terraform.ConfigTransformer
2020/07/30 11:15:09 [TRACE] ConfigTransformer: Starting for path: 
2020/07/30 11:15:09 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
  ------
2020/07/30 11:15:09 [TRACE] Executing graph transform *terraform.LocalTransformer
2020/07/30 11:15:09 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2020/07/30 11:15:09 [TRACE] Executing graph transform *terraform.OutputTransformer
2020/07/30 11:15:09 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2020/07/30 11:15:09 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2020/07/30 11:15:09 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2020/07/30 11:15:09 [TRACE] Executing graph transform *terraform.StateTransformer
2020/07/30 11:15:09 [TRACE] StateTransformer: state is empty, so nothing to do
2020/07/30 11:15:09 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2020/07/30 11:15:09 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2020/07/30 11:15:09 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2020/07/30 11:15:09 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2020/07/30 11:15:09 [TRACE] AttachResourceConfigTransformer: attaching to "bizfly_instance.test" (*terraform.NodePlannableResource) config from main.tf:7,1-34
2020/07/30 11:15:09 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2020/07/30 11:15:09 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/30 11:15:09 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/30 11:15:09 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2020/07/30 11:15:09 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:15:09 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2020/07/30 11:15:09 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2020/07/30 11:15:09 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2020/07/30 11:15:09 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2020/07/30 11:15:09 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2020/07/30 11:15:09 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2020/07/30 11:15:09 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2020/07/30 11:15:09 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2020/07/30 11:15:09 [TRACE] ProviderConfigTransformer: attaching to "provider.bizfly" provider configuration from main.tf:1,1-18
2020/07/30 11:15:09 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:15:09 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2020/07/30 11:15:09 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2020/07/30 11:15:09 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2020/07/30 11:15:09 [TRACE] ProviderTransformer: bizfly_instance.test is provided by provider.bizfly or inherited equivalent
2020/07/30 11:15:09 [TRACE] ProviderTransformer: exact match for provider.bizfly serving bizfly_instance.test
2020/07/30 11:15:09 [DEBUG] ProviderTransformer: "bizfly_instance.test" (*terraform.NodePlannableResource) needs provider.bizfly
2020/07/30 11:15:09 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:15:09 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2020/07/30 11:15:09 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2020/07/30 11:15:09 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2020/07/30 11:15:09 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2020/07/30 11:15:09 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:15:09 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2020/07/30 11:15:09 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2020/07/30 11:15:09 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2020/07/30 11:15:09 [TRACE] AttachSchemaTransformer: attaching resource schema to bizfly_instance.test
2020/07/30 11:15:09 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.bizfly
2020/07/30 11:15:09 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2020/07/30 11:15:09 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/30 11:15:09 [DEBUG] ReferenceTransformer: "bizfly_instance.test" references: []
2020/07/30 11:15:09 [DEBUG] ReferenceTransformer: "var.login" references: []
2020/07/30 11:15:09 [DEBUG] ReferenceTransformer: "provider.bizfly" references: []
2020/07/30 11:15:09 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/30 11:15:09 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2020/07/30 11:15:09 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:15:09 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/30 11:15:09 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/30 11:15:09 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2020/07/30 11:15:09 [TRACE] ForcedCBDTransformer: "bizfly_instance.test" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2020/07/30 11:15:09 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2020/07/30 11:15:09 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2020/07/30 11:15:09 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
    bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:15:09 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2020/07/30 11:15:09 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer (no changes)
2020/07/30 11:15:09 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/30 11:15:09 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
    bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.bizfly (close) - *terraform.graphNodeCloseProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:15:09 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2020/07/30 11:15:09 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodePlannableResource
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
    bizfly_instance.test - *terraform.NodePlannableResource
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.bizfly (close) - *terraform.graphNodeCloseProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:15:09 [DEBUG] Starting graph walk: walkPlan
2020/07/30 11:15:09 [TRACE] dag/walk: updating graph
2020/07/30 11:15:09 [TRACE] dag/walk: added new vertex: "root"
2020/07/30 11:15:09 [TRACE] dag/walk: added new vertex: "bizfly_instance.test"
2020/07/30 11:15:09 [TRACE] dag/walk: added new vertex: "var.login"
2020/07/30 11:15:09 [TRACE] dag/walk: added new vertex: "provider.bizfly"
2020/07/30 11:15:09 [TRACE] dag/walk: added new vertex: "meta.count-boundary (EachMode fixup)"
2020/07/30 11:15:09 [TRACE] dag/walk: added new vertex: "provider.bizfly (close)"
2020/07/30 11:15:09 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "var.login"
2020/07/30 11:15:09 [TRACE] dag/walk: added edge: "provider.bizfly (close)" waiting on "bizfly_instance.test"
2020/07/30 11:15:09 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (EachMode fixup)"
2020/07/30 11:15:09 [TRACE] dag/walk: added edge: "root" waiting on "provider.bizfly (close)"
2020/07/30 11:15:09 [TRACE] dag/walk: added edge: "bizfly_instance.test" waiting on "provider.bizfly"
2020/07/30 11:15:09 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "bizfly_instance.test"
2020/07/30 11:15:09 [TRACE] dag/walk: dependencies changed for "provider.bizfly (close)", sending new deps
2020/07/30 11:15:09 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2020/07/30 11:15:09 [TRACE] dag/walk: dependencies changed for "bizfly_instance.test", sending new deps
2020/07/30 11:15:09 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (EachMode fixup)", sending new deps
2020/07/30 11:15:09 [TRACE] dag/walk: visiting "var.login"
2020/07/30 11:15:09 [TRACE] vertex "var.login": starting visit (*terraform.NodeRootVariable)
2020/07/30 11:15:09 [TRACE] vertex "var.login": evaluating
2020/07/30 11:15:09 [TRACE] dag/walk: visiting "provider.bizfly"
2020/07/30 11:15:09 [TRACE] [walkPlan] Entering eval tree: var.login
2020/07/30 11:15:09 [TRACE] vertex "provider.bizfly": starting visit (*terraform.NodeApplyableProvider)
2020/07/30 11:15:09 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:15:09 [TRACE] [walkPlan] Exiting eval tree: var.login
2020/07/30 11:15:09 [TRACE] vertex "var.login": visit complete
2020/07/30 11:15:09 [TRACE] vertex "provider.bizfly": evaluating
2020/07/30 11:15:09 [TRACE] [walkPlan] Entering eval tree: provider.bizfly
2020/07/30 11:15:09 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:15:09 [TRACE] <root>: eval: *terraform.EvalInitProvider
2020-07-30T11:15:09.113+0700 [INFO]  plugin: configuring client automatic mTLS
2020-07-30T11:15:09.138+0700 [DEBUG] plugin: starting plugin: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly args=[/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly]
2020-07-30T11:15:09.141+0700 [DEBUG] plugin: plugin started: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=51245
2020-07-30T11:15:09.141+0700 [DEBUG] plugin: waiting for RPC address: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly
2020-07-30T11:15:09.159+0700 [INFO]  plugin.terraform-provider-bizfly: configuring server automatic mTLS: timestamp=2020-07-30T11:15:09.159+0700
2020-07-30T11:15:09.185+0700 [DEBUG] plugin: using plugin: version=5
2020-07-30T11:15:09.185+0700 [DEBUG] plugin.terraform-provider-bizfly: plugin address: address=/var/folders/0r/zdwrk7wn22vd_g32twvblrpc0000gn/T/plugin891770264 network=unix timestamp=2020-07-30T11:15:09.185+0700
2020/07/30 11:15:09 [TRACE] BuiltinEvalContext: Initialized "bizfly" provider for provider.bizfly
2020/07/30 11:15:09 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:15:09 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:15:09 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/07/30 11:15:09 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:15:09 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 11:15:09 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020-07-30T11:15:09.237+0700 [TRACE] plugin.stdio: waiting for stdio data
2020/07/30 11:15:09 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:15:09 [TRACE] <root>: eval: *terraform.EvalConfigProvider
2020/07/30 11:15:09 [TRACE] buildProviderConfig for provider.bizfly: using explicit config only
2020/07/30 11:15:09 [TRACE] GRPCProvider: GetSchema
2020/07/30 11:15:09 [TRACE] GRPCProvider: Configure
2020/07/30 11:15:10 [TRACE] [walkPlan] Exiting eval tree: provider.bizfly
2020/07/30 11:15:10 [TRACE] vertex "provider.bizfly": visit complete
2020/07/30 11:15:10 [TRACE] dag/walk: visiting "bizfly_instance.test"
2020/07/30 11:15:10 [TRACE] vertex "bizfly_instance.test": starting visit (*terraform.NodePlannableResource)
2020/07/30 11:15:10 [TRACE] vertex "bizfly_instance.test": evaluating
2020/07/30 11:15:10 [TRACE] [walkPlan] Entering eval tree: bizfly_instance.test
2020/07/30 11:15:10 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/07/30 11:15:10 [TRACE] [walkPlan] Exiting eval tree: bizfly_instance.test
2020/07/30 11:15:10 [TRACE] vertex "bizfly_instance.test": expanding dynamic subgraph
2020/07/30 11:15:10 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/07/30 11:15:10 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResourceInstance
  ------
2020/07/30 11:15:10 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/07/30 11:15:10 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/07/30 11:15:10 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/30 11:15:10 [DEBUG] Resource instance state not found for node "bizfly_instance.test", instance bizfly_instance.test
2020/07/30 11:15:10 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/30 11:15:10 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/30 11:15:10 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/30 11:15:10 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/30 11:15:10 [DEBUG] ReferenceTransformer: "bizfly_instance.test" references: []
2020/07/30 11:15:10 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/30 11:15:10 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/30 11:15:10 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/07/30 11:15:10 [TRACE] vertex "bizfly_instance.test": entering dynamic subgraph
2020/07/30 11:15:10 [TRACE] dag/walk: updating graph
2020/07/30 11:15:10 [TRACE] dag/walk: added new vertex: "bizfly_instance.test"
2020/07/30 11:15:10 [TRACE] dag/walk: visiting "bizfly_instance.test"
2020/07/30 11:15:10 [TRACE] vertex "bizfly_instance.test": starting visit (*terraform.NodePlannableResourceInstance)
2020/07/30 11:15:10 [TRACE] vertex "bizfly_instance.test": evaluating
2020/07/30 11:15:10 [TRACE] [walkPlan] Entering eval tree: bizfly_instance.test
2020/07/30 11:15:10 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:15:10 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 11:15:10 [TRACE] <root>: eval: *terraform.EvalReadState
2020/07/30 11:15:10 [TRACE] EvalReadState: reading state for bizfly_instance.test
2020/07/30 11:15:10 [TRACE] EvalReadState: no state present for bizfly_instance.test
2020/07/30 11:15:10 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2020/07/30 11:15:10 [TRACE] <root>: eval: *terraform.EvalDiff
2020/07/30 11:15:10 [TRACE] Re-validating config for "bizfly_instance.test"
2020/07/30 11:15:10 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/07/30 11:15:10 [TRACE] GRPCProvider: PlanResourceChange
2020/07/30 11:15:10 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2020/07/30 11:15:10 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/07/30 11:15:10 [TRACE] EvalWriteState: writing current state object for bizfly_instance.test
2020/07/30 11:15:10 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/07/30 11:15:10 [TRACE] EvalWriteDiff: recorded Create change for bizfly_instance.test
2020/07/30 11:15:10 [TRACE] [walkPlan] Exiting eval tree: bizfly_instance.test
2020/07/30 11:15:10 [TRACE] vertex "bizfly_instance.test": visit complete
2020/07/30 11:15:10 [TRACE] vertex "bizfly_instance.test": dynamic subgraph completed successfully
2020/07/30 11:15:10 [TRACE] vertex "bizfly_instance.test": visit complete
2020/07/30 11:15:10 [TRACE] dag/walk: visiting "provider.bizfly (close)"
2020/07/30 11:15:10 [TRACE] vertex "provider.bizfly (close)": starting visit (*terraform.graphNodeCloseProvider)
2020/07/30 11:15:10 [TRACE] vertex "provider.bizfly (close)": evaluating
2020/07/30 11:15:10 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2020/07/30 11:15:10 [TRACE] [walkPlan] Entering eval tree: provider.bizfly (close)
2020/07/30 11:15:10 [TRACE] <root>: eval: *terraform.EvalCloseProvider
2020/07/30 11:15:10 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2020/07/30 11:15:10 [TRACE] GRPCProvider: Close
2020/07/30 11:15:10 [TRACE] vertex "meta.count-boundary (EachMode fixup)": evaluating
2020/07/30 11:15:10 [TRACE] [walkPlan] Entering eval tree: meta.count-boundary (EachMode fixup)
2020/07/30 11:15:10 [TRACE] <root>: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2020/07/30 11:15:10 [TRACE] [walkPlan] Exiting eval tree: meta.count-boundary (EachMode fixup)
2020/07/30 11:15:10 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2020-07-30T11:15:10.644+0700 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2020-07-30T11:15:10.647+0700 [DEBUG] plugin: plugin process exited: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=51245
2020-07-30T11:15:10.647+0700 [DEBUG] plugin: plugin exited
2020/07/30 11:15:10 [TRACE] [walkPlan] Exiting eval tree: provider.bizfly (close)
2020/07/30 11:15:10 [TRACE] vertex "provider.bizfly (close)": visit complete
2020/07/30 11:15:10 [TRACE] dag/walk: visiting "root"
2020/07/30 11:15:10 [TRACE] vertex "root": starting visit (terraform.graphNodeRoot)
2020/07/30 11:15:10 [TRACE] vertex "root": visit complete
2020/07/30 11:15:10 [DEBUG] command: asking for input: "Do you want to perform these actions?"
2020/07/30 11:15:13 [INFO] backend/local: apply calling Apply
2020/07/30 11:15:13 [INFO] terraform: building graph: GraphTypeApply
2020/07/30 11:15:13 [TRACE] Executing graph transform *terraform.ConfigTransformer
2020/07/30 11:15:13 [TRACE] ConfigTransformer: Starting for path: 
2020/07/30 11:15:13 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
  ------
2020/07/30 11:15:13 [TRACE] Executing graph transform *terraform.DiffTransformer
2020/07/30 11:15:13 [TRACE] DiffTransformer starting
2020/07/30 11:15:13 [TRACE] DiffTransformer: found Create change for bizfly_instance.test 
2020/07/30 11:15:13 [TRACE] DiffTransformer: bizfly_instance.test will be represented by bizfly_instance.test
2020/07/30 11:15:13 [TRACE] DiffTransformer complete
2020/07/30 11:15:13 [TRACE] Completed graph transform *terraform.DiffTransformer with new graph:
  bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
  ------
2020/07/30 11:15:13 [TRACE] Executing graph transform *terraform.OrphanResourceTransformer
2020/07/30 11:15:13 [TRACE] Completed graph transform *terraform.OrphanResourceTransformer (no changes)
2020/07/30 11:15:13 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2020/07/30 11:15:13 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2020/07/30 11:15:13 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2020/07/30 11:15:13 [TRACE] AttachResourceConfigTransformer: attaching to "bizfly_instance.test (prepare state)" (*terraform.NodeApplyableResource) config from main.tf:7,1-34
2020/07/30 11:15:13 [TRACE] AttachResourceConfigTransformer: attaching to "bizfly_instance.test" (*terraform.NodeApplyableResourceInstance) config from main.tf:7,1-34
2020/07/30 11:15:13 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2020/07/30 11:15:13 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/30 11:15:13 [DEBUG] Resource state not found for node "bizfly_instance.test", instance bizfly_instance.test
2020/07/30 11:15:13 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/30 11:15:13 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2020/07/30 11:15:13 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2020/07/30 11:15:13 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2020/07/30 11:15:13 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2020/07/30 11:15:13 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2020/07/30 11:15:13 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
  bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:15:13 [TRACE] Executing graph transform *terraform.LocalTransformer
2020/07/30 11:15:13 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2020/07/30 11:15:13 [TRACE] Executing graph transform *terraform.OutputTransformer
2020/07/30 11:15:13 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2020/07/30 11:15:13 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2020/07/30 11:15:13 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2020/07/30 11:15:13 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2020/07/30 11:15:13 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2020/07/30 11:15:13 [TRACE] ProviderConfigTransformer: attaching to "provider.bizfly" provider configuration from main.tf:1,1-18
2020/07/30 11:15:13 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:15:13 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2020/07/30 11:15:13 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2020/07/30 11:15:13 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2020/07/30 11:15:13 [TRACE] ProviderTransformer: bizfly_instance.test (prepare state) is provided by provider.bizfly or inherited equivalent
2020/07/30 11:15:13 [TRACE] ProviderTransformer: bizfly_instance.test is provided by provider.bizfly or inherited equivalent
2020/07/30 11:15:13 [TRACE] ProviderTransformer: exact match for provider.bizfly serving bizfly_instance.test (prepare state)
2020/07/30 11:15:13 [DEBUG] ProviderTransformer: "bizfly_instance.test (prepare state)" (*terraform.NodeApplyableResource) needs provider.bizfly
2020/07/30 11:15:13 [TRACE] ProviderTransformer: exact match for provider.bizfly serving bizfly_instance.test
2020/07/30 11:15:13 [DEBUG] ProviderTransformer: "bizfly_instance.test" (*terraform.NodeApplyableResourceInstance) needs provider.bizfly
2020/07/30 11:15:13 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:15:13 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2020/07/30 11:15:13 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2020/07/30 11:15:13 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2020/07/30 11:15:13 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2020/07/30 11:15:13 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:15:13 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2020/07/30 11:15:13 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2020/07/30 11:15:13 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2020/07/30 11:15:13 [TRACE] AttachSchemaTransformer: attaching resource schema to bizfly_instance.test (prepare state)
2020/07/30 11:15:13 [TRACE] AttachSchemaTransformer: attaching resource schema to bizfly_instance.test
2020/07/30 11:15:13 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.bizfly
2020/07/30 11:15:13 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2020/07/30 11:15:13 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/30 11:15:13 [DEBUG] ReferenceTransformer: "bizfly_instance.test (prepare state)" references: []
2020/07/30 11:15:13 [DEBUG] ReferenceTransformer: "bizfly_instance.test" references: []
2020/07/30 11:15:13 [DEBUG] ReferenceTransformer: "var.login" references: []
2020/07/30 11:15:13 [DEBUG] ReferenceTransformer: "provider.bizfly" references: []
2020/07/30 11:15:13 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/30 11:15:13 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2020/07/30 11:15:13 [TRACE] AttachDependenciesTransformer: bizfly_instance.test depends on []
2020/07/30 11:15:13 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2020/07/30 11:15:13 [TRACE] Executing graph transform *terraform.DestroyEdgeTransformer
2020/07/30 11:15:13 [TRACE] Completed graph transform *terraform.DestroyEdgeTransformer (no changes)
2020/07/30 11:15:13 [TRACE] Executing graph transform *terraform.CBDEdgeTransformer
2020/07/30 11:15:13 [TRACE] Completed graph transform *terraform.CBDEdgeTransformer (no changes)
2020/07/30 11:15:13 [TRACE] Executing graph transform *terraform.PruneUnusedValuesTransformer
2020/07/30 11:15:13 [TRACE] Completed graph transform *terraform.PruneUnusedValuesTransformer (no changes)
2020/07/30 11:15:13 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2020/07/30 11:15:13 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:15:13 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/30 11:15:13 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/30 11:15:13 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2020/07/30 11:15:13 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
    bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:15:13 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2020/07/30 11:15:13 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer (no changes)
2020/07/30 11:15:13 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/30 11:15:13 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
  bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
    bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.bizfly (close) - *terraform.graphNodeCloseProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:15:13 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2020/07/30 11:15:13 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
    bizfly_instance.test - *terraform.NodeApplyableResourceInstance
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.bizfly (close) - *terraform.graphNodeCloseProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:15:13 [DEBUG] Starting graph walk: walkApply
2020/07/30 11:15:13 [TRACE] dag/walk: updating graph
2020/07/30 11:15:13 [TRACE] dag/walk: added new vertex: "bizfly_instance.test"
2020/07/30 11:15:13 [TRACE] dag/walk: added new vertex: "var.login"
2020/07/30 11:15:13 [TRACE] dag/walk: added new vertex: "provider.bizfly"
2020/07/30 11:15:13 [TRACE] dag/walk: added new vertex: "meta.count-boundary (EachMode fixup)"
2020/07/30 11:15:13 [TRACE] dag/walk: added new vertex: "provider.bizfly (close)"
2020/07/30 11:15:13 [TRACE] dag/walk: added new vertex: "root"
2020/07/30 11:15:13 [TRACE] dag/walk: added new vertex: "bizfly_instance.test (prepare state)"
2020/07/30 11:15:13 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "bizfly_instance.test"
2020/07/30 11:15:13 [TRACE] dag/walk: added edge: "root" waiting on "provider.bizfly (close)"
2020/07/30 11:15:13 [TRACE] dag/walk: added edge: "bizfly_instance.test" waiting on "bizfly_instance.test (prepare state)"
2020/07/30 11:15:13 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "var.login"
2020/07/30 11:15:13 [TRACE] dag/walk: added edge: "provider.bizfly (close)" waiting on "bizfly_instance.test"
2020/07/30 11:15:13 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (EachMode fixup)"
2020/07/30 11:15:13 [TRACE] dag/walk: added edge: "bizfly_instance.test (prepare state)" waiting on "provider.bizfly"
2020/07/30 11:15:13 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2020/07/30 11:15:13 [TRACE] dag/walk: dependencies changed for "bizfly_instance.test", sending new deps
2020/07/30 11:15:13 [TRACE] dag/walk: dependencies changed for "provider.bizfly (close)", sending new deps
2020/07/30 11:15:13 [TRACE] dag/walk: dependencies changed for "bizfly_instance.test (prepare state)", sending new deps
2020/07/30 11:15:13 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (EachMode fixup)", sending new deps
2020/07/30 11:15:13 [TRACE] dag/walk: visiting "provider.bizfly"
2020/07/30 11:15:13 [TRACE] dag/walk: visiting "var.login"
2020/07/30 11:15:13 [TRACE] vertex "var.login": starting visit (*terraform.NodeRootVariable)
2020/07/30 11:15:13 [TRACE] vertex "provider.bizfly": starting visit (*terraform.NodeApplyableProvider)
2020/07/30 11:15:13 [TRACE] vertex "var.login": evaluating
2020/07/30 11:15:13 [TRACE] vertex "provider.bizfly": evaluating
2020/07/30 11:15:13 [TRACE] [walkApply] Entering eval tree: var.login
2020/07/30 11:15:13 [TRACE] [walkApply] Entering eval tree: provider.bizfly
2020/07/30 11:15:13 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:15:13 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:15:13 [TRACE] [walkApply] Exiting eval tree: var.login
2020/07/30 11:15:13 [TRACE] <root>: eval: *terraform.EvalInitProvider
2020/07/30 11:15:13 [TRACE] vertex "var.login": visit complete
2020-07-30T11:15:13.296+0700 [INFO]  plugin: configuring client automatic mTLS
2020-07-30T11:15:13.325+0700 [DEBUG] plugin: starting plugin: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly args=[/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly]
2020-07-30T11:15:13.328+0700 [DEBUG] plugin: plugin started: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=51259
2020-07-30T11:15:13.329+0700 [DEBUG] plugin: waiting for RPC address: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly
2020-07-30T11:15:13.352+0700 [INFO]  plugin.terraform-provider-bizfly: configuring server automatic mTLS: timestamp=2020-07-30T11:15:13.352+0700
2020-07-30T11:15:13.379+0700 [DEBUG] plugin.terraform-provider-bizfly: plugin address: network=unix address=/var/folders/0r/zdwrk7wn22vd_g32twvblrpc0000gn/T/plugin888876414 timestamp=2020-07-30T11:15:13.379+0700
2020-07-30T11:15:13.379+0700 [DEBUG] plugin: using plugin: version=5
2020/07/30 11:15:13 [TRACE] BuiltinEvalContext: Initialized "bizfly" provider for provider.bizfly
2020/07/30 11:15:13 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:15:13 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:15:13 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/07/30 11:15:13 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:15:13 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 11:15:13 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/07/30 11:15:13 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:15:13 [TRACE] <root>: eval: *terraform.EvalConfigProvider
2020/07/30 11:15:13 [TRACE] buildProviderConfig for provider.bizfly: using explicit config only
2020/07/30 11:15:13 [TRACE] GRPCProvider: GetSchema
2020-07-30T11:15:13.432+0700 [TRACE] plugin.stdio: waiting for stdio data
2020/07/30 11:15:13 [TRACE] GRPCProvider: Configure
2020/07/30 11:15:14 [TRACE] [walkApply] Exiting eval tree: provider.bizfly
2020/07/30 11:15:14 [TRACE] vertex "provider.bizfly": visit complete
2020/07/30 11:15:14 [TRACE] dag/walk: visiting "bizfly_instance.test (prepare state)"
2020/07/30 11:15:14 [TRACE] vertex "bizfly_instance.test (prepare state)": starting visit (*terraform.NodeApplyableResource)
2020/07/30 11:15:14 [TRACE] vertex "bizfly_instance.test (prepare state)": evaluating
2020/07/30 11:15:14 [TRACE] [walkApply] Entering eval tree: bizfly_instance.test (prepare state)
2020/07/30 11:15:14 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/07/30 11:15:14 [TRACE] [walkApply] Exiting eval tree: bizfly_instance.test (prepare state)
2020/07/30 11:15:14 [TRACE] vertex "bizfly_instance.test (prepare state)": visit complete
2020/07/30 11:15:14 [TRACE] dag/walk: visiting "bizfly_instance.test"
2020/07/30 11:15:14 [TRACE] vertex "bizfly_instance.test": starting visit (*terraform.NodeApplyableResourceInstance)
2020/07/30 11:15:14 [TRACE] vertex "bizfly_instance.test": evaluating
2020/07/30 11:15:14 [TRACE] [walkApply] Entering eval tree: bizfly_instance.test
2020/07/30 11:15:14 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:15:14 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 11:15:14 [TRACE] <root>: eval: *terraform.EvalReadDiff
2020/07/30 11:15:14 [TRACE] EvalReadDiff: Read Create change from plan for bizfly_instance.test
2020/07/30 11:15:14 [TRACE] <root>: eval: *terraform.EvalIf
2020/07/30 11:15:14 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:15:14 [TRACE] <root>: eval: *terraform.EvalIf
2020/07/30 11:15:14 [TRACE] <root>: eval: *terraform.EvalReadState
2020/07/30 11:15:14 [TRACE] EvalReadState: reading state for bizfly_instance.test
2020/07/30 11:15:14 [TRACE] EvalReadState: no state present for bizfly_instance.test
2020/07/30 11:15:14 [TRACE] <root>: eval: *terraform.EvalReadDiff
2020/07/30 11:15:14 [TRACE] EvalReadDiff: Read Create change from plan for bizfly_instance.test
2020/07/30 11:15:14 [TRACE] <root>: eval: *terraform.EvalDiff
2020/07/30 11:15:14 [TRACE] Re-validating config for "bizfly_instance.test"
2020/07/30 11:15:14 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/07/30 11:15:14 [TRACE] GRPCProvider: PlanResourceChange
2020/07/30 11:15:14 [TRACE] <root>: eval: *terraform.EvalCheckPlannedChange
2020/07/30 11:15:14 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2020/07/30 11:15:14 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 11:15:14 [TRACE] <root>: eval: *terraform.EvalReadState
2020/07/30 11:15:14 [TRACE] EvalReadState: reading state for bizfly_instance.test
2020/07/30 11:15:14 [TRACE] EvalReadState: no state present for bizfly_instance.test
2020/07/30 11:15:14 [TRACE] <root>: eval: *terraform.EvalReduceDiff
2020/07/30 11:15:14 [TRACE] <root>: eval: *terraform.EvalIf
2020/07/30 11:15:14 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:15:14 [TRACE] <root>: eval: *terraform.EvalApplyPre
2020/07/30 11:15:14 [TRACE] <root>: eval: *terraform.EvalApply
2020/07/30 11:15:14 [DEBUG] bizfly_instance.test: applying the planned Create change
2020/07/30 11:15:14 [TRACE] GRPCProvider: ApplyResourceChange
2020-07-30T11:15:14.687+0700 [TRACE] plugin.stdio: received data: channel=STDOUT len=411
2020-07-30T11:15:14.687+0700 [TRACE] plugin.stdio: waiting for stdio data
2020-07-30T11:15:14.689+0700 [DEBUG] plugin.terraform-provider-bizfly: panic: interface conversion: interface {} is map[string]interface {}, not string
2020-07-30T11:15:14.690+0700 [DEBUG] plugin.terraform-provider-bizfly: 
2020-07-30T11:15:14.690+0700 [DEBUG] plugin.terraform-provider-bizfly: goroutine 83 [running]:
2020-07-30T11:15:14.690+0700 [DEBUG] plugin.terraform-provider-bizfly: terraform-provider-bizfly/provider.resouceInstanceCreate(0xc0000feee0, 0x1aeb820, 0xc000744780, 0x2, 0x25cf840)
2020-07-30T11:15:14.690+0700 [DEBUG] plugin.terraform-provider-bizfly: 	/Users/hung/go/src/terraform-provider-bizfly/provider/resource_instance.go:145 +0x349
2020-07-30T11:15:14.690+0700 [DEBUG] plugin.terraform-provider-bizfly: github.com/hashicorp/terraform-plugin-sdk/helper/schema.(*Resource).Apply(0xc0004f8240, 0xc000737310, 0xc0003d4d00, 0x1aeb820, 0xc000744780, 0x1a9e901, 0xc0004e69a8, 0xc000224de0)
2020-07-30T11:15:14.690+0700 [DEBUG] plugin.terraform-provider-bizfly: 	/Users/hung/go/pkg/mod/github.com/hashicorp/terraform-plugin-sdk@v1.15.0/helper/schema/resource.go:310 +0x365
2020-07-30T11:15:14.690+0700 [DEBUG] plugin.terraform-provider-bizfly: github.com/hashicorp/terraform-plugin-sdk/helper/schema.(*Provider).Apply(0xc000134980, 0xc00059da10, 0xc000737310, 0xc0003d4d00, 0xc0001c1708, 0xc0000c4798, 0x1aa0540)
2020-07-30T11:15:14.690+0700 [DEBUG] plugin.terraform-provider-bizfly: 	/Users/hung/go/pkg/mod/github.com/hashicorp/terraform-plugin-sdk@v1.15.0/helper/schema/provider.go:294 +0x99
2020-07-30T11:15:14.690+0700 [DEBUG] plugin.terraform-provider-bizfly: github.com/hashicorp/terraform-plugin-sdk/internal/helper/plugin.(*GRPCProviderServer).ApplyResourceChange(0xc0000c4c28, 0x1e83940, 0xc0003f5380, 0xc0000fe5b0, 0xc0000c4c28, 0xc0003f5380, 0xc000214b78)
2020-07-30T11:15:14.690+0700 [DEBUG] plugin.terraform-provider-bizfly: 	/Users/hung/go/pkg/mod/github.com/hashicorp/terraform-plugin-sdk@v1.15.0/internal/helper/plugin/grpc_provider.go:885 +0x8b4
2020-07-30T11:15:14.690+0700 [DEBUG] plugin.terraform-provider-bizfly: github.com/hashicorp/terraform-plugin-sdk/internal/tfplugin5._Provider_ApplyResourceChange_Handler(0x1bb14c0, 0xc0000c4c28, 0x1e83940, 0xc0003f5380, 0xc000506de0, 0x0, 0x1e83940, 0xc0003f5380, 0xc000290780, 0x1ce)
2020-07-30T11:15:14.690+0700 [DEBUG] plugin.terraform-provider-bizfly: 	/Users/hung/go/pkg/mod/github.com/hashicorp/terraform-plugin-sdk@v1.15.0/internal/tfplugin5/tfplugin5.pb.go:3305 +0x217
2020-07-30T11:15:14.690+0700 [DEBUG] plugin.terraform-provider-bizfly: google.golang.org/grpc.(*Server).processUnaryRPC(0xc000682300, 0x1e8e1e0, 0xc000510780, 0xc000140000, 0xc0000ae7e0, 0x2595940, 0x0, 0x0, 0x0)
2020-07-30T11:15:14.690+0700 [DEBUG] plugin.terraform-provider-bizfly: 	/Users/hung/go/pkg/mod/google.golang.org/grpc@v1.27.1/server.go:1024 +0x501
2020-07-30T11:15:14.690+0700 [DEBUG] plugin.terraform-provider-bizfly: google.golang.org/grpc.(*Server).handleStream(0xc000682300, 0x1e8e1e0, 0xc000510780, 0xc000140000, 0x0)
2020-07-30T11:15:14.690+0700 [DEBUG] plugin.terraform-provider-bizfly: 	/Users/hung/go/pkg/mod/google.golang.org/grpc@v1.27.1/server.go:1313 +0xd3d
2020-07-30T11:15:14.690+0700 [DEBUG] plugin.terraform-provider-bizfly: google.golang.org/grpc.(*Server).serveStreams.func1.1(0xc0000b44a0, 0xc000682300, 0x1e8e1e0, 0xc000510780, 0xc000140000)
2020-07-30T11:15:14.690+0700 [DEBUG] plugin.terraform-provider-bizfly: 	/Users/hung/go/pkg/mod/google.golang.org/grpc@v1.27.1/server.go:722 +0xa1
2020-07-30T11:15:14.690+0700 [DEBUG] plugin.terraform-provider-bizfly: created by google.golang.org/grpc.(*Server).serveStreams.func1
2020-07-30T11:15:14.690+0700 [DEBUG] plugin.terraform-provider-bizfly: 	/Users/hung/go/pkg/mod/google.golang.org/grpc@v1.27.1/server.go:720 +0xa1
2020-07-30T11:15:14.695+0700 [DEBUG] plugin: plugin process exited: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=51259 error="exit status 2"
2020-07-30T11:15:14.695+0700 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2020/07/30 11:15:14 [DEBUG] bizfly_instance.test: apply errored, but we're indicating that via the Error pointer rather than returning it: rpc error: code = Unavailable desc = transport is closing
2020/07/30 11:15:14 [TRACE] <root>: eval: *terraform.EvalMaybeTainted
2020/07/30 11:15:14 [TRACE] EvalMaybeTainted: bizfly_instance.test encountered an error during creation, so it is now marked as tainted
2020/07/30 11:15:14 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/07/30 11:15:14 [TRACE] EvalWriteState: removing state object for bizfly_instance.test
2020/07/30 11:15:14 [TRACE] <root>: eval: *terraform.EvalApplyProvisioners
2020/07/30 11:15:14 [TRACE] EvalApplyProvisioners: bizfly_instance.test has no state, so skipping provisioners
2020/07/30 11:15:14 [TRACE] <root>: eval: *terraform.EvalMaybeTainted
2020/07/30 11:15:14 [TRACE] EvalMaybeTainted: bizfly_instance.test encountered an error during creation, so it is now marked as tainted
2020/07/30 11:15:14 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/07/30 11:15:14 [TRACE] EvalWriteState: removing state object for bizfly_instance.test
2020/07/30 11:15:14 [TRACE] <root>: eval: *terraform.EvalIf
2020/07/30 11:15:14 [TRACE] <root>: eval: *terraform.EvalIf
2020/07/30 11:15:14 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/07/30 11:15:14 [TRACE] <root>: eval: *terraform.EvalApplyPost
2020/07/30 11:15:14 [ERROR] <root>: eval: *terraform.EvalApplyPost, err: rpc error: code = Unavailable desc = transport is closing
2020/07/30 11:15:14 [ERROR] <root>: eval: *terraform.EvalSequence, err: rpc error: code = Unavailable desc = transport is closing
2020/07/30 11:15:14 [TRACE] [walkApply] Exiting eval tree: bizfly_instance.test
2020/07/30 11:15:14 [TRACE] vertex "bizfly_instance.test": visit complete
2020/07/30 11:15:14 [TRACE] dag/walk: upstream of "provider.bizfly (close)" errored, so skipping
2020/07/30 11:15:14 [TRACE] dag/walk: upstream of "meta.count-boundary (EachMode fixup)" errored, so skipping
2020/07/30 11:15:14 [TRACE] dag/walk: upstream of "root" errored, so skipping
2020/07/30 11:15:14 [TRACE] statemgr.Filesystem: not making a backup, because the new snapshot is identical to the old
2020/07/30 11:15:14 [TRACE] statemgr.Filesystem: no state changes since last snapshot
2020/07/30 11:15:14 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2020/07/30 11:15:14 [TRACE] statemgr.Filesystem: removing lock metadata file .terraform.tfstate.lock.info
2020/07/30 11:15:14 [TRACE] statemgr.Filesystem: unlocking terraform.tfstate using fcntl flock
2020-07-30T11:15:14.704+0700 [DEBUG] plugin: plugin exited
2020/07/30 11:15:49 [INFO] Terraform version: 0.12.29  
2020/07/30 11:15:49 [INFO] Go runtime version: go1.13.14
2020/07/30 11:15:49 [INFO] CLI args: []string{"/usr/local/bin/terraform", "init"}
2020/07/30 11:15:49 [DEBUG] Attempting to open CLI config file: /Users/hung/.terraformrc
2020/07/30 11:15:49 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2020/07/30 11:15:49 [INFO] CLI command args: []string{"init"}
2020/07/30 11:15:49 [TRACE] Meta.Backend: no config given or present on disk, so returning nil config
2020/07/30 11:15:49 [TRACE] Meta.Backend: backend has not previously been initialized in this working directory
2020/07/30 11:15:49 [DEBUG] New state was assigned lineage "b530020d-03fd-c0e6-70cb-2c58ad206377"
2020/07/30 11:15:49 [TRACE] Meta.Backend: using default local state only (no backend configuration, and no existing initialized backend)
2020/07/30 11:15:49 [TRACE] Meta.Backend: instantiated backend of type <nil>
2020/07/30 11:15:49 [DEBUG] checking for provider in "."
2020/07/30 11:15:49 [WARN] found legacy provider "terraform-provider-bizfly"
2020/07/30 11:15:49 [DEBUG] checking for provider in "/usr/local/bin"
2020/07/30 11:15:49 [DEBUG] checking for provider in ".terraform/plugins/darwin_amd64"
2020/07/30 11:15:49 [DEBUG] found valid plugin: "bizfly", "0.0.0", "/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly"
2020/07/30 11:15:49 [DEBUG] checking for provisioner in "."
2020/07/30 11:15:49 [DEBUG] checking for provisioner in "/usr/local/bin"
2020/07/30 11:15:49 [DEBUG] checking for provisioner in ".terraform/plugins/darwin_amd64"
2020/07/30 11:15:49 [TRACE] Meta.Backend: backend <nil> does not support operations, so wrapping it in a local backend
2020/07/30 11:15:49 [TRACE] backend/local: state manager for workspace "default" will:
 - read initial snapshot from terraform.tfstate
 - write new snapshots to terraform.tfstate
 - create any backup at terraform.tfstate.backup
2020/07/30 11:15:49 [TRACE] statemgr.Filesystem: reading initial snapshot from terraform.tfstate
2020/07/30 11:15:49 [TRACE] statemgr.Filesystem: read snapshot with lineage "8e1934d5-1d8f-e9a8-58e8-6c54c3aa209a" serial 1
2020/07/30 11:15:49 [DEBUG] checking for provider in "."
2020/07/30 11:15:49 [WARN] found legacy provider "terraform-provider-bizfly"
2020/07/30 11:15:49 [DEBUG] checking for provider in "/usr/local/bin"
2020/07/30 11:15:49 [DEBUG] checking for provider in ".terraform/plugins/darwin_amd64"
2020/07/30 11:15:49 [DEBUG] found valid plugin: "bizfly", "0.0.0", "/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly"
2020/07/30 11:15:49 [DEBUG] plugin requirements: "bizfly"=""
2020/07/30 11:15:49 [DEBUG] checking for provider in "."
2020/07/30 11:15:49 [WARN] found legacy provider "terraform-provider-bizfly"
2020/07/30 11:15:49 [DEBUG] checking for provider in "/usr/local/bin"
2020/07/30 11:15:49 [DEBUG] checking for provider in ".terraform/plugins/darwin_amd64"
2020/07/30 11:15:49 [DEBUG] found valid plugin: "bizfly", "0.0.0", "/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly"
2020/07/30 11:15:49 [DEBUG] checking for provider in ".terraform/plugins/darwin_amd64"
2020/07/30 11:15:53 [INFO] Terraform version: 0.12.29  
2020/07/30 11:15:53 [INFO] Go runtime version: go1.13.14
2020/07/30 11:15:53 [INFO] CLI args: []string{"/usr/local/bin/terraform", "plan"}
2020/07/30 11:15:53 [DEBUG] Attempting to open CLI config file: /Users/hung/.terraformrc
2020/07/30 11:15:53 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2020/07/30 11:15:53 [INFO] CLI command args: []string{"plan"}
2020/07/30 11:15:53 [TRACE] Meta.Backend: no config given or present on disk, so returning nil config
2020/07/30 11:15:53 [TRACE] Meta.Backend: backend has not previously been initialized in this working directory
2020/07/30 11:15:53 [DEBUG] New state was assigned lineage "2f710bba-5758-6f93-3b83-62dd6411477d"
2020/07/30 11:15:53 [TRACE] Meta.Backend: using default local state only (no backend configuration, and no existing initialized backend)
2020/07/30 11:15:53 [TRACE] Meta.Backend: instantiated backend of type <nil>
2020/07/30 11:15:53 [DEBUG] checking for provider in "."
2020/07/30 11:15:53 [WARN] found legacy provider "terraform-provider-bizfly"
2020/07/30 11:15:53 [DEBUG] checking for provider in "/usr/local/bin"
2020/07/30 11:15:53 [DEBUG] checking for provider in ".terraform/plugins/darwin_amd64"
2020/07/30 11:15:53 [DEBUG] found valid plugin: "bizfly", "0.0.0", "/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly"
2020/07/30 11:15:53 [DEBUG] checking for provisioner in "."
2020/07/30 11:15:53 [DEBUG] checking for provisioner in "/usr/local/bin"
2020/07/30 11:15:53 [DEBUG] checking for provisioner in ".terraform/plugins/darwin_amd64"
2020/07/30 11:15:53 [TRACE] Meta.Backend: backend <nil> does not support operations, so wrapping it in a local backend
2020/07/30 11:15:53 [INFO] backend/local: starting Plan operation
2020/07/30 11:15:53 [TRACE] backend/local: requesting state manager for workspace "default"
2020/07/30 11:15:53 [TRACE] backend/local: state manager for workspace "default" will:
 - read initial snapshot from terraform.tfstate
 - write new snapshots to terraform.tfstate
 - create any backup at terraform.tfstate.backup
2020/07/30 11:15:53 [TRACE] backend/local: requesting state lock for workspace "default"
2020/07/30 11:15:53 [TRACE] statemgr.Filesystem: preparing to manage state snapshots at terraform.tfstate
2020/07/30 11:15:53 [TRACE] statemgr.Filesystem: existing snapshot has lineage "8e1934d5-1d8f-e9a8-58e8-6c54c3aa209a" serial 1
2020/07/30 11:15:53 [TRACE] statemgr.Filesystem: locking terraform.tfstate using fcntl flock
2020/07/30 11:15:53 [TRACE] statemgr.Filesystem: writing lock metadata to .terraform.tfstate.lock.info
2020/07/30 11:15:53 [TRACE] backend/local: reading remote state for workspace "default"
2020/07/30 11:15:53 [TRACE] statemgr.Filesystem: reading latest snapshot from terraform.tfstate
2020/07/30 11:15:53 [TRACE] statemgr.Filesystem: read snapshot with lineage "8e1934d5-1d8f-e9a8-58e8-6c54c3aa209a" serial 1
2020/07/30 11:15:53 [TRACE] backend/local: retrieving local state snapshot for workspace "default"
2020/07/30 11:15:53 [TRACE] backend/local: building context for current working directory
2020/07/30 11:15:53 [TRACE] terraform.NewContext: starting
2020/07/30 11:15:53 [TRACE] terraform.NewContext: resolving provider version selections
2020/07/30 11:15:53 [TRACE] terraform.NewContext: loading provider schemas
2020/07/30 11:15:53 [TRACE] LoadSchemas: retrieving schema for provider type "bizfly"
2020-07-30T11:15:53.606+0700 [INFO]  plugin: configuring client automatic mTLS
2020-07-30T11:15:53.641+0700 [DEBUG] plugin: starting plugin: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly args=[/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly]
2020-07-30T11:15:53.645+0700 [DEBUG] plugin: plugin started: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=51518
2020-07-30T11:15:53.645+0700 [DEBUG] plugin: waiting for RPC address: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly
2020-07-30T11:15:53.663+0700 [INFO]  plugin.terraform-provider-bizfly: configuring server automatic mTLS: timestamp=2020-07-30T11:15:53.663+0700
2020-07-30T11:15:53.689+0700 [DEBUG] plugin: using plugin: version=5
2020-07-30T11:15:53.689+0700 [DEBUG] plugin.terraform-provider-bizfly: plugin address: address=/var/folders/0r/zdwrk7wn22vd_g32twvblrpc0000gn/T/plugin117394773 network=unix timestamp=2020-07-30T11:15:53.689+0700
2020/07/30 11:15:53 [TRACE] GRPCProvider: GetSchema
2020-07-30T11:15:53.750+0700 [TRACE] plugin.stdio: waiting for stdio data
2020/07/30 11:15:53 [TRACE] GRPCProvider: Close
2020-07-30T11:15:53.755+0700 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2020-07-30T11:15:53.756+0700 [DEBUG] plugin: plugin process exited: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=51518
2020-07-30T11:15:53.756+0700 [DEBUG] plugin: plugin exited
2020/07/30 11:15:53 [TRACE] terraform.NewContext: complete
2020/07/30 11:15:53 [TRACE] backend/local: finished building terraform.Context
2020/07/30 11:15:53 [TRACE] backend/local: requesting interactive input, if necessary
2020/07/30 11:15:53 [TRACE] Context.Input: Prompting for provider arguments
2020/07/30 11:15:53 [TRACE] Context.Input: Provider provider.bizfly declared at main.tf:1,1-18
2020/07/30 11:15:53 [TRACE] Context.Input: Input for provider.bizfly: map[string]cty.Value{}
2020/07/30 11:15:53 [TRACE] backend/local: running validation operation
2020/07/30 11:15:53 [INFO] terraform: building graph: GraphTypeValidate
2020/07/30 11:15:53 [TRACE] Executing graph transform *terraform.ConfigTransformer
2020/07/30 11:15:53 [TRACE] ConfigTransformer: Starting for path: 
2020/07/30 11:15:53 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
  ------
2020/07/30 11:15:53 [TRACE] Executing graph transform *terraform.LocalTransformer
2020/07/30 11:15:53 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2020/07/30 11:15:53 [TRACE] Executing graph transform *terraform.OutputTransformer
2020/07/30 11:15:53 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2020/07/30 11:15:53 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2020/07/30 11:15:53 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2020/07/30 11:15:53 [TRACE] Executing graph transform *terraform.StateTransformer
2020/07/30 11:15:53 [TRACE] StateTransformer: state is empty, so nothing to do
2020/07/30 11:15:53 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2020/07/30 11:15:53 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2020/07/30 11:15:53 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2020/07/30 11:15:53 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2020/07/30 11:15:53 [TRACE] AttachResourceConfigTransformer: attaching to "bizfly_instance.test" (*terraform.NodeValidatableResource) config from main.tf:7,1-34
2020/07/30 11:15:53 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2020/07/30 11:15:53 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/30 11:15:53 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/30 11:15:53 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2020/07/30 11:15:53 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:15:53 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2020/07/30 11:15:53 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2020/07/30 11:15:53 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2020/07/30 11:15:53 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2020/07/30 11:15:53 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2020/07/30 11:15:53 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2020/07/30 11:15:53 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2020/07/30 11:15:53 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2020/07/30 11:15:53 [TRACE] ProviderConfigTransformer: attaching to "provider.bizfly" provider configuration from main.tf:1,1-18
2020/07/30 11:15:53 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:15:53 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2020/07/30 11:15:53 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2020/07/30 11:15:53 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2020/07/30 11:15:53 [TRACE] ProviderTransformer: bizfly_instance.test is provided by provider.bizfly or inherited equivalent
2020/07/30 11:15:53 [TRACE] ProviderTransformer: exact match for provider.bizfly serving bizfly_instance.test
2020/07/30 11:15:53 [DEBUG] ProviderTransformer: "bizfly_instance.test" (*terraform.NodeValidatableResource) needs provider.bizfly
2020/07/30 11:15:53 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:15:53 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2020/07/30 11:15:53 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2020/07/30 11:15:53 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2020/07/30 11:15:53 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2020/07/30 11:15:53 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:15:53 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2020/07/30 11:15:53 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2020/07/30 11:15:53 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2020/07/30 11:15:53 [TRACE] AttachSchemaTransformer: attaching resource schema to bizfly_instance.test
2020/07/30 11:15:53 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.bizfly
2020/07/30 11:15:53 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2020/07/30 11:15:53 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/30 11:15:53 [DEBUG] ReferenceTransformer: "bizfly_instance.test" references: []
2020/07/30 11:15:53 [DEBUG] ReferenceTransformer: "var.login" references: []
2020/07/30 11:15:53 [DEBUG] ReferenceTransformer: "provider.bizfly" references: []
2020/07/30 11:15:53 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/30 11:15:53 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2020/07/30 11:15:53 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:15:53 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/30 11:15:53 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/30 11:15:53 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2020/07/30 11:15:53 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2020/07/30 11:15:53 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2020/07/30 11:15:53 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
    bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:15:53 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2020/07/30 11:15:53 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer (no changes)
2020/07/30 11:15:53 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/30 11:15:53 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
    bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.bizfly (close) - *terraform.graphNodeCloseProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:15:53 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2020/07/30 11:15:53 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodeValidatableResource
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
    bizfly_instance.test - *terraform.NodeValidatableResource
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.bizfly (close) - *terraform.graphNodeCloseProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:15:53 [DEBUG] Starting graph walk: walkValidate
2020/07/30 11:15:53 [TRACE] dag/walk: updating graph
2020/07/30 11:15:53 [TRACE] dag/walk: added new vertex: "var.login"
2020/07/30 11:15:53 [TRACE] dag/walk: added new vertex: "provider.bizfly"
2020/07/30 11:15:53 [TRACE] dag/walk: added new vertex: "meta.count-boundary (EachMode fixup)"
2020/07/30 11:15:53 [TRACE] dag/walk: added new vertex: "provider.bizfly (close)"
2020/07/30 11:15:53 [TRACE] dag/walk: added new vertex: "root"
2020/07/30 11:15:53 [TRACE] dag/walk: added new vertex: "bizfly_instance.test"
2020/07/30 11:15:53 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "bizfly_instance.test"
2020/07/30 11:15:53 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "var.login"
2020/07/30 11:15:53 [TRACE] dag/walk: added edge: "provider.bizfly (close)" waiting on "bizfly_instance.test"
2020/07/30 11:15:53 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (EachMode fixup)"
2020/07/30 11:15:53 [TRACE] dag/walk: added edge: "root" waiting on "provider.bizfly (close)"
2020/07/30 11:15:53 [TRACE] dag/walk: added edge: "bizfly_instance.test" waiting on "provider.bizfly"
2020/07/30 11:15:53 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2020/07/30 11:15:53 [TRACE] dag/walk: dependencies changed for "bizfly_instance.test", sending new deps
2020/07/30 11:15:53 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (EachMode fixup)", sending new deps
2020/07/30 11:15:53 [TRACE] dag/walk: dependencies changed for "provider.bizfly (close)", sending new deps
2020/07/30 11:15:53 [TRACE] dag/walk: visiting "var.login"
2020/07/30 11:15:53 [TRACE] vertex "var.login": starting visit (*terraform.NodeRootVariable)
2020/07/30 11:15:53 [TRACE] vertex "var.login": evaluating
2020/07/30 11:15:53 [TRACE] [walkValidate] Entering eval tree: var.login
2020/07/30 11:15:53 [TRACE] dag/walk: visiting "provider.bizfly"
2020/07/30 11:15:53 [TRACE] vertex "provider.bizfly": starting visit (*terraform.NodeApplyableProvider)
2020/07/30 11:15:53 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:15:53 [TRACE] [walkValidate] Exiting eval tree: var.login
2020/07/30 11:15:53 [TRACE] vertex "var.login": visit complete
2020/07/30 11:15:53 [TRACE] vertex "provider.bizfly": evaluating
2020/07/30 11:15:53 [TRACE] [walkValidate] Entering eval tree: provider.bizfly
2020/07/30 11:15:53 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:15:53 [TRACE] <root>: eval: *terraform.EvalInitProvider
2020-07-30T11:15:53.763+0700 [INFO]  plugin: configuring client automatic mTLS
2020-07-30T11:15:53.787+0700 [DEBUG] plugin: starting plugin: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly args=[/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly]
2020-07-30T11:15:53.791+0700 [DEBUG] plugin: plugin started: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=51519
2020-07-30T11:15:53.791+0700 [DEBUG] plugin: waiting for RPC address: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly
2020-07-30T11:15:53.809+0700 [INFO]  plugin.terraform-provider-bizfly: configuring server automatic mTLS: timestamp=2020-07-30T11:15:53.809+0700
2020-07-30T11:15:53.836+0700 [DEBUG] plugin: using plugin: version=5
2020-07-30T11:15:53.836+0700 [DEBUG] plugin.terraform-provider-bizfly: plugin address: address=/var/folders/0r/zdwrk7wn22vd_g32twvblrpc0000gn/T/plugin537063490 network=unix timestamp=2020-07-30T11:15:53.836+0700
2020/07/30 11:15:53 [TRACE] BuiltinEvalContext: Initialized "bizfly" provider for provider.bizfly
2020-07-30T11:15:53.889+0700 [TRACE] plugin.stdio: waiting for stdio data
2020/07/30 11:15:53 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:15:53 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/07/30 11:15:53 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:15:53 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 11:15:53 [TRACE] <root>: eval: *terraform.EvalValidateProvider
2020/07/30 11:15:53 [TRACE] buildProviderConfig for provider.bizfly: using explicit config only
2020/07/30 11:15:53 [TRACE] GRPCProvider: GetSchema
2020/07/30 11:15:53 [TRACE] GRPCProvider: PrepareProviderConfig
2020/07/30 11:15:53 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:15:53 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:15:53 [TRACE] [walkValidate] Exiting eval tree: provider.bizfly
2020/07/30 11:15:53 [TRACE] vertex "provider.bizfly": visit complete
2020/07/30 11:15:53 [TRACE] dag/walk: visiting "bizfly_instance.test"
2020/07/30 11:15:53 [TRACE] vertex "bizfly_instance.test": starting visit (*terraform.NodeValidatableResource)
2020/07/30 11:15:53 [TRACE] vertex "bizfly_instance.test": evaluating
2020/07/30 11:15:53 [TRACE] [walkValidate] Entering eval tree: bizfly_instance.test
2020/07/30 11:15:53 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:15:53 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 11:15:53 [TRACE] <root>: eval: *terraform.EvalValidateResource
2020/07/30 11:15:53 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/07/30 11:15:53 [TRACE] [walkValidate] Exiting eval tree: bizfly_instance.test
2020/07/30 11:15:53 [TRACE] vertex "bizfly_instance.test": visit complete
2020/07/30 11:15:53 [TRACE] dag/walk: visiting "provider.bizfly (close)"
2020/07/30 11:15:53 [TRACE] vertex "provider.bizfly (close)": starting visit (*terraform.graphNodeCloseProvider)
2020/07/30 11:15:53 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2020/07/30 11:15:53 [TRACE] vertex "provider.bizfly (close)": evaluating
2020/07/30 11:15:53 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2020/07/30 11:15:53 [TRACE] [walkValidate] Entering eval tree: provider.bizfly (close)
2020/07/30 11:15:53 [TRACE] vertex "meta.count-boundary (EachMode fixup)": evaluating
2020/07/30 11:15:53 [TRACE] <root>: eval: *terraform.EvalCloseProvider
2020/07/30 11:15:53 [TRACE] [walkValidate] Entering eval tree: meta.count-boundary (EachMode fixup)
2020/07/30 11:15:53 [TRACE] GRPCProvider: Close
2020/07/30 11:15:53 [TRACE] <root>: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2020/07/30 11:15:53 [TRACE] [walkValidate] Exiting eval tree: meta.count-boundary (EachMode fixup)
2020/07/30 11:15:53 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2020-07-30T11:15:53.895+0700 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2020-07-30T11:15:53.896+0700 [DEBUG] plugin: plugin process exited: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=51519
2020-07-30T11:15:53.896+0700 [DEBUG] plugin: plugin exited
2020/07/30 11:15:53 [TRACE] [walkValidate] Exiting eval tree: provider.bizfly (close)
2020/07/30 11:15:53 [TRACE] vertex "provider.bizfly (close)": visit complete
2020/07/30 11:15:53 [TRACE] dag/walk: visiting "root"
2020/07/30 11:15:53 [TRACE] vertex "root": starting visit (terraform.graphNodeRoot)
2020/07/30 11:15:53 [TRACE] vertex "root": visit complete
2020/07/30 11:15:53 [INFO] backend/local: plan calling Refresh
2020/07/30 11:15:53 [INFO] terraform: building graph: GraphTypeRefresh
2020/07/30 11:15:53 [TRACE] No managed resources in state during refresh; skipping managed resource transformer
2020/07/30 11:15:53 [TRACE] Executing graph transform *terraform.ConfigTransformer
2020/07/30 11:15:53 [TRACE] ConfigTransformer: Starting for path: 
2020/07/30 11:15:53 [TRACE] Completed graph transform *terraform.ConfigTransformer (no changes)
2020/07/30 11:15:53 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2020/07/30 11:15:53 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2020/07/30 11:15:53 [TRACE] Executing graph transform *terraform.StateTransformer
2020/07/30 11:15:53 [TRACE] StateTransformer: state is empty, so nothing to do
2020/07/30 11:15:53 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2020/07/30 11:15:53 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/30 11:15:53 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/30 11:15:53 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2020/07/30 11:15:53 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2020/07/30 11:15:53 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2020/07/30 11:15:53 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:15:53 [TRACE] Executing graph transform *terraform.LocalTransformer
2020/07/30 11:15:53 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2020/07/30 11:15:53 [TRACE] Executing graph transform *terraform.OutputTransformer
2020/07/30 11:15:53 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2020/07/30 11:15:53 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2020/07/30 11:15:53 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2020/07/30 11:15:53 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2020/07/30 11:15:53 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2020/07/30 11:15:53 [TRACE] ProviderConfigTransformer: attaching to "provider.bizfly" provider configuration from main.tf:1,1-18
2020/07/30 11:15:53 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:15:53 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2020/07/30 11:15:53 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2020/07/30 11:15:53 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2020/07/30 11:15:53 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer (no changes)
2020/07/30 11:15:53 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2020/07/30 11:15:53 [DEBUG] pruning unused provider.bizfly
2020/07/30 11:15:53 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer with new graph:
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:15:53 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2020/07/30 11:15:53 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2020/07/30 11:15:53 [TRACE] Completed graph transform *terraform.graphTransformerMulti (no changes)
2020/07/30 11:15:53 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2020/07/30 11:15:53 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2020/07/30 11:15:53 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/30 11:15:53 [DEBUG] ReferenceTransformer: "var.login" references: []
2020/07/30 11:15:53 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/30 11:15:53 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2020/07/30 11:15:53 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2020/07/30 11:15:53 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/30 11:15:53 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/30 11:15:53 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2020/07/30 11:15:53 [TRACE] Completed graph transform *terraform.CloseProviderTransformer (no changes)
2020/07/30 11:15:53 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/30 11:15:53 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/07/30 11:15:53 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2020/07/30 11:15:53 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer (no changes)
2020/07/30 11:15:53 [DEBUG] Starting graph walk: walkRefresh
2020/07/30 11:15:53 [TRACE] dag/walk: updating graph
2020/07/30 11:15:53 [TRACE] dag/walk: added new vertex: "var.login"
2020/07/30 11:15:53 [TRACE] dag/walk: visiting "var.login"
2020/07/30 11:15:53 [TRACE] vertex "var.login": starting visit (*terraform.NodeRootVariable)
2020/07/30 11:15:53 [TRACE] vertex "var.login": evaluating
2020/07/30 11:15:53 [TRACE] [walkRefresh] Entering eval tree: var.login
2020/07/30 11:15:53 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:15:53 [TRACE] [walkRefresh] Exiting eval tree: var.login
2020/07/30 11:15:53 [TRACE] vertex "var.login": visit complete
2020/07/30 11:15:53 [INFO] backend/local: plan calling Plan
2020/07/30 11:15:53 [INFO] terraform: building graph: GraphTypePlan
2020/07/30 11:15:53 [TRACE] Executing graph transform *terraform.ConfigTransformer
2020/07/30 11:15:53 [TRACE] ConfigTransformer: Starting for path: 
2020/07/30 11:15:53 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
  ------
2020/07/30 11:15:53 [TRACE] Executing graph transform *terraform.LocalTransformer
2020/07/30 11:15:53 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2020/07/30 11:15:53 [TRACE] Executing graph transform *terraform.OutputTransformer
2020/07/30 11:15:53 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2020/07/30 11:15:53 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2020/07/30 11:15:53 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2020/07/30 11:15:53 [TRACE] Executing graph transform *terraform.StateTransformer
2020/07/30 11:15:53 [TRACE] StateTransformer: state is empty, so nothing to do
2020/07/30 11:15:53 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2020/07/30 11:15:53 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2020/07/30 11:15:53 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2020/07/30 11:15:53 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2020/07/30 11:15:53 [TRACE] AttachResourceConfigTransformer: attaching to "bizfly_instance.test" (*terraform.NodePlannableResource) config from main.tf:7,1-34
2020/07/30 11:15:53 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2020/07/30 11:15:53 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/30 11:15:53 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/30 11:15:53 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2020/07/30 11:15:53 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:15:53 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2020/07/30 11:15:53 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2020/07/30 11:15:53 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2020/07/30 11:15:53 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2020/07/30 11:15:53 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2020/07/30 11:15:53 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2020/07/30 11:15:53 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2020/07/30 11:15:53 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2020/07/30 11:15:53 [TRACE] ProviderConfigTransformer: attaching to "provider.bizfly" provider configuration from main.tf:1,1-18
2020/07/30 11:15:53 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:15:53 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2020/07/30 11:15:53 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2020/07/30 11:15:53 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2020/07/30 11:15:53 [TRACE] ProviderTransformer: bizfly_instance.test is provided by provider.bizfly or inherited equivalent
2020/07/30 11:15:53 [TRACE] ProviderTransformer: exact match for provider.bizfly serving bizfly_instance.test
2020/07/30 11:15:53 [DEBUG] ProviderTransformer: "bizfly_instance.test" (*terraform.NodePlannableResource) needs provider.bizfly
2020/07/30 11:15:53 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:15:53 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2020/07/30 11:15:53 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2020/07/30 11:15:53 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2020/07/30 11:15:53 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2020/07/30 11:15:53 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:15:53 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2020/07/30 11:15:53 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2020/07/30 11:15:53 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2020/07/30 11:15:53 [TRACE] AttachSchemaTransformer: attaching resource schema to bizfly_instance.test
2020/07/30 11:15:53 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.bizfly
2020/07/30 11:15:53 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2020/07/30 11:15:53 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/30 11:15:53 [DEBUG] ReferenceTransformer: "bizfly_instance.test" references: []
2020/07/30 11:15:53 [DEBUG] ReferenceTransformer: "var.login" references: []
2020/07/30 11:15:53 [DEBUG] ReferenceTransformer: "provider.bizfly" references: []
2020/07/30 11:15:53 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/30 11:15:53 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2020/07/30 11:15:53 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:15:53 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/30 11:15:53 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/30 11:15:53 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2020/07/30 11:15:53 [TRACE] ForcedCBDTransformer: "bizfly_instance.test" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2020/07/30 11:15:53 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2020/07/30 11:15:53 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2020/07/30 11:15:53 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
    bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:15:53 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2020/07/30 11:15:53 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer (no changes)
2020/07/30 11:15:53 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/30 11:15:53 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
    bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.bizfly (close) - *terraform.graphNodeCloseProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:15:53 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2020/07/30 11:15:53 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodePlannableResource
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
    bizfly_instance.test - *terraform.NodePlannableResource
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.bizfly (close) - *terraform.graphNodeCloseProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:15:53 [DEBUG] Starting graph walk: walkPlan
2020/07/30 11:15:53 [TRACE] dag/walk: updating graph
2020/07/30 11:15:53 [TRACE] dag/walk: added new vertex: "root"
2020/07/30 11:15:53 [TRACE] dag/walk: added new vertex: "bizfly_instance.test"
2020/07/30 11:15:53 [TRACE] dag/walk: added new vertex: "var.login"
2020/07/30 11:15:53 [TRACE] dag/walk: added new vertex: "provider.bizfly"
2020/07/30 11:15:53 [TRACE] dag/walk: added new vertex: "meta.count-boundary (EachMode fixup)"
2020/07/30 11:15:53 [TRACE] dag/walk: added new vertex: "provider.bizfly (close)"
2020/07/30 11:15:53 [TRACE] dag/walk: added edge: "root" waiting on "provider.bizfly (close)"
2020/07/30 11:15:53 [TRACE] dag/walk: added edge: "bizfly_instance.test" waiting on "provider.bizfly"
2020/07/30 11:15:53 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "bizfly_instance.test"
2020/07/30 11:15:53 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "var.login"
2020/07/30 11:15:53 [TRACE] dag/walk: added edge: "provider.bizfly (close)" waiting on "bizfly_instance.test"
2020/07/30 11:15:53 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (EachMode fixup)"
2020/07/30 11:15:53 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2020/07/30 11:15:53 [TRACE] dag/walk: dependencies changed for "bizfly_instance.test", sending new deps
2020/07/30 11:15:53 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (EachMode fixup)", sending new deps
2020/07/30 11:15:53 [TRACE] dag/walk: dependencies changed for "provider.bizfly (close)", sending new deps
2020/07/30 11:15:53 [TRACE] dag/walk: visiting "provider.bizfly"
2020/07/30 11:15:53 [TRACE] dag/walk: visiting "var.login"
2020/07/30 11:15:53 [TRACE] vertex "provider.bizfly": starting visit (*terraform.NodeApplyableProvider)
2020/07/30 11:15:53 [TRACE] vertex "var.login": starting visit (*terraform.NodeRootVariable)
2020/07/30 11:15:53 [TRACE] vertex "var.login": evaluating
2020/07/30 11:15:53 [TRACE] vertex "provider.bizfly": evaluating
2020/07/30 11:15:53 [TRACE] [walkPlan] Entering eval tree: var.login
2020/07/30 11:15:53 [TRACE] [walkPlan] Entering eval tree: provider.bizfly
2020/07/30 11:15:53 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:15:53 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:15:53 [TRACE] <root>: eval: *terraform.EvalInitProvider
2020/07/30 11:15:53 [TRACE] [walkPlan] Exiting eval tree: var.login
2020/07/30 11:15:53 [TRACE] vertex "var.login": visit complete
2020-07-30T11:15:53.900+0700 [INFO]  plugin: configuring client automatic mTLS
2020-07-30T11:15:53.926+0700 [DEBUG] plugin: starting plugin: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly args=[/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly]
2020-07-30T11:15:53.930+0700 [DEBUG] plugin: plugin started: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=51520
2020-07-30T11:15:53.930+0700 [DEBUG] plugin: waiting for RPC address: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly
2020-07-30T11:15:53.950+0700 [INFO]  plugin.terraform-provider-bizfly: configuring server automatic mTLS: timestamp=2020-07-30T11:15:53.950+0700
2020-07-30T11:15:53.976+0700 [DEBUG] plugin: using plugin: version=5
2020-07-30T11:15:53.977+0700 [DEBUG] plugin.terraform-provider-bizfly: plugin address: address=/var/folders/0r/zdwrk7wn22vd_g32twvblrpc0000gn/T/plugin680567631 network=unix timestamp=2020-07-30T11:15:53.976+0700
2020/07/30 11:15:54 [TRACE] BuiltinEvalContext: Initialized "bizfly" provider for provider.bizfly
2020/07/30 11:15:54 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:15:54 [TRACE] <root>: eval: terraform.EvalNoop
2020-07-30T11:15:54.030+0700 [TRACE] plugin.stdio: waiting for stdio data
2020/07/30 11:15:54 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/07/30 11:15:54 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:15:54 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 11:15:54 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/07/30 11:15:54 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:15:54 [TRACE] <root>: eval: *terraform.EvalConfigProvider
2020/07/30 11:15:54 [TRACE] buildProviderConfig for provider.bizfly: using explicit config only
2020/07/30 11:15:54 [TRACE] GRPCProvider: GetSchema
2020/07/30 11:15:54 [TRACE] GRPCProvider: Configure
2020/07/30 11:15:55 [TRACE] [walkPlan] Exiting eval tree: provider.bizfly
2020/07/30 11:15:55 [TRACE] vertex "provider.bizfly": visit complete
2020/07/30 11:15:55 [TRACE] dag/walk: visiting "bizfly_instance.test"
2020/07/30 11:15:55 [TRACE] vertex "bizfly_instance.test": starting visit (*terraform.NodePlannableResource)
2020/07/30 11:15:55 [TRACE] vertex "bizfly_instance.test": evaluating
2020/07/30 11:15:55 [TRACE] [walkPlan] Entering eval tree: bizfly_instance.test
2020/07/30 11:15:55 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/07/30 11:15:55 [TRACE] [walkPlan] Exiting eval tree: bizfly_instance.test
2020/07/30 11:15:55 [TRACE] vertex "bizfly_instance.test": expanding dynamic subgraph
2020/07/30 11:15:55 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/07/30 11:15:55 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResourceInstance
  ------
2020/07/30 11:15:55 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/07/30 11:15:55 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/07/30 11:15:55 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/30 11:15:55 [DEBUG] Resource instance state not found for node "bizfly_instance.test", instance bizfly_instance.test
2020/07/30 11:15:55 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/30 11:15:55 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/30 11:15:55 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/30 11:15:55 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/30 11:15:55 [DEBUG] ReferenceTransformer: "bizfly_instance.test" references: []
2020/07/30 11:15:55 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/30 11:15:55 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/30 11:15:55 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/07/30 11:15:55 [TRACE] vertex "bizfly_instance.test": entering dynamic subgraph
2020/07/30 11:15:55 [TRACE] dag/walk: updating graph
2020/07/30 11:15:55 [TRACE] dag/walk: added new vertex: "bizfly_instance.test"
2020/07/30 11:15:55 [TRACE] dag/walk: visiting "bizfly_instance.test"
2020/07/30 11:15:55 [TRACE] vertex "bizfly_instance.test": starting visit (*terraform.NodePlannableResourceInstance)
2020/07/30 11:15:55 [TRACE] vertex "bizfly_instance.test": evaluating
2020/07/30 11:15:55 [TRACE] [walkPlan] Entering eval tree: bizfly_instance.test
2020/07/30 11:15:55 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:15:55 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 11:15:55 [TRACE] <root>: eval: *terraform.EvalReadState
2020/07/30 11:15:55 [TRACE] EvalReadState: reading state for bizfly_instance.test
2020/07/30 11:15:55 [TRACE] EvalReadState: no state present for bizfly_instance.test
2020/07/30 11:15:55 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2020/07/30 11:15:55 [TRACE] <root>: eval: *terraform.EvalDiff
2020/07/30 11:15:55 [TRACE] Re-validating config for "bizfly_instance.test"
2020/07/30 11:15:55 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/07/30 11:15:55 [TRACE] GRPCProvider: PlanResourceChange
2020/07/30 11:15:55 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2020/07/30 11:15:55 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/07/30 11:15:55 [TRACE] EvalWriteState: writing current state object for bizfly_instance.test
2020/07/30 11:15:55 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/07/30 11:15:55 [TRACE] EvalWriteDiff: recorded Create change for bizfly_instance.test
2020/07/30 11:15:55 [TRACE] [walkPlan] Exiting eval tree: bizfly_instance.test
2020/07/30 11:15:55 [TRACE] vertex "bizfly_instance.test": visit complete
2020/07/30 11:15:55 [TRACE] vertex "bizfly_instance.test": dynamic subgraph completed successfully
2020/07/30 11:15:55 [TRACE] vertex "bizfly_instance.test": visit complete
2020/07/30 11:15:55 [TRACE] dag/walk: visiting "provider.bizfly (close)"
2020/07/30 11:15:55 [TRACE] vertex "provider.bizfly (close)": starting visit (*terraform.graphNodeCloseProvider)
2020/07/30 11:15:55 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2020/07/30 11:15:55 [TRACE] vertex "provider.bizfly (close)": evaluating
2020/07/30 11:15:55 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2020/07/30 11:15:55 [TRACE] [walkPlan] Entering eval tree: provider.bizfly (close)
2020/07/30 11:15:55 [TRACE] vertex "meta.count-boundary (EachMode fixup)": evaluating
2020/07/30 11:15:55 [TRACE] [walkPlan] Entering eval tree: meta.count-boundary (EachMode fixup)
2020/07/30 11:15:55 [TRACE] <root>: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2020/07/30 11:15:55 [TRACE] <root>: eval: *terraform.EvalCloseProvider
2020/07/30 11:15:55 [TRACE] GRPCProvider: Close
2020/07/30 11:15:55 [TRACE] [walkPlan] Exiting eval tree: meta.count-boundary (EachMode fixup)
2020/07/30 11:15:55 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2020-07-30T11:15:55.281+0700 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2020-07-30T11:15:55.284+0700 [DEBUG] plugin: plugin process exited: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=51520
2020-07-30T11:15:55.284+0700 [DEBUG] plugin: plugin exited
2020/07/30 11:15:55 [TRACE] [walkPlan] Exiting eval tree: provider.bizfly (close)
2020/07/30 11:15:55 [TRACE] vertex "provider.bizfly (close)": visit complete
2020/07/30 11:15:55 [TRACE] dag/walk: visiting "root"
2020/07/30 11:15:55 [TRACE] vertex "root": starting visit (terraform.graphNodeRoot)
2020/07/30 11:15:55 [TRACE] vertex "root": visit complete
2020/07/30 11:15:55 [INFO] backend/local: plan operation completed
2020/07/30 11:15:55 [TRACE] statemgr.Filesystem: removing lock metadata file .terraform.tfstate.lock.info
2020/07/30 11:15:55 [TRACE] statemgr.Filesystem: unlocking terraform.tfstate using fcntl flock
2020/07/30 11:15:59 [INFO] Terraform version: 0.12.29  
2020/07/30 11:15:59 [INFO] Go runtime version: go1.13.14
2020/07/30 11:15:59 [INFO] CLI args: []string{"/usr/local/bin/terraform", "apply"}
2020/07/30 11:15:59 [DEBUG] Attempting to open CLI config file: /Users/hung/.terraformrc
2020/07/30 11:15:59 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2020/07/30 11:15:59 [INFO] CLI command args: []string{"apply"}
2020/07/30 11:15:59 [TRACE] Meta.Backend: no config given or present on disk, so returning nil config
2020/07/30 11:15:59 [TRACE] Meta.Backend: backend has not previously been initialized in this working directory
2020/07/30 11:15:59 [DEBUG] New state was assigned lineage "77eceaa3-522e-91b3-78d5-a18713f093f5"
2020/07/30 11:15:59 [TRACE] Meta.Backend: using default local state only (no backend configuration, and no existing initialized backend)
2020/07/30 11:15:59 [TRACE] Meta.Backend: instantiated backend of type <nil>
2020/07/30 11:15:59 [DEBUG] checking for provider in "."
2020/07/30 11:15:59 [WARN] found legacy provider "terraform-provider-bizfly"
2020/07/30 11:15:59 [DEBUG] checking for provider in "/usr/local/bin"
2020/07/30 11:15:59 [DEBUG] checking for provider in ".terraform/plugins/darwin_amd64"
2020/07/30 11:15:59 [DEBUG] found valid plugin: "bizfly", "0.0.0", "/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly"
2020/07/30 11:15:59 [DEBUG] checking for provisioner in "."
2020/07/30 11:15:59 [DEBUG] checking for provisioner in "/usr/local/bin"
2020/07/30 11:15:59 [DEBUG] checking for provisioner in ".terraform/plugins/darwin_amd64"
2020/07/30 11:15:59 [TRACE] Meta.Backend: backend <nil> does not support operations, so wrapping it in a local backend
2020/07/30 11:15:59 [INFO] backend/local: starting Apply operation
2020/07/30 11:15:59 [TRACE] backend/local: requesting state manager for workspace "default"
2020/07/30 11:15:59 [TRACE] backend/local: state manager for workspace "default" will:
 - read initial snapshot from terraform.tfstate
 - write new snapshots to terraform.tfstate
 - create any backup at terraform.tfstate.backup
2020/07/30 11:15:59 [TRACE] backend/local: requesting state lock for workspace "default"
2020/07/30 11:15:59 [TRACE] statemgr.Filesystem: preparing to manage state snapshots at terraform.tfstate
2020/07/30 11:15:59 [TRACE] statemgr.Filesystem: existing snapshot has lineage "8e1934d5-1d8f-e9a8-58e8-6c54c3aa209a" serial 1
2020/07/30 11:15:59 [TRACE] statemgr.Filesystem: locking terraform.tfstate using fcntl flock
2020/07/30 11:15:59 [TRACE] statemgr.Filesystem: writing lock metadata to .terraform.tfstate.lock.info
2020/07/30 11:15:59 [TRACE] backend/local: reading remote state for workspace "default"
2020/07/30 11:15:59 [TRACE] statemgr.Filesystem: reading latest snapshot from terraform.tfstate
2020/07/30 11:15:59 [TRACE] statemgr.Filesystem: read snapshot with lineage "8e1934d5-1d8f-e9a8-58e8-6c54c3aa209a" serial 1
2020/07/30 11:15:59 [TRACE] backend/local: retrieving local state snapshot for workspace "default"
2020/07/30 11:15:59 [TRACE] backend/local: building context for current working directory
2020/07/30 11:15:59 [TRACE] terraform.NewContext: starting
2020/07/30 11:15:59 [TRACE] terraform.NewContext: resolving provider version selections
2020/07/30 11:15:59 [TRACE] terraform.NewContext: loading provider schemas
2020/07/30 11:15:59 [TRACE] LoadSchemas: retrieving schema for provider type "bizfly"
2020-07-30T11:15:59.937+0700 [INFO]  plugin: configuring client automatic mTLS
2020-07-30T11:15:59.964+0700 [DEBUG] plugin: starting plugin: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly args=[/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly]
2020-07-30T11:15:59.968+0700 [DEBUG] plugin: plugin started: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=51539
2020-07-30T11:15:59.968+0700 [DEBUG] plugin: waiting for RPC address: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly
2020-07-30T11:15:59.994+0700 [INFO]  plugin.terraform-provider-bizfly: configuring server automatic mTLS: timestamp=2020-07-30T11:15:59.993+0700
2020-07-30T11:16:00.020+0700 [DEBUG] plugin.terraform-provider-bizfly: plugin address: address=/var/folders/0r/zdwrk7wn22vd_g32twvblrpc0000gn/T/plugin506444918 network=unix timestamp=2020-07-30T11:16:00.020+0700
2020-07-30T11:16:00.020+0700 [DEBUG] plugin: using plugin: version=5
2020/07/30 11:16:00 [TRACE] GRPCProvider: GetSchema
2020-07-30T11:16:00.073+0700 [TRACE] plugin.stdio: waiting for stdio data
2020/07/30 11:16:00 [TRACE] GRPCProvider: Close
2020-07-30T11:16:00.078+0700 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2020-07-30T11:16:00.080+0700 [DEBUG] plugin: plugin process exited: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=51539
2020-07-30T11:16:00.080+0700 [DEBUG] plugin: plugin exited
2020/07/30 11:16:00 [TRACE] terraform.NewContext: complete
2020/07/30 11:16:00 [TRACE] backend/local: finished building terraform.Context
2020/07/30 11:16:00 [TRACE] backend/local: requesting interactive input, if necessary
2020/07/30 11:16:00 [TRACE] Context.Input: Prompting for provider arguments
2020/07/30 11:16:00 [TRACE] Context.Input: Provider provider.bizfly declared at main.tf:1,1-18
2020/07/30 11:16:00 [TRACE] Context.Input: Input for provider.bizfly: map[string]cty.Value{}
2020/07/30 11:16:00 [TRACE] backend/local: running validation operation
2020/07/30 11:16:00 [INFO] terraform: building graph: GraphTypeValidate
2020/07/30 11:16:00 [TRACE] Executing graph transform *terraform.ConfigTransformer
2020/07/30 11:16:00 [TRACE] ConfigTransformer: Starting for path: 
2020/07/30 11:16:00 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
  ------
2020/07/30 11:16:00 [TRACE] Executing graph transform *terraform.LocalTransformer
2020/07/30 11:16:00 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2020/07/30 11:16:00 [TRACE] Executing graph transform *terraform.OutputTransformer
2020/07/30 11:16:00 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2020/07/30 11:16:00 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2020/07/30 11:16:00 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2020/07/30 11:16:00 [TRACE] Executing graph transform *terraform.StateTransformer
2020/07/30 11:16:00 [TRACE] StateTransformer: state is empty, so nothing to do
2020/07/30 11:16:00 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2020/07/30 11:16:00 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2020/07/30 11:16:00 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2020/07/30 11:16:00 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2020/07/30 11:16:00 [TRACE] AttachResourceConfigTransformer: attaching to "bizfly_instance.test" (*terraform.NodeValidatableResource) config from main.tf:7,1-34
2020/07/30 11:16:00 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2020/07/30 11:16:00 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/30 11:16:00 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/30 11:16:00 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2020/07/30 11:16:00 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:16:00 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2020/07/30 11:16:00 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2020/07/30 11:16:00 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2020/07/30 11:16:00 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2020/07/30 11:16:00 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2020/07/30 11:16:00 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2020/07/30 11:16:00 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2020/07/30 11:16:00 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2020/07/30 11:16:00 [TRACE] ProviderConfigTransformer: attaching to "provider.bizfly" provider configuration from main.tf:1,1-18
2020/07/30 11:16:00 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:16:00 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2020/07/30 11:16:00 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2020/07/30 11:16:00 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2020/07/30 11:16:00 [TRACE] ProviderTransformer: bizfly_instance.test is provided by provider.bizfly or inherited equivalent
2020/07/30 11:16:00 [TRACE] ProviderTransformer: exact match for provider.bizfly serving bizfly_instance.test
2020/07/30 11:16:00 [DEBUG] ProviderTransformer: "bizfly_instance.test" (*terraform.NodeValidatableResource) needs provider.bizfly
2020/07/30 11:16:00 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:16:00 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2020/07/30 11:16:00 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2020/07/30 11:16:00 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2020/07/30 11:16:00 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2020/07/30 11:16:00 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:16:00 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2020/07/30 11:16:00 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2020/07/30 11:16:00 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2020/07/30 11:16:00 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.bizfly
2020/07/30 11:16:00 [TRACE] AttachSchemaTransformer: attaching resource schema to bizfly_instance.test
2020/07/30 11:16:00 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2020/07/30 11:16:00 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/30 11:16:00 [DEBUG] ReferenceTransformer: "bizfly_instance.test" references: []
2020/07/30 11:16:00 [DEBUG] ReferenceTransformer: "var.login" references: []
2020/07/30 11:16:00 [DEBUG] ReferenceTransformer: "provider.bizfly" references: []
2020/07/30 11:16:00 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/30 11:16:00 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2020/07/30 11:16:00 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:16:00 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/30 11:16:00 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/30 11:16:00 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2020/07/30 11:16:00 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2020/07/30 11:16:00 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2020/07/30 11:16:00 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
    bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:16:00 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2020/07/30 11:16:00 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer (no changes)
2020/07/30 11:16:00 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/30 11:16:00 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
    bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.bizfly (close) - *terraform.graphNodeCloseProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:16:00 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2020/07/30 11:16:00 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodeValidatableResource
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
    bizfly_instance.test - *terraform.NodeValidatableResource
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.bizfly (close) - *terraform.graphNodeCloseProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:16:00 [DEBUG] Starting graph walk: walkValidate
2020/07/30 11:16:00 [TRACE] dag/walk: updating graph
2020/07/30 11:16:00 [TRACE] dag/walk: added new vertex: "bizfly_instance.test"
2020/07/30 11:16:00 [TRACE] dag/walk: added new vertex: "var.login"
2020/07/30 11:16:00 [TRACE] dag/walk: added new vertex: "provider.bizfly"
2020/07/30 11:16:00 [TRACE] dag/walk: added new vertex: "meta.count-boundary (EachMode fixup)"
2020/07/30 11:16:00 [TRACE] dag/walk: added new vertex: "provider.bizfly (close)"
2020/07/30 11:16:00 [TRACE] dag/walk: added new vertex: "root"
2020/07/30 11:16:00 [TRACE] dag/walk: added edge: "provider.bizfly (close)" waiting on "bizfly_instance.test"
2020/07/30 11:16:00 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (EachMode fixup)"
2020/07/30 11:16:00 [TRACE] dag/walk: added edge: "root" waiting on "provider.bizfly (close)"
2020/07/30 11:16:00 [TRACE] dag/walk: added edge: "bizfly_instance.test" waiting on "provider.bizfly"
2020/07/30 11:16:00 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "bizfly_instance.test"
2020/07/30 11:16:00 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "var.login"
2020/07/30 11:16:00 [TRACE] dag/walk: dependencies changed for "provider.bizfly (close)", sending new deps
2020/07/30 11:16:00 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2020/07/30 11:16:00 [TRACE] dag/walk: dependencies changed for "bizfly_instance.test", sending new deps
2020/07/30 11:16:00 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (EachMode fixup)", sending new deps
2020/07/30 11:16:00 [TRACE] dag/walk: visiting "provider.bizfly"
2020/07/30 11:16:00 [TRACE] vertex "provider.bizfly": starting visit (*terraform.NodeApplyableProvider)
2020/07/30 11:16:00 [TRACE] vertex "provider.bizfly": evaluating
2020/07/30 11:16:00 [TRACE] [walkValidate] Entering eval tree: provider.bizfly
2020/07/30 11:16:00 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:16:00 [TRACE] <root>: eval: *terraform.EvalInitProvider
2020-07-30T11:16:00.082+0700 [INFO]  plugin: configuring client automatic mTLS
2020/07/30 11:16:00 [TRACE] dag/walk: visiting "var.login"
2020/07/30 11:16:00 [TRACE] vertex "var.login": starting visit (*terraform.NodeRootVariable)
2020/07/30 11:16:00 [TRACE] vertex "var.login": evaluating
2020/07/30 11:16:00 [TRACE] [walkValidate] Entering eval tree: var.login
2020/07/30 11:16:00 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:16:00 [TRACE] [walkValidate] Exiting eval tree: var.login
2020/07/30 11:16:00 [TRACE] vertex "var.login": visit complete
2020-07-30T11:16:00.106+0700 [DEBUG] plugin: starting plugin: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly args=[/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly]
2020-07-30T11:16:00.110+0700 [DEBUG] plugin: plugin started: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=51540
2020-07-30T11:16:00.110+0700 [DEBUG] plugin: waiting for RPC address: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly
2020-07-30T11:16:00.128+0700 [INFO]  plugin.terraform-provider-bizfly: configuring server automatic mTLS: timestamp=2020-07-30T11:16:00.128+0700
2020-07-30T11:16:00.155+0700 [DEBUG] plugin.terraform-provider-bizfly: plugin address: network=unix address=/var/folders/0r/zdwrk7wn22vd_g32twvblrpc0000gn/T/plugin148376667 timestamp=2020-07-30T11:16:00.155+0700
2020-07-30T11:16:00.155+0700 [DEBUG] plugin: using plugin: version=5
2020/07/30 11:16:00 [TRACE] BuiltinEvalContext: Initialized "bizfly" provider for provider.bizfly
2020/07/30 11:16:00 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:16:00 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/07/30 11:16:00 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:16:00 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 11:16:00 [TRACE] <root>: eval: *terraform.EvalValidateProvider
2020-07-30T11:16:00.208+0700 [TRACE] plugin.stdio: waiting for stdio data
2020/07/30 11:16:00 [TRACE] buildProviderConfig for provider.bizfly: using explicit config only
2020/07/30 11:16:00 [TRACE] GRPCProvider: GetSchema
2020/07/30 11:16:00 [TRACE] GRPCProvider: PrepareProviderConfig
2020/07/30 11:16:00 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:16:00 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:16:00 [TRACE] [walkValidate] Exiting eval tree: provider.bizfly
2020/07/30 11:16:00 [TRACE] vertex "provider.bizfly": visit complete
2020/07/30 11:16:00 [TRACE] dag/walk: visiting "bizfly_instance.test"
2020/07/30 11:16:00 [TRACE] vertex "bizfly_instance.test": starting visit (*terraform.NodeValidatableResource)
2020/07/30 11:16:00 [TRACE] vertex "bizfly_instance.test": evaluating
2020/07/30 11:16:00 [TRACE] [walkValidate] Entering eval tree: bizfly_instance.test
2020/07/30 11:16:00 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:16:00 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 11:16:00 [TRACE] <root>: eval: *terraform.EvalValidateResource
2020/07/30 11:16:00 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/07/30 11:16:00 [TRACE] [walkValidate] Exiting eval tree: bizfly_instance.test
2020/07/30 11:16:00 [TRACE] vertex "bizfly_instance.test": visit complete
2020/07/30 11:16:00 [TRACE] dag/walk: visiting "provider.bizfly (close)"
2020/07/30 11:16:00 [TRACE] vertex "provider.bizfly (close)": starting visit (*terraform.graphNodeCloseProvider)
2020/07/30 11:16:00 [TRACE] vertex "provider.bizfly (close)": evaluating
2020/07/30 11:16:00 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2020/07/30 11:16:00 [TRACE] [walkValidate] Entering eval tree: provider.bizfly (close)
2020/07/30 11:16:00 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2020/07/30 11:16:00 [TRACE] <root>: eval: *terraform.EvalCloseProvider
2020/07/30 11:16:00 [TRACE] GRPCProvider: Close
2020/07/30 11:16:00 [TRACE] vertex "meta.count-boundary (EachMode fixup)": evaluating
2020/07/30 11:16:00 [TRACE] [walkValidate] Entering eval tree: meta.count-boundary (EachMode fixup)
2020/07/30 11:16:00 [TRACE] <root>: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2020/07/30 11:16:00 [TRACE] [walkValidate] Exiting eval tree: meta.count-boundary (EachMode fixup)
2020/07/30 11:16:00 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2020-07-30T11:16:00.211+0700 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2020-07-30T11:16:00.213+0700 [DEBUG] plugin: plugin process exited: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=51540
2020-07-30T11:16:00.213+0700 [DEBUG] plugin: plugin exited
2020/07/30 11:16:00 [TRACE] [walkValidate] Exiting eval tree: provider.bizfly (close)
2020/07/30 11:16:00 [TRACE] vertex "provider.bizfly (close)": visit complete
2020/07/30 11:16:00 [TRACE] dag/walk: visiting "root"
2020/07/30 11:16:00 [TRACE] vertex "root": starting visit (terraform.graphNodeRoot)
2020/07/30 11:16:00 [TRACE] vertex "root": visit complete
2020/07/30 11:16:00 [INFO] backend/local: apply calling Refresh
2020/07/30 11:16:00 [INFO] terraform: building graph: GraphTypeRefresh
2020/07/30 11:16:00 [TRACE] No managed resources in state during refresh; skipping managed resource transformer
2020/07/30 11:16:00 [TRACE] Executing graph transform *terraform.ConfigTransformer
2020/07/30 11:16:00 [TRACE] ConfigTransformer: Starting for path: 
2020/07/30 11:16:00 [TRACE] Completed graph transform *terraform.ConfigTransformer (no changes)
2020/07/30 11:16:00 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2020/07/30 11:16:00 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2020/07/30 11:16:00 [TRACE] Executing graph transform *terraform.StateTransformer
2020/07/30 11:16:00 [TRACE] StateTransformer: state is empty, so nothing to do
2020/07/30 11:16:00 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2020/07/30 11:16:00 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/30 11:16:00 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/30 11:16:00 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2020/07/30 11:16:00 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2020/07/30 11:16:00 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2020/07/30 11:16:00 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:16:00 [TRACE] Executing graph transform *terraform.LocalTransformer
2020/07/30 11:16:00 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2020/07/30 11:16:00 [TRACE] Executing graph transform *terraform.OutputTransformer
2020/07/30 11:16:00 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2020/07/30 11:16:00 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2020/07/30 11:16:00 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2020/07/30 11:16:00 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2020/07/30 11:16:00 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2020/07/30 11:16:00 [TRACE] ProviderConfigTransformer: attaching to "provider.bizfly" provider configuration from main.tf:1,1-18
2020/07/30 11:16:00 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:16:00 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2020/07/30 11:16:00 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2020/07/30 11:16:00 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2020/07/30 11:16:00 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer (no changes)
2020/07/30 11:16:00 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2020/07/30 11:16:00 [DEBUG] pruning unused provider.bizfly
2020/07/30 11:16:00 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer with new graph:
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:16:00 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2020/07/30 11:16:00 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2020/07/30 11:16:00 [TRACE] Completed graph transform *terraform.graphTransformerMulti (no changes)
2020/07/30 11:16:00 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2020/07/30 11:16:00 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2020/07/30 11:16:00 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/30 11:16:00 [DEBUG] ReferenceTransformer: "var.login" references: []
2020/07/30 11:16:00 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/30 11:16:00 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2020/07/30 11:16:00 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2020/07/30 11:16:00 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/30 11:16:00 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/30 11:16:00 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2020/07/30 11:16:00 [TRACE] Completed graph transform *terraform.CloseProviderTransformer (no changes)
2020/07/30 11:16:00 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/30 11:16:00 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/07/30 11:16:00 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2020/07/30 11:16:00 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer (no changes)
2020/07/30 11:16:00 [DEBUG] Starting graph walk: walkRefresh
2020/07/30 11:16:00 [TRACE] dag/walk: updating graph
2020/07/30 11:16:00 [TRACE] dag/walk: added new vertex: "var.login"
2020/07/30 11:16:00 [TRACE] dag/walk: visiting "var.login"
2020/07/30 11:16:00 [TRACE] vertex "var.login": starting visit (*terraform.NodeRootVariable)
2020/07/30 11:16:00 [TRACE] vertex "var.login": evaluating
2020/07/30 11:16:00 [TRACE] [walkRefresh] Entering eval tree: var.login
2020/07/30 11:16:00 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:16:00 [TRACE] [walkRefresh] Exiting eval tree: var.login
2020/07/30 11:16:00 [TRACE] vertex "var.login": visit complete
2020/07/30 11:16:00 [INFO] backend/local: apply calling Plan
2020/07/30 11:16:00 [INFO] terraform: building graph: GraphTypePlan
2020/07/30 11:16:00 [TRACE] Executing graph transform *terraform.ConfigTransformer
2020/07/30 11:16:00 [TRACE] ConfigTransformer: Starting for path: 
2020/07/30 11:16:00 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
  ------
2020/07/30 11:16:00 [TRACE] Executing graph transform *terraform.LocalTransformer
2020/07/30 11:16:00 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2020/07/30 11:16:00 [TRACE] Executing graph transform *terraform.OutputTransformer
2020/07/30 11:16:00 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2020/07/30 11:16:00 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2020/07/30 11:16:00 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2020/07/30 11:16:00 [TRACE] Executing graph transform *terraform.StateTransformer
2020/07/30 11:16:00 [TRACE] StateTransformer: state is empty, so nothing to do
2020/07/30 11:16:00 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2020/07/30 11:16:00 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2020/07/30 11:16:00 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2020/07/30 11:16:00 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2020/07/30 11:16:00 [TRACE] AttachResourceConfigTransformer: attaching to "bizfly_instance.test" (*terraform.NodePlannableResource) config from main.tf:7,1-34
2020/07/30 11:16:00 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2020/07/30 11:16:00 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/30 11:16:00 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/30 11:16:00 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2020/07/30 11:16:00 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:16:00 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2020/07/30 11:16:00 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2020/07/30 11:16:00 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2020/07/30 11:16:00 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2020/07/30 11:16:00 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2020/07/30 11:16:00 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2020/07/30 11:16:00 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2020/07/30 11:16:00 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2020/07/30 11:16:00 [TRACE] ProviderConfigTransformer: attaching to "provider.bizfly" provider configuration from main.tf:1,1-18
2020/07/30 11:16:00 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:16:00 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2020/07/30 11:16:00 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2020/07/30 11:16:00 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2020/07/30 11:16:00 [TRACE] ProviderTransformer: bizfly_instance.test is provided by provider.bizfly or inherited equivalent
2020/07/30 11:16:00 [TRACE] ProviderTransformer: exact match for provider.bizfly serving bizfly_instance.test
2020/07/30 11:16:00 [DEBUG] ProviderTransformer: "bizfly_instance.test" (*terraform.NodePlannableResource) needs provider.bizfly
2020/07/30 11:16:00 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:16:00 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2020/07/30 11:16:00 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2020/07/30 11:16:00 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2020/07/30 11:16:00 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2020/07/30 11:16:00 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:16:00 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2020/07/30 11:16:00 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2020/07/30 11:16:00 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2020/07/30 11:16:00 [TRACE] AttachSchemaTransformer: attaching resource schema to bizfly_instance.test
2020/07/30 11:16:00 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.bizfly
2020/07/30 11:16:00 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2020/07/30 11:16:00 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/30 11:16:00 [DEBUG] ReferenceTransformer: "var.login" references: []
2020/07/30 11:16:00 [DEBUG] ReferenceTransformer: "provider.bizfly" references: []
2020/07/30 11:16:00 [DEBUG] ReferenceTransformer: "bizfly_instance.test" references: []
2020/07/30 11:16:00 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/30 11:16:00 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2020/07/30 11:16:00 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:16:00 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/30 11:16:00 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/30 11:16:00 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2020/07/30 11:16:00 [TRACE] ForcedCBDTransformer: "bizfly_instance.test" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2020/07/30 11:16:00 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2020/07/30 11:16:00 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2020/07/30 11:16:00 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
    bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:16:00 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2020/07/30 11:16:00 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer (no changes)
2020/07/30 11:16:00 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/30 11:16:00 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
    bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.bizfly (close) - *terraform.graphNodeCloseProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:16:00 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2020/07/30 11:16:00 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodePlannableResource
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
    bizfly_instance.test - *terraform.NodePlannableResource
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.bizfly (close) - *terraform.graphNodeCloseProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:16:00 [DEBUG] Starting graph walk: walkPlan
2020/07/30 11:16:00 [TRACE] dag/walk: updating graph
2020/07/30 11:16:00 [TRACE] dag/walk: added new vertex: "root"
2020/07/30 11:16:00 [TRACE] dag/walk: added new vertex: "bizfly_instance.test"
2020/07/30 11:16:00 [TRACE] dag/walk: added new vertex: "var.login"
2020/07/30 11:16:00 [TRACE] dag/walk: added new vertex: "provider.bizfly"
2020/07/30 11:16:00 [TRACE] dag/walk: added new vertex: "meta.count-boundary (EachMode fixup)"
2020/07/30 11:16:00 [TRACE] dag/walk: added new vertex: "provider.bizfly (close)"
2020/07/30 11:16:00 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "var.login"
2020/07/30 11:16:00 [TRACE] dag/walk: added edge: "provider.bizfly (close)" waiting on "bizfly_instance.test"
2020/07/30 11:16:00 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (EachMode fixup)"
2020/07/30 11:16:00 [TRACE] dag/walk: added edge: "root" waiting on "provider.bizfly (close)"
2020/07/30 11:16:00 [TRACE] dag/walk: added edge: "bizfly_instance.test" waiting on "provider.bizfly"
2020/07/30 11:16:00 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "bizfly_instance.test"
2020/07/30 11:16:00 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (EachMode fixup)", sending new deps
2020/07/30 11:16:00 [TRACE] dag/walk: dependencies changed for "provider.bizfly (close)", sending new deps
2020/07/30 11:16:00 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2020/07/30 11:16:00 [TRACE] dag/walk: dependencies changed for "bizfly_instance.test", sending new deps
2020/07/30 11:16:00 [TRACE] dag/walk: visiting "var.login"
2020/07/30 11:16:00 [TRACE] vertex "var.login": starting visit (*terraform.NodeRootVariable)
2020/07/30 11:16:00 [TRACE] vertex "var.login": evaluating
2020/07/30 11:16:00 [TRACE] dag/walk: visiting "provider.bizfly"
2020/07/30 11:16:00 [TRACE] [walkPlan] Entering eval tree: var.login
2020/07/30 11:16:00 [TRACE] vertex "provider.bizfly": starting visit (*terraform.NodeApplyableProvider)
2020/07/30 11:16:00 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:16:00 [TRACE] [walkPlan] Exiting eval tree: var.login
2020/07/30 11:16:00 [TRACE] vertex "provider.bizfly": evaluating
2020/07/30 11:16:00 [TRACE] vertex "var.login": visit complete
2020/07/30 11:16:00 [TRACE] [walkPlan] Entering eval tree: provider.bizfly
2020/07/30 11:16:00 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:16:00 [TRACE] <root>: eval: *terraform.EvalInitProvider
2020-07-30T11:16:00.217+0700 [INFO]  plugin: configuring client automatic mTLS
2020-07-30T11:16:00.243+0700 [DEBUG] plugin: starting plugin: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly args=[/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly]
2020-07-30T11:16:00.247+0700 [DEBUG] plugin: plugin started: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=51541
2020-07-30T11:16:00.247+0700 [DEBUG] plugin: waiting for RPC address: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly
2020-07-30T11:16:00.264+0700 [INFO]  plugin.terraform-provider-bizfly: configuring server automatic mTLS: timestamp=2020-07-30T11:16:00.264+0700
2020-07-30T11:16:00.291+0700 [DEBUG] plugin.terraform-provider-bizfly: plugin address: address=/var/folders/0r/zdwrk7wn22vd_g32twvblrpc0000gn/T/plugin270846832 network=unix timestamp=2020-07-30T11:16:00.291+0700
2020-07-30T11:16:00.291+0700 [DEBUG] plugin: using plugin: version=5
2020/07/30 11:16:00 [TRACE] BuiltinEvalContext: Initialized "bizfly" provider for provider.bizfly
2020/07/30 11:16:00 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:16:00 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:16:00 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/07/30 11:16:00 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:16:00 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020-07-30T11:16:00.346+0700 [TRACE] plugin.stdio: waiting for stdio data
2020/07/30 11:16:00 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/07/30 11:16:00 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:16:00 [TRACE] <root>: eval: *terraform.EvalConfigProvider
2020/07/30 11:16:00 [TRACE] buildProviderConfig for provider.bizfly: using explicit config only
2020/07/30 11:16:00 [TRACE] GRPCProvider: GetSchema
2020/07/30 11:16:00 [TRACE] GRPCProvider: Configure
2020/07/30 11:16:01 [TRACE] [walkPlan] Exiting eval tree: provider.bizfly
2020/07/30 11:16:01 [TRACE] vertex "provider.bizfly": visit complete
2020/07/30 11:16:01 [TRACE] dag/walk: visiting "bizfly_instance.test"
2020/07/30 11:16:01 [TRACE] vertex "bizfly_instance.test": starting visit (*terraform.NodePlannableResource)
2020/07/30 11:16:01 [TRACE] vertex "bizfly_instance.test": evaluating
2020/07/30 11:16:01 [TRACE] [walkPlan] Entering eval tree: bizfly_instance.test
2020/07/30 11:16:01 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/07/30 11:16:01 [TRACE] [walkPlan] Exiting eval tree: bizfly_instance.test
2020/07/30 11:16:01 [TRACE] vertex "bizfly_instance.test": expanding dynamic subgraph
2020/07/30 11:16:01 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/07/30 11:16:01 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResourceInstance
  ------
2020/07/30 11:16:01 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/07/30 11:16:01 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/07/30 11:16:01 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/30 11:16:01 [DEBUG] Resource instance state not found for node "bizfly_instance.test", instance bizfly_instance.test
2020/07/30 11:16:01 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/30 11:16:01 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/30 11:16:01 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/30 11:16:01 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/30 11:16:01 [DEBUG] ReferenceTransformer: "bizfly_instance.test" references: []
2020/07/30 11:16:01 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/30 11:16:01 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/30 11:16:01 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/07/30 11:16:01 [TRACE] vertex "bizfly_instance.test": entering dynamic subgraph
2020/07/30 11:16:01 [TRACE] dag/walk: updating graph
2020/07/30 11:16:01 [TRACE] dag/walk: added new vertex: "bizfly_instance.test"
2020/07/30 11:16:01 [TRACE] dag/walk: visiting "bizfly_instance.test"
2020/07/30 11:16:01 [TRACE] vertex "bizfly_instance.test": starting visit (*terraform.NodePlannableResourceInstance)
2020/07/30 11:16:01 [TRACE] vertex "bizfly_instance.test": evaluating
2020/07/30 11:16:01 [TRACE] [walkPlan] Entering eval tree: bizfly_instance.test
2020/07/30 11:16:01 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:16:01 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 11:16:01 [TRACE] <root>: eval: *terraform.EvalReadState
2020/07/30 11:16:01 [TRACE] EvalReadState: reading state for bizfly_instance.test
2020/07/30 11:16:01 [TRACE] EvalReadState: no state present for bizfly_instance.test
2020/07/30 11:16:01 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2020/07/30 11:16:01 [TRACE] <root>: eval: *terraform.EvalDiff
2020/07/30 11:16:01 [TRACE] Re-validating config for "bizfly_instance.test"
2020/07/30 11:16:01 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/07/30 11:16:01 [TRACE] GRPCProvider: PlanResourceChange
2020/07/30 11:16:01 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2020/07/30 11:16:01 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/07/30 11:16:01 [TRACE] EvalWriteState: writing current state object for bizfly_instance.test
2020/07/30 11:16:01 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/07/30 11:16:01 [TRACE] EvalWriteDiff: recorded Create change for bizfly_instance.test
2020/07/30 11:16:01 [TRACE] [walkPlan] Exiting eval tree: bizfly_instance.test
2020/07/30 11:16:01 [TRACE] vertex "bizfly_instance.test": visit complete
2020/07/30 11:16:01 [TRACE] vertex "bizfly_instance.test": dynamic subgraph completed successfully
2020/07/30 11:16:01 [TRACE] vertex "bizfly_instance.test": visit complete
2020/07/30 11:16:01 [TRACE] dag/walk: visiting "provider.bizfly (close)"
2020/07/30 11:16:01 [TRACE] vertex "provider.bizfly (close)": starting visit (*terraform.graphNodeCloseProvider)
2020/07/30 11:16:01 [TRACE] vertex "provider.bizfly (close)": evaluating
2020/07/30 11:16:01 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2020/07/30 11:16:01 [TRACE] [walkPlan] Entering eval tree: provider.bizfly (close)
2020/07/30 11:16:01 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2020/07/30 11:16:01 [TRACE] <root>: eval: *terraform.EvalCloseProvider
2020/07/30 11:16:01 [TRACE] vertex "meta.count-boundary (EachMode fixup)": evaluating
2020/07/30 11:16:01 [TRACE] GRPCProvider: Close
2020/07/30 11:16:01 [TRACE] [walkPlan] Entering eval tree: meta.count-boundary (EachMode fixup)
2020/07/30 11:16:01 [TRACE] <root>: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2020/07/30 11:16:01 [TRACE] [walkPlan] Exiting eval tree: meta.count-boundary (EachMode fixup)
2020/07/30 11:16:01 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2020-07-30T11:16:01.637+0700 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2020-07-30T11:16:01.641+0700 [DEBUG] plugin: plugin process exited: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=51541
2020-07-30T11:16:01.641+0700 [DEBUG] plugin: plugin exited
2020/07/30 11:16:01 [TRACE] [walkPlan] Exiting eval tree: provider.bizfly (close)
2020/07/30 11:16:01 [TRACE] vertex "provider.bizfly (close)": visit complete
2020/07/30 11:16:01 [TRACE] dag/walk: visiting "root"
2020/07/30 11:16:01 [TRACE] vertex "root": starting visit (terraform.graphNodeRoot)
2020/07/30 11:16:01 [TRACE] vertex "root": visit complete
2020/07/30 11:16:01 [DEBUG] command: asking for input: "Do you want to perform these actions?"
2020/07/30 11:16:02 [INFO] backend/local: apply calling Apply
2020/07/30 11:16:02 [INFO] terraform: building graph: GraphTypeApply
2020/07/30 11:16:02 [TRACE] Executing graph transform *terraform.ConfigTransformer
2020/07/30 11:16:02 [TRACE] ConfigTransformer: Starting for path: 
2020/07/30 11:16:02 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
  ------
2020/07/30 11:16:02 [TRACE] Executing graph transform *terraform.DiffTransformer
2020/07/30 11:16:02 [TRACE] DiffTransformer starting
2020/07/30 11:16:02 [TRACE] DiffTransformer: found Create change for bizfly_instance.test 
2020/07/30 11:16:02 [TRACE] DiffTransformer: bizfly_instance.test will be represented by bizfly_instance.test
2020/07/30 11:16:02 [TRACE] DiffTransformer complete
2020/07/30 11:16:02 [TRACE] Completed graph transform *terraform.DiffTransformer with new graph:
  bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
  ------
2020/07/30 11:16:02 [TRACE] Executing graph transform *terraform.OrphanResourceTransformer
2020/07/30 11:16:02 [TRACE] Completed graph transform *terraform.OrphanResourceTransformer (no changes)
2020/07/30 11:16:02 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2020/07/30 11:16:02 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2020/07/30 11:16:02 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2020/07/30 11:16:02 [TRACE] AttachResourceConfigTransformer: attaching to "bizfly_instance.test (prepare state)" (*terraform.NodeApplyableResource) config from main.tf:7,1-34
2020/07/30 11:16:02 [TRACE] AttachResourceConfigTransformer: attaching to "bizfly_instance.test" (*terraform.NodeApplyableResourceInstance) config from main.tf:7,1-34
2020/07/30 11:16:02 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2020/07/30 11:16:02 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/30 11:16:02 [DEBUG] Resource state not found for node "bizfly_instance.test", instance bizfly_instance.test
2020/07/30 11:16:02 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/30 11:16:02 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2020/07/30 11:16:02 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2020/07/30 11:16:02 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2020/07/30 11:16:02 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2020/07/30 11:16:02 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2020/07/30 11:16:02 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
  bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:16:02 [TRACE] Executing graph transform *terraform.LocalTransformer
2020/07/30 11:16:02 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2020/07/30 11:16:02 [TRACE] Executing graph transform *terraform.OutputTransformer
2020/07/30 11:16:02 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2020/07/30 11:16:02 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2020/07/30 11:16:02 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2020/07/30 11:16:02 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2020/07/30 11:16:02 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2020/07/30 11:16:02 [TRACE] ProviderConfigTransformer: attaching to "provider.bizfly" provider configuration from main.tf:1,1-18
2020/07/30 11:16:02 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:16:02 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2020/07/30 11:16:02 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2020/07/30 11:16:02 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2020/07/30 11:16:02 [TRACE] ProviderTransformer: bizfly_instance.test is provided by provider.bizfly or inherited equivalent
2020/07/30 11:16:02 [TRACE] ProviderTransformer: bizfly_instance.test (prepare state) is provided by provider.bizfly or inherited equivalent
2020/07/30 11:16:02 [TRACE] ProviderTransformer: exact match for provider.bizfly serving bizfly_instance.test
2020/07/30 11:16:02 [DEBUG] ProviderTransformer: "bizfly_instance.test" (*terraform.NodeApplyableResourceInstance) needs provider.bizfly
2020/07/30 11:16:02 [TRACE] ProviderTransformer: exact match for provider.bizfly serving bizfly_instance.test (prepare state)
2020/07/30 11:16:02 [DEBUG] ProviderTransformer: "bizfly_instance.test (prepare state)" (*terraform.NodeApplyableResource) needs provider.bizfly
2020/07/30 11:16:02 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:16:02 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2020/07/30 11:16:02 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2020/07/30 11:16:02 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2020/07/30 11:16:02 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2020/07/30 11:16:02 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:16:02 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2020/07/30 11:16:02 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2020/07/30 11:16:02 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2020/07/30 11:16:02 [TRACE] AttachSchemaTransformer: attaching resource schema to bizfly_instance.test (prepare state)
2020/07/30 11:16:02 [TRACE] AttachSchemaTransformer: attaching resource schema to bizfly_instance.test
2020/07/30 11:16:02 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.bizfly
2020/07/30 11:16:02 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2020/07/30 11:16:02 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/30 11:16:02 [DEBUG] ReferenceTransformer: "bizfly_instance.test (prepare state)" references: []
2020/07/30 11:16:02 [DEBUG] ReferenceTransformer: "bizfly_instance.test" references: []
2020/07/30 11:16:02 [DEBUG] ReferenceTransformer: "var.login" references: []
2020/07/30 11:16:02 [DEBUG] ReferenceTransformer: "provider.bizfly" references: []
2020/07/30 11:16:02 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/30 11:16:02 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2020/07/30 11:16:02 [TRACE] AttachDependenciesTransformer: bizfly_instance.test depends on []
2020/07/30 11:16:02 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2020/07/30 11:16:02 [TRACE] Executing graph transform *terraform.DestroyEdgeTransformer
2020/07/30 11:16:02 [TRACE] Completed graph transform *terraform.DestroyEdgeTransformer (no changes)
2020/07/30 11:16:02 [TRACE] Executing graph transform *terraform.CBDEdgeTransformer
2020/07/30 11:16:02 [TRACE] Completed graph transform *terraform.CBDEdgeTransformer (no changes)
2020/07/30 11:16:02 [TRACE] Executing graph transform *terraform.PruneUnusedValuesTransformer
2020/07/30 11:16:02 [TRACE] Completed graph transform *terraform.PruneUnusedValuesTransformer (no changes)
2020/07/30 11:16:02 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2020/07/30 11:16:02 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:16:02 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/30 11:16:02 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/30 11:16:02 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2020/07/30 11:16:02 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
    bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:16:02 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2020/07/30 11:16:02 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer (no changes)
2020/07/30 11:16:02 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/30 11:16:02 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
  bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
    bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.bizfly (close) - *terraform.graphNodeCloseProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:16:02 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2020/07/30 11:16:02 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
    bizfly_instance.test - *terraform.NodeApplyableResourceInstance
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.bizfly (close) - *terraform.graphNodeCloseProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:16:02 [DEBUG] Starting graph walk: walkApply
2020/07/30 11:16:02 [TRACE] dag/walk: updating graph
2020/07/30 11:16:02 [TRACE] dag/walk: added new vertex: "bizfly_instance.test"
2020/07/30 11:16:02 [TRACE] dag/walk: added new vertex: "var.login"
2020/07/30 11:16:02 [TRACE] dag/walk: added new vertex: "provider.bizfly"
2020/07/30 11:16:02 [TRACE] dag/walk: added new vertex: "meta.count-boundary (EachMode fixup)"
2020/07/30 11:16:02 [TRACE] dag/walk: added new vertex: "provider.bizfly (close)"
2020/07/30 11:16:02 [TRACE] dag/walk: added new vertex: "root"
2020/07/30 11:16:02 [TRACE] dag/walk: added new vertex: "bizfly_instance.test (prepare state)"
2020/07/30 11:16:02 [TRACE] dag/walk: added edge: "bizfly_instance.test (prepare state)" waiting on "provider.bizfly"
2020/07/30 11:16:02 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "var.login"
2020/07/30 11:16:02 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (EachMode fixup)"
2020/07/30 11:16:02 [TRACE] dag/walk: added edge: "root" waiting on "provider.bizfly (close)"
2020/07/30 11:16:02 [TRACE] dag/walk: added edge: "bizfly_instance.test" waiting on "bizfly_instance.test (prepare state)"
2020/07/30 11:16:02 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "bizfly_instance.test"
2020/07/30 11:16:02 [TRACE] dag/walk: added edge: "provider.bizfly (close)" waiting on "bizfly_instance.test"
2020/07/30 11:16:02 [TRACE] dag/walk: dependencies changed for "bizfly_instance.test (prepare state)", sending new deps
2020/07/30 11:16:02 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (EachMode fixup)", sending new deps
2020/07/30 11:16:02 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2020/07/30 11:16:02 [TRACE] dag/walk: dependencies changed for "bizfly_instance.test", sending new deps
2020/07/30 11:16:02 [TRACE] dag/walk: dependencies changed for "provider.bizfly (close)", sending new deps
2020/07/30 11:16:02 [TRACE] dag/walk: visiting "var.login"
2020/07/30 11:16:02 [TRACE] dag/walk: visiting "provider.bizfly"
2020/07/30 11:16:02 [TRACE] vertex "var.login": starting visit (*terraform.NodeRootVariable)
2020/07/30 11:16:02 [TRACE] vertex "provider.bizfly": starting visit (*terraform.NodeApplyableProvider)
2020/07/30 11:16:02 [TRACE] vertex "var.login": evaluating
2020/07/30 11:16:02 [TRACE] [walkApply] Entering eval tree: var.login
2020/07/30 11:16:02 [TRACE] vertex "provider.bizfly": evaluating
2020/07/30 11:16:02 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:16:02 [TRACE] [walkApply] Entering eval tree: provider.bizfly
2020/07/30 11:16:02 [TRACE] [walkApply] Exiting eval tree: var.login
2020/07/30 11:16:02 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:16:02 [TRACE] <root>: eval: *terraform.EvalInitProvider
2020/07/30 11:16:02 [TRACE] vertex "var.login": visit complete
2020-07-30T11:16:02.935+0700 [INFO]  plugin: configuring client automatic mTLS
2020-07-30T11:16:02.963+0700 [DEBUG] plugin: starting plugin: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly args=[/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly]
2020-07-30T11:16:02.967+0700 [DEBUG] plugin: plugin started: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=51546
2020-07-30T11:16:02.967+0700 [DEBUG] plugin: waiting for RPC address: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly
2020-07-30T11:16:02.984+0700 [INFO]  plugin.terraform-provider-bizfly: configuring server automatic mTLS: timestamp=2020-07-30T11:16:02.984+0700
2020-07-30T11:16:03.010+0700 [DEBUG] plugin: using plugin: version=5
2020-07-30T11:16:03.010+0700 [DEBUG] plugin.terraform-provider-bizfly: plugin address: address=/var/folders/0r/zdwrk7wn22vd_g32twvblrpc0000gn/T/plugin524263561 network=unix timestamp=2020-07-30T11:16:03.010+0700
2020/07/30 11:16:03 [TRACE] BuiltinEvalContext: Initialized "bizfly" provider for provider.bizfly
2020/07/30 11:16:03 [TRACE] <root>: eval: terraform.EvalNoop
2020-07-30T11:16:03.064+0700 [TRACE] plugin.stdio: waiting for stdio data
2020/07/30 11:16:03 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:16:03 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/07/30 11:16:03 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:16:03 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 11:16:03 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/07/30 11:16:03 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:16:03 [TRACE] <root>: eval: *terraform.EvalConfigProvider
2020/07/30 11:16:03 [TRACE] buildProviderConfig for provider.bizfly: using explicit config only
2020/07/30 11:16:03 [TRACE] GRPCProvider: GetSchema
2020/07/30 11:16:03 [TRACE] GRPCProvider: Configure
2020/07/30 11:16:04 [TRACE] [walkApply] Exiting eval tree: provider.bizfly
2020/07/30 11:16:04 [TRACE] vertex "provider.bizfly": visit complete
2020/07/30 11:16:04 [TRACE] dag/walk: visiting "bizfly_instance.test (prepare state)"
2020/07/30 11:16:04 [TRACE] vertex "bizfly_instance.test (prepare state)": starting visit (*terraform.NodeApplyableResource)
2020/07/30 11:16:04 [TRACE] vertex "bizfly_instance.test (prepare state)": evaluating
2020/07/30 11:16:04 [TRACE] [walkApply] Entering eval tree: bizfly_instance.test (prepare state)
2020/07/30 11:16:04 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/07/30 11:16:04 [TRACE] [walkApply] Exiting eval tree: bizfly_instance.test (prepare state)
2020/07/30 11:16:04 [TRACE] vertex "bizfly_instance.test (prepare state)": visit complete
2020/07/30 11:16:04 [TRACE] dag/walk: visiting "bizfly_instance.test"
2020/07/30 11:16:04 [TRACE] vertex "bizfly_instance.test": starting visit (*terraform.NodeApplyableResourceInstance)
2020/07/30 11:16:04 [TRACE] vertex "bizfly_instance.test": evaluating
2020/07/30 11:16:04 [TRACE] [walkApply] Entering eval tree: bizfly_instance.test
2020/07/30 11:16:04 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:16:04 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 11:16:04 [TRACE] <root>: eval: *terraform.EvalReadDiff
2020/07/30 11:16:04 [TRACE] EvalReadDiff: Read Create change from plan for bizfly_instance.test
2020/07/30 11:16:04 [TRACE] <root>: eval: *terraform.EvalIf
2020/07/30 11:16:04 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:16:04 [TRACE] <root>: eval: *terraform.EvalIf
2020/07/30 11:16:04 [TRACE] <root>: eval: *terraform.EvalReadState
2020/07/30 11:16:04 [TRACE] EvalReadState: reading state for bizfly_instance.test
2020/07/30 11:16:04 [TRACE] EvalReadState: no state present for bizfly_instance.test
2020/07/30 11:16:04 [TRACE] <root>: eval: *terraform.EvalReadDiff
2020/07/30 11:16:04 [TRACE] EvalReadDiff: Read Create change from plan for bizfly_instance.test
2020/07/30 11:16:04 [TRACE] <root>: eval: *terraform.EvalDiff
2020/07/30 11:16:04 [TRACE] Re-validating config for "bizfly_instance.test"
2020/07/30 11:16:04 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/07/30 11:16:04 [TRACE] GRPCProvider: PlanResourceChange
2020/07/30 11:16:04 [TRACE] <root>: eval: *terraform.EvalCheckPlannedChange
2020/07/30 11:16:04 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2020/07/30 11:16:04 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 11:16:04 [TRACE] <root>: eval: *terraform.EvalReadState
2020/07/30 11:16:04 [TRACE] EvalReadState: reading state for bizfly_instance.test
2020/07/30 11:16:04 [TRACE] EvalReadState: no state present for bizfly_instance.test
2020/07/30 11:16:04 [TRACE] <root>: eval: *terraform.EvalReduceDiff
2020/07/30 11:16:04 [TRACE] <root>: eval: *terraform.EvalIf
2020/07/30 11:16:04 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:16:04 [TRACE] <root>: eval: *terraform.EvalApplyPre
2020/07/30 11:16:04 [TRACE] <root>: eval: *terraform.EvalApply
2020/07/30 11:16:04 [DEBUG] bizfly_instance.test: applying the planned Create change
2020/07/30 11:16:04 [TRACE] GRPCProvider: ApplyResourceChange
2020-07-30T11:16:04.334+0700 [TRACE] plugin.stdio: received data: channel=STDOUT len=411
2020-07-30T11:16:04.334+0700 [TRACE] plugin.stdio: waiting for stdio data
2020-07-30T11:16:04.334+0700 [TRACE] plugin.stdio: received data: channel=STDOUT len=27
2020-07-30T11:16:04.334+0700 [TRACE] plugin.stdio: waiting for stdio data
2020-07-30T11:16:04.334+0700 [TRACE] plugin.stdio: received data: channel=STDOUT len=22
2020-07-30T11:16:04.334+0700 [TRACE] plugin.stdio: waiting for stdio data
2020/07/30 11:16:04 [DEBUG] bizfly_instance.test: apply errored, but we're indicating that via the Error pointer rather than returning it: Provider produced inconsistent result after apply: When applying changes to bizfly_instance.test, provider "registry.terraform.io/-/bizfly" produced an unexpected new value for was present, but now absent.

This is a bug in the provider, which should be reported in the provider's own issue tracker.
2020/07/30 11:16:04 [TRACE] <root>: eval: *terraform.EvalMaybeTainted
2020/07/30 11:16:04 [TRACE] EvalMaybeTainted: bizfly_instance.test encountered an error during creation, so it is now marked as tainted
2020/07/30 11:16:04 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/07/30 11:16:04 [TRACE] EvalWriteState: removing state object for bizfly_instance.test
2020/07/30 11:16:04 [TRACE] <root>: eval: *terraform.EvalApplyProvisioners
2020/07/30 11:16:04 [TRACE] EvalApplyProvisioners: bizfly_instance.test has no state, so skipping provisioners
2020/07/30 11:16:04 [TRACE] <root>: eval: *terraform.EvalMaybeTainted
2020/07/30 11:16:04 [TRACE] EvalMaybeTainted: bizfly_instance.test encountered an error during creation, so it is now marked as tainted
2020/07/30 11:16:04 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/07/30 11:16:04 [TRACE] EvalWriteState: removing state object for bizfly_instance.test
2020/07/30 11:16:04 [TRACE] <root>: eval: *terraform.EvalIf
2020/07/30 11:16:04 [TRACE] <root>: eval: *terraform.EvalIf
2020/07/30 11:16:04 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/07/30 11:16:04 [TRACE] <root>: eval: *terraform.EvalApplyPost
2020/07/30 11:16:04 [ERROR] <root>: eval: *terraform.EvalApplyPost, err: Provider produced inconsistent result after apply: When applying changes to bizfly_instance.test, provider "registry.terraform.io/-/bizfly" produced an unexpected new value for was present, but now absent.

This is a bug in the provider, which should be reported in the provider's own issue tracker.
2020/07/30 11:16:04 [ERROR] <root>: eval: *terraform.EvalSequence, err: Provider produced inconsistent result after apply: When applying changes to bizfly_instance.test, provider "registry.terraform.io/-/bizfly" produced an unexpected new value for was present, but now absent.

This is a bug in the provider, which should be reported in the provider's own issue tracker.
2020/07/30 11:16:04 [TRACE] [walkApply] Exiting eval tree: bizfly_instance.test
2020/07/30 11:16:04 [TRACE] vertex "bizfly_instance.test": visit complete
2020/07/30 11:16:04 [TRACE] dag/walk: upstream of "provider.bizfly (close)" errored, so skipping
2020/07/30 11:16:04 [TRACE] dag/walk: upstream of "meta.count-boundary (EachMode fixup)" errored, so skipping
2020/07/30 11:16:04 [TRACE] dag/walk: upstream of "root" errored, so skipping
2020/07/30 11:16:04 [TRACE] statemgr.Filesystem: not making a backup, because the new snapshot is identical to the old
2020/07/30 11:16:04 [TRACE] statemgr.Filesystem: no state changes since last snapshot
2020/07/30 11:16:04 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2020/07/30 11:16:04 [TRACE] statemgr.Filesystem: removing lock metadata file .terraform.tfstate.lock.info
2020/07/30 11:16:04 [TRACE] statemgr.Filesystem: unlocking terraform.tfstate using fcntl flock
2020-07-30T11:16:04.350+0700 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2020-07-30T11:16:04.356+0700 [DEBUG] plugin: plugin process exited: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=51546
2020-07-30T11:16:04.356+0700 [DEBUG] plugin: plugin exited
2020/07/30 11:32:38 [INFO] Terraform version: 0.12.29  
2020/07/30 11:32:38 [INFO] Go runtime version: go1.13.14
2020/07/30 11:32:38 [INFO] CLI args: []string{"/usr/local/bin/terraform", "init"}
2020/07/30 11:32:38 [DEBUG] Attempting to open CLI config file: /Users/hung/.terraformrc
2020/07/30 11:32:38 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2020/07/30 11:32:38 [INFO] CLI command args: []string{"init"}
2020/07/30 11:32:38 [TRACE] Meta.Backend: no config given or present on disk, so returning nil config
2020/07/30 11:32:38 [TRACE] Meta.Backend: backend has not previously been initialized in this working directory
2020/07/30 11:32:38 [DEBUG] New state was assigned lineage "43df5ada-e758-1d61-9d9d-1eb908d3e672"
2020/07/30 11:32:38 [TRACE] Meta.Backend: using default local state only (no backend configuration, and no existing initialized backend)
2020/07/30 11:32:38 [TRACE] Meta.Backend: instantiated backend of type <nil>
2020/07/30 11:32:38 [DEBUG] checking for provider in "."
2020/07/30 11:32:38 [WARN] found legacy provider "terraform-provider-bizfly"
2020/07/30 11:32:38 [DEBUG] checking for provider in "/usr/local/bin"
2020/07/30 11:32:38 [DEBUG] checking for provider in ".terraform/plugins/darwin_amd64"
2020/07/30 11:32:38 [DEBUG] found valid plugin: "bizfly", "0.0.0", "/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly"
2020/07/30 11:32:38 [DEBUG] checking for provisioner in "."
2020/07/30 11:32:38 [DEBUG] checking for provisioner in "/usr/local/bin"
2020/07/30 11:32:38 [DEBUG] checking for provisioner in ".terraform/plugins/darwin_amd64"
2020/07/30 11:32:38 [TRACE] Meta.Backend: backend <nil> does not support operations, so wrapping it in a local backend
2020/07/30 11:32:38 [TRACE] backend/local: state manager for workspace "default" will:
 - read initial snapshot from terraform.tfstate
 - write new snapshots to terraform.tfstate
 - create any backup at terraform.tfstate.backup
2020/07/30 11:32:38 [TRACE] statemgr.Filesystem: reading initial snapshot from terraform.tfstate
2020/07/30 11:32:38 [TRACE] statemgr.Filesystem: read snapshot with lineage "8e1934d5-1d8f-e9a8-58e8-6c54c3aa209a" serial 1
2020/07/30 11:32:38 [DEBUG] checking for provider in "."
2020/07/30 11:32:38 [WARN] found legacy provider "terraform-provider-bizfly"
2020/07/30 11:32:38 [DEBUG] checking for provider in "/usr/local/bin"
2020/07/30 11:32:38 [DEBUG] checking for provider in ".terraform/plugins/darwin_amd64"
2020/07/30 11:32:38 [DEBUG] found valid plugin: "bizfly", "0.0.0", "/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly"
2020/07/30 11:32:38 [DEBUG] plugin requirements: "bizfly"=""
2020/07/30 11:32:38 [DEBUG] checking for provider in "."
2020/07/30 11:32:38 [WARN] found legacy provider "terraform-provider-bizfly"
2020/07/30 11:32:38 [DEBUG] checking for provider in "/usr/local/bin"
2020/07/30 11:32:38 [DEBUG] checking for provider in ".terraform/plugins/darwin_amd64"
2020/07/30 11:32:38 [DEBUG] found valid plugin: "bizfly", "0.0.0", "/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly"
2020/07/30 11:32:38 [DEBUG] checking for provider in ".terraform/plugins/darwin_amd64"
2020/07/30 11:32:40 [INFO] Terraform version: 0.12.29  
2020/07/30 11:32:40 [INFO] Go runtime version: go1.13.14
2020/07/30 11:32:40 [INFO] CLI args: []string{"/usr/local/bin/terraform", "plan"}
2020/07/30 11:32:40 [DEBUG] Attempting to open CLI config file: /Users/hung/.terraformrc
2020/07/30 11:32:40 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2020/07/30 11:32:40 [INFO] CLI command args: []string{"plan"}
2020/07/30 11:32:40 [TRACE] Meta.Backend: no config given or present on disk, so returning nil config
2020/07/30 11:32:40 [TRACE] Meta.Backend: backend has not previously been initialized in this working directory
2020/07/30 11:32:40 [DEBUG] New state was assigned lineage "075f1294-e318-8289-560e-199c78d788c8"
2020/07/30 11:32:40 [TRACE] Meta.Backend: using default local state only (no backend configuration, and no existing initialized backend)
2020/07/30 11:32:40 [TRACE] Meta.Backend: instantiated backend of type <nil>
2020/07/30 11:32:40 [DEBUG] checking for provider in "."
2020/07/30 11:32:40 [WARN] found legacy provider "terraform-provider-bizfly"
2020/07/30 11:32:40 [DEBUG] checking for provider in "/usr/local/bin"
2020/07/30 11:32:40 [DEBUG] checking for provider in ".terraform/plugins/darwin_amd64"
2020/07/30 11:32:40 [DEBUG] found valid plugin: "bizfly", "0.0.0", "/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly"
2020/07/30 11:32:40 [DEBUG] checking for provisioner in "."
2020/07/30 11:32:40 [DEBUG] checking for provisioner in "/usr/local/bin"
2020/07/30 11:32:40 [DEBUG] checking for provisioner in ".terraform/plugins/darwin_amd64"
2020/07/30 11:32:40 [TRACE] Meta.Backend: backend <nil> does not support operations, so wrapping it in a local backend
2020/07/30 11:32:40 [INFO] backend/local: starting Plan operation
2020/07/30 11:32:40 [TRACE] backend/local: requesting state manager for workspace "default"
2020/07/30 11:32:40 [TRACE] backend/local: state manager for workspace "default" will:
 - read initial snapshot from terraform.tfstate
 - write new snapshots to terraform.tfstate
 - create any backup at terraform.tfstate.backup
2020/07/30 11:32:40 [TRACE] backend/local: requesting state lock for workspace "default"
2020/07/30 11:32:40 [TRACE] statemgr.Filesystem: preparing to manage state snapshots at terraform.tfstate
2020/07/30 11:32:40 [TRACE] statemgr.Filesystem: existing snapshot has lineage "8e1934d5-1d8f-e9a8-58e8-6c54c3aa209a" serial 1
2020/07/30 11:32:40 [TRACE] statemgr.Filesystem: locking terraform.tfstate using fcntl flock
2020/07/30 11:32:40 [TRACE] statemgr.Filesystem: writing lock metadata to .terraform.tfstate.lock.info
2020/07/30 11:32:40 [TRACE] backend/local: reading remote state for workspace "default"
2020/07/30 11:32:40 [TRACE] statemgr.Filesystem: reading latest snapshot from terraform.tfstate
2020/07/30 11:32:40 [TRACE] statemgr.Filesystem: read snapshot with lineage "8e1934d5-1d8f-e9a8-58e8-6c54c3aa209a" serial 1
2020/07/30 11:32:40 [TRACE] backend/local: retrieving local state snapshot for workspace "default"
2020/07/30 11:32:40 [TRACE] backend/local: building context for current working directory
2020/07/30 11:32:40 [TRACE] terraform.NewContext: starting
2020/07/30 11:32:40 [TRACE] terraform.NewContext: resolving provider version selections
2020/07/30 11:32:40 [TRACE] terraform.NewContext: loading provider schemas
2020/07/30 11:32:40 [TRACE] LoadSchemas: retrieving schema for provider type "bizfly"
2020-07-30T11:32:40.877+0700 [INFO]  plugin: configuring client automatic mTLS
2020-07-30T11:32:40.916+0700 [DEBUG] plugin: starting plugin: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly args=[/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly]
2020-07-30T11:32:40.920+0700 [DEBUG] plugin: plugin started: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=56880
2020-07-30T11:32:40.920+0700 [DEBUG] plugin: waiting for RPC address: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly
2020-07-30T11:32:40.938+0700 [INFO]  plugin.terraform-provider-bizfly: configuring server automatic mTLS: timestamp=2020-07-30T11:32:40.938+0700
2020-07-30T11:32:40.964+0700 [DEBUG] plugin.terraform-provider-bizfly: plugin address: address=/var/folders/0r/zdwrk7wn22vd_g32twvblrpc0000gn/T/plugin341764695 network=unix timestamp=2020-07-30T11:32:40.964+0700
2020-07-30T11:32:40.965+0700 [DEBUG] plugin: using plugin: version=5
2020/07/30 11:32:41 [TRACE] GRPCProvider: GetSchema
2020-07-30T11:32:41.024+0700 [TRACE] plugin.stdio: waiting for stdio data
2020/07/30 11:32:41 [TRACE] GRPCProvider: Close
2020-07-30T11:32:41.027+0700 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2020-07-30T11:32:41.029+0700 [DEBUG] plugin: plugin process exited: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=56880
2020-07-30T11:32:41.029+0700 [DEBUG] plugin: plugin exited
2020/07/30 11:32:41 [TRACE] terraform.NewContext: complete
2020/07/30 11:32:41 [TRACE] backend/local: finished building terraform.Context
2020/07/30 11:32:41 [TRACE] backend/local: requesting interactive input, if necessary
2020/07/30 11:32:41 [TRACE] Context.Input: Prompting for provider arguments
2020/07/30 11:32:41 [TRACE] Context.Input: Provider provider.bizfly declared at main.tf:1,1-18
2020/07/30 11:32:41 [TRACE] Context.Input: Input for provider.bizfly: map[string]cty.Value{}
2020/07/30 11:32:41 [TRACE] backend/local: running validation operation
2020/07/30 11:32:41 [INFO] terraform: building graph: GraphTypeValidate
2020/07/30 11:32:41 [TRACE] Executing graph transform *terraform.ConfigTransformer
2020/07/30 11:32:41 [TRACE] ConfigTransformer: Starting for path: 
2020/07/30 11:32:41 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
  ------
2020/07/30 11:32:41 [TRACE] Executing graph transform *terraform.LocalTransformer
2020/07/30 11:32:41 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2020/07/30 11:32:41 [TRACE] Executing graph transform *terraform.OutputTransformer
2020/07/30 11:32:41 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2020/07/30 11:32:41 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2020/07/30 11:32:41 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2020/07/30 11:32:41 [TRACE] Executing graph transform *terraform.StateTransformer
2020/07/30 11:32:41 [TRACE] StateTransformer: state is empty, so nothing to do
2020/07/30 11:32:41 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2020/07/30 11:32:41 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2020/07/30 11:32:41 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2020/07/30 11:32:41 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2020/07/30 11:32:41 [TRACE] AttachResourceConfigTransformer: attaching to "bizfly_instance.test" (*terraform.NodeValidatableResource) config from main.tf:7,1-34
2020/07/30 11:32:41 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2020/07/30 11:32:41 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/30 11:32:41 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/30 11:32:41 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2020/07/30 11:32:41 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:32:41 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2020/07/30 11:32:41 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2020/07/30 11:32:41 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2020/07/30 11:32:41 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2020/07/30 11:32:41 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2020/07/30 11:32:41 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2020/07/30 11:32:41 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2020/07/30 11:32:41 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2020/07/30 11:32:41 [TRACE] ProviderConfigTransformer: attaching to "provider.bizfly" provider configuration from main.tf:1,1-18
2020/07/30 11:32:41 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:32:41 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2020/07/30 11:32:41 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2020/07/30 11:32:41 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2020/07/30 11:32:41 [TRACE] ProviderTransformer: bizfly_instance.test is provided by provider.bizfly or inherited equivalent
2020/07/30 11:32:41 [TRACE] ProviderTransformer: exact match for provider.bizfly serving bizfly_instance.test
2020/07/30 11:32:41 [DEBUG] ProviderTransformer: "bizfly_instance.test" (*terraform.NodeValidatableResource) needs provider.bizfly
2020/07/30 11:32:41 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:32:41 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2020/07/30 11:32:41 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2020/07/30 11:32:41 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2020/07/30 11:32:41 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2020/07/30 11:32:41 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:32:41 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2020/07/30 11:32:41 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2020/07/30 11:32:41 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2020/07/30 11:32:41 [TRACE] AttachSchemaTransformer: attaching resource schema to bizfly_instance.test
2020/07/30 11:32:41 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.bizfly
2020/07/30 11:32:41 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2020/07/30 11:32:41 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/30 11:32:41 [DEBUG] ReferenceTransformer: "bizfly_instance.test" references: []
2020/07/30 11:32:41 [DEBUG] ReferenceTransformer: "var.login" references: []
2020/07/30 11:32:41 [DEBUG] ReferenceTransformer: "provider.bizfly" references: []
2020/07/30 11:32:41 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/30 11:32:41 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2020/07/30 11:32:41 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:32:41 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/30 11:32:41 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/30 11:32:41 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2020/07/30 11:32:41 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2020/07/30 11:32:41 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2020/07/30 11:32:41 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
    bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:32:41 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2020/07/30 11:32:41 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer (no changes)
2020/07/30 11:32:41 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/30 11:32:41 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
    bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.bizfly (close) - *terraform.graphNodeCloseProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:32:41 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2020/07/30 11:32:41 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodeValidatableResource
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
    bizfly_instance.test - *terraform.NodeValidatableResource
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.bizfly (close) - *terraform.graphNodeCloseProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:32:41 [DEBUG] Starting graph walk: walkValidate
2020/07/30 11:32:41 [TRACE] dag/walk: updating graph
2020/07/30 11:32:41 [TRACE] dag/walk: added new vertex: "root"
2020/07/30 11:32:41 [TRACE] dag/walk: added new vertex: "bizfly_instance.test"
2020/07/30 11:32:41 [TRACE] dag/walk: added new vertex: "var.login"
2020/07/30 11:32:41 [TRACE] dag/walk: added new vertex: "provider.bizfly"
2020/07/30 11:32:41 [TRACE] dag/walk: added new vertex: "meta.count-boundary (EachMode fixup)"
2020/07/30 11:32:41 [TRACE] dag/walk: added new vertex: "provider.bizfly (close)"
2020/07/30 11:32:41 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (EachMode fixup)"
2020/07/30 11:32:41 [TRACE] dag/walk: added edge: "root" waiting on "provider.bizfly (close)"
2020/07/30 11:32:41 [TRACE] dag/walk: added edge: "bizfly_instance.test" waiting on "provider.bizfly"
2020/07/30 11:32:41 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "bizfly_instance.test"
2020/07/30 11:32:41 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "var.login"
2020/07/30 11:32:41 [TRACE] dag/walk: added edge: "provider.bizfly (close)" waiting on "bizfly_instance.test"
2020/07/30 11:32:41 [TRACE] dag/walk: dependencies changed for "bizfly_instance.test", sending new deps
2020/07/30 11:32:41 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (EachMode fixup)", sending new deps
2020/07/30 11:32:41 [TRACE] dag/walk: dependencies changed for "provider.bizfly (close)", sending new deps
2020/07/30 11:32:41 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2020/07/30 11:32:41 [TRACE] dag/walk: visiting "var.login"
2020/07/30 11:32:41 [TRACE] vertex "var.login": starting visit (*terraform.NodeRootVariable)
2020/07/30 11:32:41 [TRACE] vertex "var.login": evaluating
2020/07/30 11:32:41 [TRACE] [walkValidate] Entering eval tree: var.login
2020/07/30 11:32:41 [TRACE] dag/walk: visiting "provider.bizfly"
2020/07/30 11:32:41 [TRACE] vertex "provider.bizfly": starting visit (*terraform.NodeApplyableProvider)
2020/07/30 11:32:41 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:32:41 [TRACE] [walkValidate] Exiting eval tree: var.login
2020/07/30 11:32:41 [TRACE] vertex "var.login": visit complete
2020/07/30 11:32:41 [TRACE] vertex "provider.bizfly": evaluating
2020/07/30 11:32:41 [TRACE] [walkValidate] Entering eval tree: provider.bizfly
2020/07/30 11:32:41 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:32:41 [TRACE] <root>: eval: *terraform.EvalInitProvider
2020-07-30T11:32:41.034+0700 [INFO]  plugin: configuring client automatic mTLS
2020-07-30T11:32:41.059+0700 [DEBUG] plugin: starting plugin: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly args=[/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly]
2020-07-30T11:32:41.063+0700 [DEBUG] plugin: plugin started: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=56881
2020-07-30T11:32:41.063+0700 [DEBUG] plugin: waiting for RPC address: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly
2020-07-30T11:32:41.080+0700 [INFO]  plugin.terraform-provider-bizfly: configuring server automatic mTLS: timestamp=2020-07-30T11:32:41.080+0700
2020-07-30T11:32:41.106+0700 [DEBUG] plugin.terraform-provider-bizfly: plugin address: address=/var/folders/0r/zdwrk7wn22vd_g32twvblrpc0000gn/T/plugin425755188 network=unix timestamp=2020-07-30T11:32:41.106+0700
2020-07-30T11:32:41.106+0700 [DEBUG] plugin: using plugin: version=5
2020/07/30 11:32:41 [TRACE] BuiltinEvalContext: Initialized "bizfly" provider for provider.bizfly
2020-07-30T11:32:41.158+0700 [TRACE] plugin.stdio: waiting for stdio data
2020/07/30 11:32:41 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:32:41 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/07/30 11:32:41 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:32:41 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 11:32:41 [TRACE] <root>: eval: *terraform.EvalValidateProvider
2020/07/30 11:32:41 [TRACE] buildProviderConfig for provider.bizfly: using explicit config only
2020/07/30 11:32:41 [TRACE] GRPCProvider: GetSchema
2020/07/30 11:32:41 [TRACE] GRPCProvider: PrepareProviderConfig
2020/07/30 11:32:41 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:32:41 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:32:41 [TRACE] [walkValidate] Exiting eval tree: provider.bizfly
2020/07/30 11:32:41 [TRACE] vertex "provider.bizfly": visit complete
2020/07/30 11:32:41 [TRACE] dag/walk: visiting "bizfly_instance.test"
2020/07/30 11:32:41 [TRACE] vertex "bizfly_instance.test": starting visit (*terraform.NodeValidatableResource)
2020/07/30 11:32:41 [TRACE] vertex "bizfly_instance.test": evaluating
2020/07/30 11:32:41 [TRACE] [walkValidate] Entering eval tree: bizfly_instance.test
2020/07/30 11:32:41 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:32:41 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 11:32:41 [TRACE] <root>: eval: *terraform.EvalValidateResource
2020/07/30 11:32:41 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/07/30 11:32:41 [TRACE] [walkValidate] Exiting eval tree: bizfly_instance.test
2020/07/30 11:32:41 [TRACE] vertex "bizfly_instance.test": visit complete
2020/07/30 11:32:41 [TRACE] dag/walk: visiting "provider.bizfly (close)"
2020/07/30 11:32:41 [TRACE] vertex "provider.bizfly (close)": starting visit (*terraform.graphNodeCloseProvider)
2020/07/30 11:32:41 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2020/07/30 11:32:41 [TRACE] vertex "provider.bizfly (close)": evaluating
2020/07/30 11:32:41 [TRACE] [walkValidate] Entering eval tree: provider.bizfly (close)
2020/07/30 11:32:41 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2020/07/30 11:32:41 [TRACE] <root>: eval: *terraform.EvalCloseProvider
2020/07/30 11:32:41 [TRACE] GRPCProvider: Close
2020/07/30 11:32:41 [TRACE] vertex "meta.count-boundary (EachMode fixup)": evaluating
2020/07/30 11:32:41 [TRACE] [walkValidate] Entering eval tree: meta.count-boundary (EachMode fixup)
2020/07/30 11:32:41 [TRACE] <root>: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2020/07/30 11:32:41 [TRACE] [walkValidate] Exiting eval tree: meta.count-boundary (EachMode fixup)
2020/07/30 11:32:41 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2020-07-30T11:32:41.165+0700 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2020-07-30T11:32:41.167+0700 [DEBUG] plugin: plugin process exited: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=56881
2020-07-30T11:32:41.167+0700 [DEBUG] plugin: plugin exited
2020/07/30 11:32:41 [TRACE] [walkValidate] Exiting eval tree: provider.bizfly (close)
2020/07/30 11:32:41 [TRACE] vertex "provider.bizfly (close)": visit complete
2020/07/30 11:32:41 [TRACE] dag/walk: visiting "root"
2020/07/30 11:32:41 [TRACE] vertex "root": starting visit (terraform.graphNodeRoot)
2020/07/30 11:32:41 [TRACE] vertex "root": visit complete
2020/07/30 11:32:41 [INFO] backend/local: plan calling Refresh
2020/07/30 11:32:41 [INFO] terraform: building graph: GraphTypeRefresh
2020/07/30 11:32:41 [TRACE] No managed resources in state during refresh; skipping managed resource transformer
2020/07/30 11:32:41 [TRACE] Executing graph transform *terraform.ConfigTransformer
2020/07/30 11:32:41 [TRACE] ConfigTransformer: Starting for path: 
2020/07/30 11:32:41 [TRACE] Completed graph transform *terraform.ConfigTransformer (no changes)
2020/07/30 11:32:41 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2020/07/30 11:32:41 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2020/07/30 11:32:41 [TRACE] Executing graph transform *terraform.StateTransformer
2020/07/30 11:32:41 [TRACE] StateTransformer: state is empty, so nothing to do
2020/07/30 11:32:41 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2020/07/30 11:32:41 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/30 11:32:41 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/30 11:32:41 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2020/07/30 11:32:41 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2020/07/30 11:32:41 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2020/07/30 11:32:41 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:32:41 [TRACE] Executing graph transform *terraform.LocalTransformer
2020/07/30 11:32:41 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2020/07/30 11:32:41 [TRACE] Executing graph transform *terraform.OutputTransformer
2020/07/30 11:32:41 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2020/07/30 11:32:41 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2020/07/30 11:32:41 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2020/07/30 11:32:41 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2020/07/30 11:32:41 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2020/07/30 11:32:41 [TRACE] ProviderConfigTransformer: attaching to "provider.bizfly" provider configuration from main.tf:1,1-18
2020/07/30 11:32:41 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:32:41 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2020/07/30 11:32:41 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2020/07/30 11:32:41 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2020/07/30 11:32:41 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer (no changes)
2020/07/30 11:32:41 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2020/07/30 11:32:41 [DEBUG] pruning unused provider.bizfly
2020/07/30 11:32:41 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer with new graph:
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:32:41 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2020/07/30 11:32:41 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2020/07/30 11:32:41 [TRACE] Completed graph transform *terraform.graphTransformerMulti (no changes)
2020/07/30 11:32:41 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2020/07/30 11:32:41 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2020/07/30 11:32:41 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/30 11:32:41 [DEBUG] ReferenceTransformer: "var.login" references: []
2020/07/30 11:32:41 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/30 11:32:41 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2020/07/30 11:32:41 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2020/07/30 11:32:41 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/30 11:32:41 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/30 11:32:41 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2020/07/30 11:32:41 [TRACE] Completed graph transform *terraform.CloseProviderTransformer (no changes)
2020/07/30 11:32:41 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/30 11:32:41 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/07/30 11:32:41 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2020/07/30 11:32:41 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer (no changes)
2020/07/30 11:32:41 [DEBUG] Starting graph walk: walkRefresh
2020/07/30 11:32:41 [TRACE] dag/walk: updating graph
2020/07/30 11:32:41 [TRACE] dag/walk: added new vertex: "var.login"
2020/07/30 11:32:41 [TRACE] dag/walk: visiting "var.login"
2020/07/30 11:32:41 [TRACE] vertex "var.login": starting visit (*terraform.NodeRootVariable)
2020/07/30 11:32:41 [TRACE] vertex "var.login": evaluating
2020/07/30 11:32:41 [TRACE] [walkRefresh] Entering eval tree: var.login
2020/07/30 11:32:41 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:32:41 [TRACE] [walkRefresh] Exiting eval tree: var.login
2020/07/30 11:32:41 [TRACE] vertex "var.login": visit complete
2020/07/30 11:32:41 [INFO] backend/local: plan calling Plan
2020/07/30 11:32:41 [INFO] terraform: building graph: GraphTypePlan
2020/07/30 11:32:41 [TRACE] Executing graph transform *terraform.ConfigTransformer
2020/07/30 11:32:41 [TRACE] ConfigTransformer: Starting for path: 
2020/07/30 11:32:41 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
  ------
2020/07/30 11:32:41 [TRACE] Executing graph transform *terraform.LocalTransformer
2020/07/30 11:32:41 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2020/07/30 11:32:41 [TRACE] Executing graph transform *terraform.OutputTransformer
2020/07/30 11:32:41 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2020/07/30 11:32:41 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2020/07/30 11:32:41 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2020/07/30 11:32:41 [TRACE] Executing graph transform *terraform.StateTransformer
2020/07/30 11:32:41 [TRACE] StateTransformer: state is empty, so nothing to do
2020/07/30 11:32:41 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2020/07/30 11:32:41 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2020/07/30 11:32:41 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2020/07/30 11:32:41 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2020/07/30 11:32:41 [TRACE] AttachResourceConfigTransformer: attaching to "bizfly_instance.test" (*terraform.NodePlannableResource) config from main.tf:7,1-34
2020/07/30 11:32:41 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2020/07/30 11:32:41 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/30 11:32:41 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/30 11:32:41 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2020/07/30 11:32:41 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:32:41 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2020/07/30 11:32:41 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2020/07/30 11:32:41 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2020/07/30 11:32:41 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2020/07/30 11:32:41 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2020/07/30 11:32:41 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2020/07/30 11:32:41 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2020/07/30 11:32:41 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2020/07/30 11:32:41 [TRACE] ProviderConfigTransformer: attaching to "provider.bizfly" provider configuration from main.tf:1,1-18
2020/07/30 11:32:41 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:32:41 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2020/07/30 11:32:41 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2020/07/30 11:32:41 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2020/07/30 11:32:41 [TRACE] ProviderTransformer: bizfly_instance.test is provided by provider.bizfly or inherited equivalent
2020/07/30 11:32:41 [TRACE] ProviderTransformer: exact match for provider.bizfly serving bizfly_instance.test
2020/07/30 11:32:41 [DEBUG] ProviderTransformer: "bizfly_instance.test" (*terraform.NodePlannableResource) needs provider.bizfly
2020/07/30 11:32:41 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:32:41 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2020/07/30 11:32:41 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2020/07/30 11:32:41 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2020/07/30 11:32:41 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2020/07/30 11:32:41 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:32:41 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2020/07/30 11:32:41 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2020/07/30 11:32:41 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2020/07/30 11:32:41 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.bizfly
2020/07/30 11:32:41 [TRACE] AttachSchemaTransformer: attaching resource schema to bizfly_instance.test
2020/07/30 11:32:41 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2020/07/30 11:32:41 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/30 11:32:41 [DEBUG] ReferenceTransformer: "bizfly_instance.test" references: []
2020/07/30 11:32:41 [DEBUG] ReferenceTransformer: "var.login" references: []
2020/07/30 11:32:41 [DEBUG] ReferenceTransformer: "provider.bizfly" references: []
2020/07/30 11:32:41 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/30 11:32:41 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2020/07/30 11:32:41 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:32:41 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/30 11:32:41 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/30 11:32:41 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2020/07/30 11:32:41 [TRACE] ForcedCBDTransformer: "bizfly_instance.test" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2020/07/30 11:32:41 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2020/07/30 11:32:41 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2020/07/30 11:32:41 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
    bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:32:41 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2020/07/30 11:32:41 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer (no changes)
2020/07/30 11:32:41 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/30 11:32:41 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
    bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.bizfly (close) - *terraform.graphNodeCloseProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:32:41 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2020/07/30 11:32:41 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodePlannableResource
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
    bizfly_instance.test - *terraform.NodePlannableResource
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.bizfly (close) - *terraform.graphNodeCloseProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:32:41 [DEBUG] Starting graph walk: walkPlan
2020/07/30 11:32:41 [TRACE] dag/walk: updating graph
2020/07/30 11:32:41 [TRACE] dag/walk: added new vertex: "var.login"
2020/07/30 11:32:41 [TRACE] dag/walk: added new vertex: "provider.bizfly"
2020/07/30 11:32:41 [TRACE] dag/walk: added new vertex: "meta.count-boundary (EachMode fixup)"
2020/07/30 11:32:41 [TRACE] dag/walk: added new vertex: "provider.bizfly (close)"
2020/07/30 11:32:41 [TRACE] dag/walk: added new vertex: "root"
2020/07/30 11:32:41 [TRACE] dag/walk: added new vertex: "bizfly_instance.test"
2020/07/30 11:32:41 [TRACE] dag/walk: added edge: "root" waiting on "provider.bizfly (close)"
2020/07/30 11:32:41 [TRACE] dag/walk: added edge: "bizfly_instance.test" waiting on "provider.bizfly"
2020/07/30 11:32:41 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "bizfly_instance.test"
2020/07/30 11:32:41 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "var.login"
2020/07/30 11:32:41 [TRACE] dag/walk: added edge: "provider.bizfly (close)" waiting on "bizfly_instance.test"
2020/07/30 11:32:41 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (EachMode fixup)"
2020/07/30 11:32:41 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2020/07/30 11:32:41 [TRACE] dag/walk: dependencies changed for "bizfly_instance.test", sending new deps
2020/07/30 11:32:41 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (EachMode fixup)", sending new deps
2020/07/30 11:32:41 [TRACE] dag/walk: dependencies changed for "provider.bizfly (close)", sending new deps
2020/07/30 11:32:41 [TRACE] dag/walk: visiting "provider.bizfly"
2020/07/30 11:32:41 [TRACE] vertex "provider.bizfly": starting visit (*terraform.NodeApplyableProvider)
2020/07/30 11:32:41 [TRACE] vertex "provider.bizfly": evaluating
2020/07/30 11:32:41 [TRACE] [walkPlan] Entering eval tree: provider.bizfly
2020/07/30 11:32:41 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:32:41 [TRACE] <root>: eval: *terraform.EvalInitProvider
2020/07/30 11:32:41 [TRACE] dag/walk: visiting "var.login"
2020/07/30 11:32:41 [TRACE] vertex "var.login": starting visit (*terraform.NodeRootVariable)
2020/07/30 11:32:41 [TRACE] vertex "var.login": evaluating
2020/07/30 11:32:41 [TRACE] [walkPlan] Entering eval tree: var.login
2020/07/30 11:32:41 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:32:41 [TRACE] [walkPlan] Exiting eval tree: var.login
2020/07/30 11:32:41 [TRACE] vertex "var.login": visit complete
2020-07-30T11:32:41.170+0700 [INFO]  plugin: configuring client automatic mTLS
2020-07-30T11:32:41.196+0700 [DEBUG] plugin: starting plugin: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly args=[/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly]
2020-07-30T11:32:41.200+0700 [DEBUG] plugin: plugin started: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=56882
2020-07-30T11:32:41.200+0700 [DEBUG] plugin: waiting for RPC address: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly
2020-07-30T11:32:41.218+0700 [INFO]  plugin.terraform-provider-bizfly: configuring server automatic mTLS: timestamp=2020-07-30T11:32:41.218+0700
2020-07-30T11:32:41.244+0700 [DEBUG] plugin: using plugin: version=5
2020-07-30T11:32:41.244+0700 [DEBUG] plugin.terraform-provider-bizfly: plugin address: address=/var/folders/0r/zdwrk7wn22vd_g32twvblrpc0000gn/T/plugin787166937 network=unix timestamp=2020-07-30T11:32:41.244+0700
2020/07/30 11:32:41 [TRACE] BuiltinEvalContext: Initialized "bizfly" provider for provider.bizfly
2020-07-30T11:32:41.296+0700 [TRACE] plugin.stdio: waiting for stdio data
2020/07/30 11:32:41 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:32:41 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:32:41 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/07/30 11:32:41 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:32:41 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 11:32:41 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/07/30 11:32:41 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:32:41 [TRACE] <root>: eval: *terraform.EvalConfigProvider
2020/07/30 11:32:41 [TRACE] buildProviderConfig for provider.bizfly: using explicit config only
2020/07/30 11:32:41 [TRACE] GRPCProvider: GetSchema
2020/07/30 11:32:41 [TRACE] GRPCProvider: Configure
2020/07/30 11:32:42 [TRACE] [walkPlan] Exiting eval tree: provider.bizfly
2020/07/30 11:32:42 [TRACE] vertex "provider.bizfly": visit complete
2020/07/30 11:32:42 [TRACE] dag/walk: visiting "bizfly_instance.test"
2020/07/30 11:32:42 [TRACE] vertex "bizfly_instance.test": starting visit (*terraform.NodePlannableResource)
2020/07/30 11:32:42 [TRACE] vertex "bizfly_instance.test": evaluating
2020/07/30 11:32:42 [TRACE] [walkPlan] Entering eval tree: bizfly_instance.test
2020/07/30 11:32:42 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/07/30 11:32:42 [TRACE] [walkPlan] Exiting eval tree: bizfly_instance.test
2020/07/30 11:32:42 [TRACE] vertex "bizfly_instance.test": expanding dynamic subgraph
2020/07/30 11:32:42 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/07/30 11:32:42 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResourceInstance
  ------
2020/07/30 11:32:42 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/07/30 11:32:42 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/07/30 11:32:42 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/30 11:32:42 [DEBUG] Resource instance state not found for node "bizfly_instance.test", instance bizfly_instance.test
2020/07/30 11:32:42 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/30 11:32:42 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/30 11:32:42 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/30 11:32:42 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/30 11:32:42 [DEBUG] ReferenceTransformer: "bizfly_instance.test" references: []
2020/07/30 11:32:42 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/30 11:32:42 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/30 11:32:42 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/07/30 11:32:42 [TRACE] vertex "bizfly_instance.test": entering dynamic subgraph
2020/07/30 11:32:42 [TRACE] dag/walk: updating graph
2020/07/30 11:32:42 [TRACE] dag/walk: added new vertex: "bizfly_instance.test"
2020/07/30 11:32:42 [TRACE] dag/walk: visiting "bizfly_instance.test"
2020/07/30 11:32:42 [TRACE] vertex "bizfly_instance.test": starting visit (*terraform.NodePlannableResourceInstance)
2020/07/30 11:32:42 [TRACE] vertex "bizfly_instance.test": evaluating
2020/07/30 11:32:42 [TRACE] [walkPlan] Entering eval tree: bizfly_instance.test
2020/07/30 11:32:42 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:32:42 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 11:32:42 [TRACE] <root>: eval: *terraform.EvalReadState
2020/07/30 11:32:42 [TRACE] EvalReadState: reading state for bizfly_instance.test
2020/07/30 11:32:42 [TRACE] EvalReadState: no state present for bizfly_instance.test
2020/07/30 11:32:42 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2020/07/30 11:32:42 [TRACE] <root>: eval: *terraform.EvalDiff
2020/07/30 11:32:42 [TRACE] Re-validating config for "bizfly_instance.test"
2020/07/30 11:32:42 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/07/30 11:32:42 [TRACE] GRPCProvider: PlanResourceChange
2020/07/30 11:32:42 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2020/07/30 11:32:42 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/07/30 11:32:42 [TRACE] EvalWriteState: writing current state object for bizfly_instance.test
2020/07/30 11:32:42 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/07/30 11:32:42 [TRACE] EvalWriteDiff: recorded Create change for bizfly_instance.test
2020/07/30 11:32:42 [TRACE] [walkPlan] Exiting eval tree: bizfly_instance.test
2020/07/30 11:32:42 [TRACE] vertex "bizfly_instance.test": visit complete
2020/07/30 11:32:42 [TRACE] vertex "bizfly_instance.test": dynamic subgraph completed successfully
2020/07/30 11:32:42 [TRACE] vertex "bizfly_instance.test": visit complete
2020/07/30 11:32:42 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2020/07/30 11:32:42 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2020/07/30 11:32:42 [TRACE] vertex "meta.count-boundary (EachMode fixup)": evaluating
2020/07/30 11:32:42 [TRACE] [walkPlan] Entering eval tree: meta.count-boundary (EachMode fixup)
2020/07/30 11:32:42 [TRACE] dag/walk: visiting "provider.bizfly (close)"
2020/07/30 11:32:42 [TRACE] <root>: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2020/07/30 11:32:42 [TRACE] vertex "provider.bizfly (close)": starting visit (*terraform.graphNodeCloseProvider)
2020/07/30 11:32:42 [TRACE] vertex "provider.bizfly (close)": evaluating
2020/07/30 11:32:42 [TRACE] [walkPlan] Entering eval tree: provider.bizfly (close)
2020/07/30 11:32:42 [TRACE] <root>: eval: *terraform.EvalCloseProvider
2020/07/30 11:32:42 [TRACE] GRPCProvider: Close
2020/07/30 11:32:42 [TRACE] [walkPlan] Exiting eval tree: meta.count-boundary (EachMode fixup)
2020/07/30 11:32:42 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2020-07-30T11:32:42.760+0700 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2020-07-30T11:32:42.763+0700 [DEBUG] plugin: plugin process exited: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=56882
2020-07-30T11:32:42.763+0700 [DEBUG] plugin: plugin exited
2020/07/30 11:32:42 [TRACE] [walkPlan] Exiting eval tree: provider.bizfly (close)
2020/07/30 11:32:42 [TRACE] vertex "provider.bizfly (close)": visit complete
2020/07/30 11:32:42 [TRACE] dag/walk: visiting "root"
2020/07/30 11:32:42 [TRACE] vertex "root": starting visit (terraform.graphNodeRoot)
2020/07/30 11:32:42 [TRACE] vertex "root": visit complete
2020/07/30 11:32:42 [INFO] backend/local: plan operation completed
2020/07/30 11:32:42 [TRACE] statemgr.Filesystem: removing lock metadata file .terraform.tfstate.lock.info
2020/07/30 11:32:42 [TRACE] statemgr.Filesystem: unlocking terraform.tfstate using fcntl flock
2020/07/30 11:32:47 [INFO] Terraform version: 0.12.29  
2020/07/30 11:32:47 [INFO] Go runtime version: go1.13.14
2020/07/30 11:32:47 [INFO] CLI args: []string{"/usr/local/bin/terraform", "apply"}
2020/07/30 11:32:47 [DEBUG] Attempting to open CLI config file: /Users/hung/.terraformrc
2020/07/30 11:32:47 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2020/07/30 11:32:47 [INFO] CLI command args: []string{"apply"}
2020/07/30 11:32:47 [TRACE] Meta.Backend: no config given or present on disk, so returning nil config
2020/07/30 11:32:47 [TRACE] Meta.Backend: backend has not previously been initialized in this working directory
2020/07/30 11:32:47 [DEBUG] New state was assigned lineage "b9a92ed0-b8cf-924c-b1c5-1fd2f693c5f9"
2020/07/30 11:32:47 [TRACE] Meta.Backend: using default local state only (no backend configuration, and no existing initialized backend)
2020/07/30 11:32:47 [TRACE] Meta.Backend: instantiated backend of type <nil>
2020/07/30 11:32:47 [DEBUG] checking for provider in "."
2020/07/30 11:32:47 [WARN] found legacy provider "terraform-provider-bizfly"
2020/07/30 11:32:47 [DEBUG] checking for provider in "/usr/local/bin"
2020/07/30 11:32:47 [DEBUG] checking for provider in ".terraform/plugins/darwin_amd64"
2020/07/30 11:32:47 [DEBUG] found valid plugin: "bizfly", "0.0.0", "/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly"
2020/07/30 11:32:47 [DEBUG] checking for provisioner in "."
2020/07/30 11:32:47 [DEBUG] checking for provisioner in "/usr/local/bin"
2020/07/30 11:32:47 [DEBUG] checking for provisioner in ".terraform/plugins/darwin_amd64"
2020/07/30 11:32:47 [TRACE] Meta.Backend: backend <nil> does not support operations, so wrapping it in a local backend
2020/07/30 11:32:47 [INFO] backend/local: starting Apply operation
2020/07/30 11:32:47 [TRACE] backend/local: requesting state manager for workspace "default"
2020/07/30 11:32:47 [TRACE] backend/local: state manager for workspace "default" will:
 - read initial snapshot from terraform.tfstate
 - write new snapshots to terraform.tfstate
 - create any backup at terraform.tfstate.backup
2020/07/30 11:32:47 [TRACE] backend/local: requesting state lock for workspace "default"
2020/07/30 11:32:47 [TRACE] statemgr.Filesystem: preparing to manage state snapshots at terraform.tfstate
2020/07/30 11:32:47 [TRACE] statemgr.Filesystem: existing snapshot has lineage "8e1934d5-1d8f-e9a8-58e8-6c54c3aa209a" serial 1
2020/07/30 11:32:47 [TRACE] statemgr.Filesystem: locking terraform.tfstate using fcntl flock
2020/07/30 11:32:47 [TRACE] statemgr.Filesystem: writing lock metadata to .terraform.tfstate.lock.info
2020/07/30 11:32:47 [TRACE] backend/local: reading remote state for workspace "default"
2020/07/30 11:32:47 [TRACE] statemgr.Filesystem: reading latest snapshot from terraform.tfstate
2020/07/30 11:32:47 [TRACE] statemgr.Filesystem: read snapshot with lineage "8e1934d5-1d8f-e9a8-58e8-6c54c3aa209a" serial 1
2020/07/30 11:32:47 [TRACE] backend/local: retrieving local state snapshot for workspace "default"
2020/07/30 11:32:47 [TRACE] backend/local: building context for current working directory
2020/07/30 11:32:47 [TRACE] terraform.NewContext: starting
2020/07/30 11:32:47 [TRACE] terraform.NewContext: resolving provider version selections
2020/07/30 11:32:47 [TRACE] terraform.NewContext: loading provider schemas
2020/07/30 11:32:47 [TRACE] LoadSchemas: retrieving schema for provider type "bizfly"
2020-07-30T11:32:47.323+0700 [INFO]  plugin: configuring client automatic mTLS
2020-07-30T11:32:47.352+0700 [DEBUG] plugin: starting plugin: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly args=[/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly]
2020-07-30T11:32:47.355+0700 [DEBUG] plugin: plugin started: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=56901
2020-07-30T11:32:47.356+0700 [DEBUG] plugin: waiting for RPC address: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly
2020-07-30T11:32:47.372+0700 [INFO]  plugin.terraform-provider-bizfly: configuring server automatic mTLS: timestamp=2020-07-30T11:32:47.372+0700
2020-07-30T11:32:47.398+0700 [DEBUG] plugin.terraform-provider-bizfly: plugin address: address=/var/folders/0r/zdwrk7wn22vd_g32twvblrpc0000gn/T/plugin181903160 network=unix timestamp=2020-07-30T11:32:47.398+0700
2020-07-30T11:32:47.398+0700 [DEBUG] plugin: using plugin: version=5
2020/07/30 11:32:47 [TRACE] GRPCProvider: GetSchema
2020-07-30T11:32:47.450+0700 [TRACE] plugin.stdio: waiting for stdio data
2020/07/30 11:32:47 [TRACE] GRPCProvider: Close
2020-07-30T11:32:47.452+0700 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2020-07-30T11:32:47.454+0700 [DEBUG] plugin: plugin process exited: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=56901
2020-07-30T11:32:47.454+0700 [DEBUG] plugin: plugin exited
2020/07/30 11:32:47 [TRACE] terraform.NewContext: complete
2020/07/30 11:32:47 [TRACE] backend/local: finished building terraform.Context
2020/07/30 11:32:47 [TRACE] backend/local: requesting interactive input, if necessary
2020/07/30 11:32:47 [TRACE] Context.Input: Prompting for provider arguments
2020/07/30 11:32:47 [TRACE] Context.Input: Provider provider.bizfly declared at main.tf:1,1-18
2020/07/30 11:32:47 [TRACE] Context.Input: Input for provider.bizfly: map[string]cty.Value{}
2020/07/30 11:32:47 [TRACE] backend/local: running validation operation
2020/07/30 11:32:47 [INFO] terraform: building graph: GraphTypeValidate
2020/07/30 11:32:47 [TRACE] Executing graph transform *terraform.ConfigTransformer
2020/07/30 11:32:47 [TRACE] ConfigTransformer: Starting for path: 
2020/07/30 11:32:47 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
  ------
2020/07/30 11:32:47 [TRACE] Executing graph transform *terraform.LocalTransformer
2020/07/30 11:32:47 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2020/07/30 11:32:47 [TRACE] Executing graph transform *terraform.OutputTransformer
2020/07/30 11:32:47 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2020/07/30 11:32:47 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2020/07/30 11:32:47 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2020/07/30 11:32:47 [TRACE] Executing graph transform *terraform.StateTransformer
2020/07/30 11:32:47 [TRACE] StateTransformer: state is empty, so nothing to do
2020/07/30 11:32:47 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2020/07/30 11:32:47 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2020/07/30 11:32:47 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2020/07/30 11:32:47 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2020/07/30 11:32:47 [TRACE] AttachResourceConfigTransformer: attaching to "bizfly_instance.test" (*terraform.NodeValidatableResource) config from main.tf:7,1-34
2020/07/30 11:32:47 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2020/07/30 11:32:47 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/30 11:32:47 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/30 11:32:47 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2020/07/30 11:32:47 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:32:47 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2020/07/30 11:32:47 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2020/07/30 11:32:47 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2020/07/30 11:32:47 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2020/07/30 11:32:47 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2020/07/30 11:32:47 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2020/07/30 11:32:47 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2020/07/30 11:32:47 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2020/07/30 11:32:47 [TRACE] ProviderConfigTransformer: attaching to "provider.bizfly" provider configuration from main.tf:1,1-18
2020/07/30 11:32:47 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:32:47 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2020/07/30 11:32:47 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2020/07/30 11:32:47 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2020/07/30 11:32:47 [TRACE] ProviderTransformer: bizfly_instance.test is provided by provider.bizfly or inherited equivalent
2020/07/30 11:32:47 [TRACE] ProviderTransformer: exact match for provider.bizfly serving bizfly_instance.test
2020/07/30 11:32:47 [DEBUG] ProviderTransformer: "bizfly_instance.test" (*terraform.NodeValidatableResource) needs provider.bizfly
2020/07/30 11:32:47 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:32:47 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2020/07/30 11:32:47 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2020/07/30 11:32:47 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2020/07/30 11:32:47 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2020/07/30 11:32:47 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:32:47 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2020/07/30 11:32:47 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2020/07/30 11:32:47 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2020/07/30 11:32:47 [TRACE] AttachSchemaTransformer: attaching resource schema to bizfly_instance.test
2020/07/30 11:32:47 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.bizfly
2020/07/30 11:32:47 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2020/07/30 11:32:47 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/30 11:32:47 [DEBUG] ReferenceTransformer: "bizfly_instance.test" references: []
2020/07/30 11:32:47 [DEBUG] ReferenceTransformer: "var.login" references: []
2020/07/30 11:32:47 [DEBUG] ReferenceTransformer: "provider.bizfly" references: []
2020/07/30 11:32:47 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/30 11:32:47 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2020/07/30 11:32:47 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:32:47 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/30 11:32:47 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/30 11:32:47 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2020/07/30 11:32:47 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2020/07/30 11:32:47 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2020/07/30 11:32:47 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
    bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:32:47 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2020/07/30 11:32:47 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer (no changes)
2020/07/30 11:32:47 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/30 11:32:47 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
    bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.bizfly (close) - *terraform.graphNodeCloseProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:32:47 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2020/07/30 11:32:47 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodeValidatableResource
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
    bizfly_instance.test - *terraform.NodeValidatableResource
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.bizfly (close) - *terraform.graphNodeCloseProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:32:47 [DEBUG] Starting graph walk: walkValidate
2020/07/30 11:32:47 [TRACE] dag/walk: updating graph
2020/07/30 11:32:47 [TRACE] dag/walk: added new vertex: "bizfly_instance.test"
2020/07/30 11:32:47 [TRACE] dag/walk: added new vertex: "var.login"
2020/07/30 11:32:47 [TRACE] dag/walk: added new vertex: "provider.bizfly"
2020/07/30 11:32:47 [TRACE] dag/walk: added new vertex: "meta.count-boundary (EachMode fixup)"
2020/07/30 11:32:47 [TRACE] dag/walk: added new vertex: "provider.bizfly (close)"
2020/07/30 11:32:47 [TRACE] dag/walk: added new vertex: "root"
2020/07/30 11:32:47 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "bizfly_instance.test"
2020/07/30 11:32:47 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "var.login"
2020/07/30 11:32:47 [TRACE] dag/walk: added edge: "provider.bizfly (close)" waiting on "bizfly_instance.test"
2020/07/30 11:32:47 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (EachMode fixup)"
2020/07/30 11:32:47 [TRACE] dag/walk: added edge: "root" waiting on "provider.bizfly (close)"
2020/07/30 11:32:47 [TRACE] dag/walk: added edge: "bizfly_instance.test" waiting on "provider.bizfly"
2020/07/30 11:32:47 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (EachMode fixup)", sending new deps
2020/07/30 11:32:47 [TRACE] dag/walk: dependencies changed for "provider.bizfly (close)", sending new deps
2020/07/30 11:32:47 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2020/07/30 11:32:47 [TRACE] dag/walk: dependencies changed for "bizfly_instance.test", sending new deps
2020/07/30 11:32:47 [TRACE] dag/walk: visiting "var.login"
2020/07/30 11:32:47 [TRACE] vertex "var.login": starting visit (*terraform.NodeRootVariable)
2020/07/30 11:32:47 [TRACE] vertex "var.login": evaluating
2020/07/30 11:32:47 [TRACE] dag/walk: visiting "provider.bizfly"
2020/07/30 11:32:47 [TRACE] [walkValidate] Entering eval tree: var.login
2020/07/30 11:32:47 [TRACE] vertex "provider.bizfly": starting visit (*terraform.NodeApplyableProvider)
2020/07/30 11:32:47 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:32:47 [TRACE] [walkValidate] Exiting eval tree: var.login
2020/07/30 11:32:47 [TRACE] vertex "provider.bizfly": evaluating
2020/07/30 11:32:47 [TRACE] vertex "var.login": visit complete
2020/07/30 11:32:47 [TRACE] [walkValidate] Entering eval tree: provider.bizfly
2020/07/30 11:32:47 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:32:47 [TRACE] <root>: eval: *terraform.EvalInitProvider
2020-07-30T11:32:47.455+0700 [INFO]  plugin: configuring client automatic mTLS
2020-07-30T11:32:47.479+0700 [DEBUG] plugin: starting plugin: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly args=[/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly]
2020-07-30T11:32:47.483+0700 [DEBUG] plugin: plugin started: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=56902
2020-07-30T11:32:47.483+0700 [DEBUG] plugin: waiting for RPC address: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly
2020-07-30T11:32:47.501+0700 [INFO]  plugin.terraform-provider-bizfly: configuring server automatic mTLS: timestamp=2020-07-30T11:32:47.501+0700
2020-07-30T11:32:47.527+0700 [DEBUG] plugin.terraform-provider-bizfly: plugin address: address=/var/folders/0r/zdwrk7wn22vd_g32twvblrpc0000gn/T/plugin052015861 network=unix timestamp=2020-07-30T11:32:47.527+0700
2020-07-30T11:32:47.527+0700 [DEBUG] plugin: using plugin: version=5
2020/07/30 11:32:47 [TRACE] BuiltinEvalContext: Initialized "bizfly" provider for provider.bizfly
2020/07/30 11:32:47 [TRACE] <root>: eval: terraform.EvalNoop
2020-07-30T11:32:47.580+0700 [TRACE] plugin.stdio: waiting for stdio data
2020/07/30 11:32:47 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/07/30 11:32:47 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:32:47 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 11:32:47 [TRACE] <root>: eval: *terraform.EvalValidateProvider
2020/07/30 11:32:47 [TRACE] buildProviderConfig for provider.bizfly: using explicit config only
2020/07/30 11:32:47 [TRACE] GRPCProvider: GetSchema
2020/07/30 11:32:47 [TRACE] GRPCProvider: PrepareProviderConfig
2020/07/30 11:32:47 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:32:47 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:32:47 [TRACE] [walkValidate] Exiting eval tree: provider.bizfly
2020/07/30 11:32:47 [TRACE] vertex "provider.bizfly": visit complete
2020/07/30 11:32:47 [TRACE] dag/walk: visiting "bizfly_instance.test"
2020/07/30 11:32:47 [TRACE] vertex "bizfly_instance.test": starting visit (*terraform.NodeValidatableResource)
2020/07/30 11:32:47 [TRACE] vertex "bizfly_instance.test": evaluating
2020/07/30 11:32:47 [TRACE] [walkValidate] Entering eval tree: bizfly_instance.test
2020/07/30 11:32:47 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:32:47 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 11:32:47 [TRACE] <root>: eval: *terraform.EvalValidateResource
2020/07/30 11:32:47 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/07/30 11:32:47 [TRACE] [walkValidate] Exiting eval tree: bizfly_instance.test
2020/07/30 11:32:47 [TRACE] vertex "bizfly_instance.test": visit complete
2020/07/30 11:32:47 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2020/07/30 11:32:47 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2020/07/30 11:32:47 [TRACE] vertex "meta.count-boundary (EachMode fixup)": evaluating
2020/07/30 11:32:47 [TRACE] [walkValidate] Entering eval tree: meta.count-boundary (EachMode fixup)
2020/07/30 11:32:47 [TRACE] <root>: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2020/07/30 11:32:47 [TRACE] dag/walk: visiting "provider.bizfly (close)"
2020/07/30 11:32:47 [TRACE] vertex "provider.bizfly (close)": starting visit (*terraform.graphNodeCloseProvider)
2020/07/30 11:32:47 [TRACE] [walkValidate] Exiting eval tree: meta.count-boundary (EachMode fixup)
2020/07/30 11:32:47 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2020/07/30 11:32:47 [TRACE] vertex "provider.bizfly (close)": evaluating
2020/07/30 11:32:47 [TRACE] [walkValidate] Entering eval tree: provider.bizfly (close)
2020/07/30 11:32:47 [TRACE] <root>: eval: *terraform.EvalCloseProvider
2020/07/30 11:32:47 [TRACE] GRPCProvider: Close
2020-07-30T11:32:47.586+0700 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2020-07-30T11:32:47.588+0700 [DEBUG] plugin: plugin process exited: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=56902
2020-07-30T11:32:47.588+0700 [DEBUG] plugin: plugin exited
2020/07/30 11:32:47 [TRACE] [walkValidate] Exiting eval tree: provider.bizfly (close)
2020/07/30 11:32:47 [TRACE] vertex "provider.bizfly (close)": visit complete
2020/07/30 11:32:47 [TRACE] dag/walk: visiting "root"
2020/07/30 11:32:47 [TRACE] vertex "root": starting visit (terraform.graphNodeRoot)
2020/07/30 11:32:47 [TRACE] vertex "root": visit complete
2020/07/30 11:32:47 [INFO] backend/local: apply calling Refresh
2020/07/30 11:32:47 [INFO] terraform: building graph: GraphTypeRefresh
2020/07/30 11:32:47 [TRACE] No managed resources in state during refresh; skipping managed resource transformer
2020/07/30 11:32:47 [TRACE] Executing graph transform *terraform.ConfigTransformer
2020/07/30 11:32:47 [TRACE] ConfigTransformer: Starting for path: 
2020/07/30 11:32:47 [TRACE] Completed graph transform *terraform.ConfigTransformer (no changes)
2020/07/30 11:32:47 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2020/07/30 11:32:47 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2020/07/30 11:32:47 [TRACE] Executing graph transform *terraform.StateTransformer
2020/07/30 11:32:47 [TRACE] StateTransformer: state is empty, so nothing to do
2020/07/30 11:32:47 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2020/07/30 11:32:47 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/30 11:32:47 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/30 11:32:47 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2020/07/30 11:32:47 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2020/07/30 11:32:47 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2020/07/30 11:32:47 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:32:47 [TRACE] Executing graph transform *terraform.LocalTransformer
2020/07/30 11:32:47 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2020/07/30 11:32:47 [TRACE] Executing graph transform *terraform.OutputTransformer
2020/07/30 11:32:47 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2020/07/30 11:32:47 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2020/07/30 11:32:47 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2020/07/30 11:32:47 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2020/07/30 11:32:47 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2020/07/30 11:32:47 [TRACE] ProviderConfigTransformer: attaching to "provider.bizfly" provider configuration from main.tf:1,1-18
2020/07/30 11:32:47 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:32:47 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2020/07/30 11:32:47 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2020/07/30 11:32:47 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2020/07/30 11:32:47 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer (no changes)
2020/07/30 11:32:47 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2020/07/30 11:32:47 [DEBUG] pruning unused provider.bizfly
2020/07/30 11:32:47 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer with new graph:
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:32:47 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2020/07/30 11:32:47 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2020/07/30 11:32:47 [TRACE] Completed graph transform *terraform.graphTransformerMulti (no changes)
2020/07/30 11:32:47 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2020/07/30 11:32:47 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2020/07/30 11:32:47 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/30 11:32:47 [DEBUG] ReferenceTransformer: "var.login" references: []
2020/07/30 11:32:47 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/30 11:32:47 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2020/07/30 11:32:47 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2020/07/30 11:32:47 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/30 11:32:47 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/30 11:32:47 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2020/07/30 11:32:47 [TRACE] Completed graph transform *terraform.CloseProviderTransformer (no changes)
2020/07/30 11:32:47 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/30 11:32:47 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/07/30 11:32:47 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2020/07/30 11:32:47 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer (no changes)
2020/07/30 11:32:47 [DEBUG] Starting graph walk: walkRefresh
2020/07/30 11:32:47 [TRACE] dag/walk: updating graph
2020/07/30 11:32:47 [TRACE] dag/walk: added new vertex: "var.login"
2020/07/30 11:32:47 [TRACE] dag/walk: visiting "var.login"
2020/07/30 11:32:47 [TRACE] vertex "var.login": starting visit (*terraform.NodeRootVariable)
2020/07/30 11:32:47 [TRACE] vertex "var.login": evaluating
2020/07/30 11:32:47 [TRACE] [walkRefresh] Entering eval tree: var.login
2020/07/30 11:32:47 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:32:47 [TRACE] [walkRefresh] Exiting eval tree: var.login
2020/07/30 11:32:47 [TRACE] vertex "var.login": visit complete
2020/07/30 11:32:47 [INFO] backend/local: apply calling Plan
2020/07/30 11:32:47 [INFO] terraform: building graph: GraphTypePlan
2020/07/30 11:32:47 [TRACE] Executing graph transform *terraform.ConfigTransformer
2020/07/30 11:32:47 [TRACE] ConfigTransformer: Starting for path: 
2020/07/30 11:32:47 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
  ------
2020/07/30 11:32:47 [TRACE] Executing graph transform *terraform.LocalTransformer
2020/07/30 11:32:47 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2020/07/30 11:32:47 [TRACE] Executing graph transform *terraform.OutputTransformer
2020/07/30 11:32:47 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2020/07/30 11:32:47 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2020/07/30 11:32:47 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2020/07/30 11:32:47 [TRACE] Executing graph transform *terraform.StateTransformer
2020/07/30 11:32:47 [TRACE] StateTransformer: state is empty, so nothing to do
2020/07/30 11:32:47 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2020/07/30 11:32:47 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2020/07/30 11:32:47 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2020/07/30 11:32:47 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2020/07/30 11:32:47 [TRACE] AttachResourceConfigTransformer: attaching to "bizfly_instance.test" (*terraform.NodePlannableResource) config from main.tf:7,1-34
2020/07/30 11:32:47 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2020/07/30 11:32:47 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/30 11:32:47 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/30 11:32:47 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2020/07/30 11:32:47 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:32:47 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2020/07/30 11:32:47 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2020/07/30 11:32:47 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2020/07/30 11:32:47 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2020/07/30 11:32:47 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2020/07/30 11:32:47 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2020/07/30 11:32:47 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2020/07/30 11:32:47 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2020/07/30 11:32:47 [TRACE] ProviderConfigTransformer: attaching to "provider.bizfly" provider configuration from main.tf:1,1-18
2020/07/30 11:32:47 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:32:47 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2020/07/30 11:32:47 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2020/07/30 11:32:47 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2020/07/30 11:32:47 [TRACE] ProviderTransformer: bizfly_instance.test is provided by provider.bizfly or inherited equivalent
2020/07/30 11:32:47 [TRACE] ProviderTransformer: exact match for provider.bizfly serving bizfly_instance.test
2020/07/30 11:32:47 [DEBUG] ProviderTransformer: "bizfly_instance.test" (*terraform.NodePlannableResource) needs provider.bizfly
2020/07/30 11:32:47 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:32:47 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2020/07/30 11:32:47 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2020/07/30 11:32:47 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2020/07/30 11:32:47 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2020/07/30 11:32:47 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:32:47 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2020/07/30 11:32:47 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2020/07/30 11:32:47 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2020/07/30 11:32:47 [TRACE] AttachSchemaTransformer: attaching resource schema to bizfly_instance.test
2020/07/30 11:32:47 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.bizfly
2020/07/30 11:32:47 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2020/07/30 11:32:47 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/30 11:32:47 [DEBUG] ReferenceTransformer: "bizfly_instance.test" references: []
2020/07/30 11:32:47 [DEBUG] ReferenceTransformer: "var.login" references: []
2020/07/30 11:32:47 [DEBUG] ReferenceTransformer: "provider.bizfly" references: []
2020/07/30 11:32:47 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/30 11:32:47 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2020/07/30 11:32:47 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:32:47 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/30 11:32:47 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/30 11:32:47 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2020/07/30 11:32:47 [TRACE] ForcedCBDTransformer: "bizfly_instance.test" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2020/07/30 11:32:47 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2020/07/30 11:32:47 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2020/07/30 11:32:47 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
    bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:32:47 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2020/07/30 11:32:47 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer (no changes)
2020/07/30 11:32:47 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/30 11:32:47 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
    bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.bizfly (close) - *terraform.graphNodeCloseProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:32:47 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2020/07/30 11:32:47 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodePlannableResource
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
    bizfly_instance.test - *terraform.NodePlannableResource
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.bizfly (close) - *terraform.graphNodeCloseProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:32:47 [DEBUG] Starting graph walk: walkPlan
2020/07/30 11:32:47 [TRACE] dag/walk: updating graph
2020/07/30 11:32:47 [TRACE] dag/walk: added new vertex: "provider.bizfly"
2020/07/30 11:32:47 [TRACE] dag/walk: added new vertex: "meta.count-boundary (EachMode fixup)"
2020/07/30 11:32:47 [TRACE] dag/walk: added new vertex: "provider.bizfly (close)"
2020/07/30 11:32:47 [TRACE] dag/walk: added new vertex: "root"
2020/07/30 11:32:47 [TRACE] dag/walk: added new vertex: "bizfly_instance.test"
2020/07/30 11:32:47 [TRACE] dag/walk: added new vertex: "var.login"
2020/07/30 11:32:47 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "bizfly_instance.test"
2020/07/30 11:32:47 [TRACE] dag/walk: added edge: "provider.bizfly (close)" waiting on "bizfly_instance.test"
2020/07/30 11:32:47 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (EachMode fixup)"
2020/07/30 11:32:47 [TRACE] dag/walk: added edge: "root" waiting on "provider.bizfly (close)"
2020/07/30 11:32:47 [TRACE] dag/walk: added edge: "bizfly_instance.test" waiting on "provider.bizfly"
2020/07/30 11:32:47 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "var.login"
2020/07/30 11:32:47 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2020/07/30 11:32:47 [TRACE] dag/walk: dependencies changed for "bizfly_instance.test", sending new deps
2020/07/30 11:32:47 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (EachMode fixup)", sending new deps
2020/07/30 11:32:47 [TRACE] dag/walk: dependencies changed for "provider.bizfly (close)", sending new deps
2020/07/30 11:32:47 [TRACE] dag/walk: visiting "var.login"
2020/07/30 11:32:47 [TRACE] vertex "var.login": starting visit (*terraform.NodeRootVariable)
2020/07/30 11:32:47 [TRACE] vertex "var.login": evaluating
2020/07/30 11:32:47 [TRACE] [walkPlan] Entering eval tree: var.login
2020/07/30 11:32:47 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:32:47 [TRACE] [walkPlan] Exiting eval tree: var.login
2020/07/30 11:32:47 [TRACE] vertex "var.login": visit complete
2020/07/30 11:32:47 [TRACE] dag/walk: visiting "provider.bizfly"
2020/07/30 11:32:47 [TRACE] vertex "provider.bizfly": starting visit (*terraform.NodeApplyableProvider)
2020/07/30 11:32:47 [TRACE] vertex "provider.bizfly": evaluating
2020/07/30 11:32:47 [TRACE] [walkPlan] Entering eval tree: provider.bizfly
2020/07/30 11:32:47 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:32:47 [TRACE] <root>: eval: *terraform.EvalInitProvider
2020-07-30T11:32:47.589+0700 [INFO]  plugin: configuring client automatic mTLS
2020-07-30T11:32:47.615+0700 [DEBUG] plugin: starting plugin: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly args=[/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly]
2020-07-30T11:32:47.619+0700 [DEBUG] plugin: plugin started: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=56903
2020-07-30T11:32:47.619+0700 [DEBUG] plugin: waiting for RPC address: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly
2020-07-30T11:32:47.636+0700 [INFO]  plugin.terraform-provider-bizfly: configuring server automatic mTLS: timestamp=2020-07-30T11:32:47.636+0700
2020-07-30T11:32:47.663+0700 [DEBUG] plugin.terraform-provider-bizfly: plugin address: network=unix address=/var/folders/0r/zdwrk7wn22vd_g32twvblrpc0000gn/T/plugin795203602 timestamp=2020-07-30T11:32:47.662+0700
2020-07-30T11:32:47.663+0700 [DEBUG] plugin: using plugin: version=5
2020/07/30 11:32:47 [TRACE] BuiltinEvalContext: Initialized "bizfly" provider for provider.bizfly
2020/07/30 11:32:47 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:32:47 [TRACE] <root>: eval: terraform.EvalNoop
2020-07-30T11:32:47.716+0700 [TRACE] plugin.stdio: waiting for stdio data
2020/07/30 11:32:47 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/07/30 11:32:47 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:32:47 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 11:32:47 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/07/30 11:32:47 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:32:47 [TRACE] <root>: eval: *terraform.EvalConfigProvider
2020/07/30 11:32:47 [TRACE] buildProviderConfig for provider.bizfly: using explicit config only
2020/07/30 11:32:47 [TRACE] GRPCProvider: GetSchema
2020/07/30 11:32:47 [TRACE] GRPCProvider: Configure
2020/07/30 11:32:48 [TRACE] [walkPlan] Exiting eval tree: provider.bizfly
2020/07/30 11:32:48 [TRACE] vertex "provider.bizfly": visit complete
2020/07/30 11:32:48 [TRACE] dag/walk: visiting "bizfly_instance.test"
2020/07/30 11:32:48 [TRACE] vertex "bizfly_instance.test": starting visit (*terraform.NodePlannableResource)
2020/07/30 11:32:48 [TRACE] vertex "bizfly_instance.test": evaluating
2020/07/30 11:32:48 [TRACE] [walkPlan] Entering eval tree: bizfly_instance.test
2020/07/30 11:32:48 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/07/30 11:32:48 [TRACE] [walkPlan] Exiting eval tree: bizfly_instance.test
2020/07/30 11:32:48 [TRACE] vertex "bizfly_instance.test": expanding dynamic subgraph
2020/07/30 11:32:48 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/07/30 11:32:48 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResourceInstance
  ------
2020/07/30 11:32:48 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/07/30 11:32:48 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/07/30 11:32:48 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/30 11:32:48 [DEBUG] Resource instance state not found for node "bizfly_instance.test", instance bizfly_instance.test
2020/07/30 11:32:48 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/30 11:32:48 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/30 11:32:48 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/30 11:32:48 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/30 11:32:48 [DEBUG] ReferenceTransformer: "bizfly_instance.test" references: []
2020/07/30 11:32:48 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/30 11:32:48 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/30 11:32:48 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/07/30 11:32:48 [TRACE] vertex "bizfly_instance.test": entering dynamic subgraph
2020/07/30 11:32:48 [TRACE] dag/walk: updating graph
2020/07/30 11:32:48 [TRACE] dag/walk: added new vertex: "bizfly_instance.test"
2020/07/30 11:32:48 [TRACE] dag/walk: visiting "bizfly_instance.test"
2020/07/30 11:32:48 [TRACE] vertex "bizfly_instance.test": starting visit (*terraform.NodePlannableResourceInstance)
2020/07/30 11:32:48 [TRACE] vertex "bizfly_instance.test": evaluating
2020/07/30 11:32:48 [TRACE] [walkPlan] Entering eval tree: bizfly_instance.test
2020/07/30 11:32:48 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:32:48 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 11:32:48 [TRACE] <root>: eval: *terraform.EvalReadState
2020/07/30 11:32:48 [TRACE] EvalReadState: reading state for bizfly_instance.test
2020/07/30 11:32:48 [TRACE] EvalReadState: no state present for bizfly_instance.test
2020/07/30 11:32:48 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2020/07/30 11:32:48 [TRACE] <root>: eval: *terraform.EvalDiff
2020/07/30 11:32:48 [TRACE] Re-validating config for "bizfly_instance.test"
2020/07/30 11:32:48 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/07/30 11:32:48 [TRACE] GRPCProvider: PlanResourceChange
2020/07/30 11:32:48 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2020/07/30 11:32:48 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/07/30 11:32:48 [TRACE] EvalWriteState: writing current state object for bizfly_instance.test
2020/07/30 11:32:48 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/07/30 11:32:48 [TRACE] EvalWriteDiff: recorded Create change for bizfly_instance.test
2020/07/30 11:32:48 [TRACE] [walkPlan] Exiting eval tree: bizfly_instance.test
2020/07/30 11:32:48 [TRACE] vertex "bizfly_instance.test": visit complete
2020/07/30 11:32:48 [TRACE] vertex "bizfly_instance.test": dynamic subgraph completed successfully
2020/07/30 11:32:48 [TRACE] vertex "bizfly_instance.test": visit complete
2020/07/30 11:32:48 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2020/07/30 11:32:48 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2020/07/30 11:32:48 [TRACE] dag/walk: visiting "provider.bizfly (close)"
2020/07/30 11:32:48 [TRACE] vertex "meta.count-boundary (EachMode fixup)": evaluating
2020/07/30 11:32:48 [TRACE] vertex "provider.bizfly (close)": starting visit (*terraform.graphNodeCloseProvider)
2020/07/30 11:32:48 [TRACE] [walkPlan] Entering eval tree: meta.count-boundary (EachMode fixup)
2020/07/30 11:32:48 [TRACE] vertex "provider.bizfly (close)": evaluating
2020/07/30 11:32:48 [TRACE] <root>: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2020/07/30 11:32:48 [TRACE] [walkPlan] Entering eval tree: provider.bizfly (close)
2020/07/30 11:32:48 [TRACE] <root>: eval: *terraform.EvalCloseProvider
2020/07/30 11:32:48 [TRACE] GRPCProvider: Close
2020/07/30 11:32:48 [TRACE] [walkPlan] Exiting eval tree: meta.count-boundary (EachMode fixup)
2020/07/30 11:32:48 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2020-07-30T11:32:48.961+0700 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2020-07-30T11:32:48.964+0700 [DEBUG] plugin: plugin process exited: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=56903
2020-07-30T11:32:48.964+0700 [DEBUG] plugin: plugin exited
2020/07/30 11:32:48 [TRACE] [walkPlan] Exiting eval tree: provider.bizfly (close)
2020/07/30 11:32:48 [TRACE] vertex "provider.bizfly (close)": visit complete
2020/07/30 11:32:48 [TRACE] dag/walk: visiting "root"
2020/07/30 11:32:48 [TRACE] vertex "root": starting visit (terraform.graphNodeRoot)
2020/07/30 11:32:48 [TRACE] vertex "root": visit complete
2020/07/30 11:32:48 [DEBUG] command: asking for input: "Do you want to perform these actions?"
2020/07/30 11:32:53 [INFO] backend/local: apply calling Apply
2020/07/30 11:32:53 [INFO] terraform: building graph: GraphTypeApply
2020/07/30 11:32:53 [TRACE] Executing graph transform *terraform.ConfigTransformer
2020/07/30 11:32:53 [TRACE] ConfigTransformer: Starting for path: 
2020/07/30 11:32:53 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
  ------
2020/07/30 11:32:53 [TRACE] Executing graph transform *terraform.DiffTransformer
2020/07/30 11:32:53 [TRACE] DiffTransformer starting
2020/07/30 11:32:53 [TRACE] DiffTransformer: found Create change for bizfly_instance.test 
2020/07/30 11:32:53 [TRACE] DiffTransformer: bizfly_instance.test will be represented by bizfly_instance.test
2020/07/30 11:32:53 [TRACE] DiffTransformer complete
2020/07/30 11:32:53 [TRACE] Completed graph transform *terraform.DiffTransformer with new graph:
  bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
  ------
2020/07/30 11:32:53 [TRACE] Executing graph transform *terraform.OrphanResourceTransformer
2020/07/30 11:32:53 [TRACE] Completed graph transform *terraform.OrphanResourceTransformer (no changes)
2020/07/30 11:32:53 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2020/07/30 11:32:53 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2020/07/30 11:32:53 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2020/07/30 11:32:53 [TRACE] AttachResourceConfigTransformer: attaching to "bizfly_instance.test (prepare state)" (*terraform.NodeApplyableResource) config from main.tf:7,1-34
2020/07/30 11:32:53 [TRACE] AttachResourceConfigTransformer: attaching to "bizfly_instance.test" (*terraform.NodeApplyableResourceInstance) config from main.tf:7,1-34
2020/07/30 11:32:53 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2020/07/30 11:32:53 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/30 11:32:53 [DEBUG] Resource state not found for node "bizfly_instance.test", instance bizfly_instance.test
2020/07/30 11:32:53 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/30 11:32:53 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2020/07/30 11:32:53 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2020/07/30 11:32:53 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2020/07/30 11:32:53 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2020/07/30 11:32:53 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2020/07/30 11:32:53 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
  bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:32:53 [TRACE] Executing graph transform *terraform.LocalTransformer
2020/07/30 11:32:53 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2020/07/30 11:32:53 [TRACE] Executing graph transform *terraform.OutputTransformer
2020/07/30 11:32:53 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2020/07/30 11:32:53 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2020/07/30 11:32:53 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2020/07/30 11:32:53 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2020/07/30 11:32:53 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2020/07/30 11:32:53 [TRACE] ProviderConfigTransformer: attaching to "provider.bizfly" provider configuration from main.tf:1,1-18
2020/07/30 11:32:53 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:32:53 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2020/07/30 11:32:53 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2020/07/30 11:32:53 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2020/07/30 11:32:53 [TRACE] ProviderTransformer: bizfly_instance.test (prepare state) is provided by provider.bizfly or inherited equivalent
2020/07/30 11:32:53 [TRACE] ProviderTransformer: bizfly_instance.test is provided by provider.bizfly or inherited equivalent
2020/07/30 11:32:53 [TRACE] ProviderTransformer: exact match for provider.bizfly serving bizfly_instance.test (prepare state)
2020/07/30 11:32:53 [DEBUG] ProviderTransformer: "bizfly_instance.test (prepare state)" (*terraform.NodeApplyableResource) needs provider.bizfly
2020/07/30 11:32:53 [TRACE] ProviderTransformer: exact match for provider.bizfly serving bizfly_instance.test
2020/07/30 11:32:53 [DEBUG] ProviderTransformer: "bizfly_instance.test" (*terraform.NodeApplyableResourceInstance) needs provider.bizfly
2020/07/30 11:32:53 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:32:53 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2020/07/30 11:32:53 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2020/07/30 11:32:53 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2020/07/30 11:32:53 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2020/07/30 11:32:53 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:32:53 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2020/07/30 11:32:53 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2020/07/30 11:32:53 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2020/07/30 11:32:53 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.bizfly
2020/07/30 11:32:53 [TRACE] AttachSchemaTransformer: attaching resource schema to bizfly_instance.test (prepare state)
2020/07/30 11:32:53 [TRACE] AttachSchemaTransformer: attaching resource schema to bizfly_instance.test
2020/07/30 11:32:53 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2020/07/30 11:32:53 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/30 11:32:53 [DEBUG] ReferenceTransformer: "provider.bizfly" references: []
2020/07/30 11:32:53 [DEBUG] ReferenceTransformer: "bizfly_instance.test (prepare state)" references: []
2020/07/30 11:32:53 [DEBUG] ReferenceTransformer: "bizfly_instance.test" references: []
2020/07/30 11:32:53 [DEBUG] ReferenceTransformer: "var.login" references: []
2020/07/30 11:32:53 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/30 11:32:53 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2020/07/30 11:32:53 [TRACE] AttachDependenciesTransformer: bizfly_instance.test depends on []
2020/07/30 11:32:53 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2020/07/30 11:32:53 [TRACE] Executing graph transform *terraform.DestroyEdgeTransformer
2020/07/30 11:32:53 [TRACE] Completed graph transform *terraform.DestroyEdgeTransformer (no changes)
2020/07/30 11:32:53 [TRACE] Executing graph transform *terraform.CBDEdgeTransformer
2020/07/30 11:32:53 [TRACE] Completed graph transform *terraform.CBDEdgeTransformer (no changes)
2020/07/30 11:32:53 [TRACE] Executing graph transform *terraform.PruneUnusedValuesTransformer
2020/07/30 11:32:53 [TRACE] Completed graph transform *terraform.PruneUnusedValuesTransformer (no changes)
2020/07/30 11:32:53 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2020/07/30 11:32:53 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:32:53 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/30 11:32:53 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/30 11:32:53 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2020/07/30 11:32:53 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
    bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:32:53 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2020/07/30 11:32:53 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer (no changes)
2020/07/30 11:32:53 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/30 11:32:53 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
  bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
    bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.bizfly (close) - *terraform.graphNodeCloseProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:32:53 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2020/07/30 11:32:53 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
    bizfly_instance.test - *terraform.NodeApplyableResourceInstance
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.bizfly (close) - *terraform.graphNodeCloseProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:32:53 [DEBUG] Starting graph walk: walkApply
2020/07/30 11:32:53 [TRACE] dag/walk: updating graph
2020/07/30 11:32:53 [TRACE] dag/walk: added new vertex: "root"
2020/07/30 11:32:53 [TRACE] dag/walk: added new vertex: "bizfly_instance.test (prepare state)"
2020/07/30 11:32:53 [TRACE] dag/walk: added new vertex: "bizfly_instance.test"
2020/07/30 11:32:53 [TRACE] dag/walk: added new vertex: "var.login"
2020/07/30 11:32:53 [TRACE] dag/walk: added new vertex: "provider.bizfly"
2020/07/30 11:32:53 [TRACE] dag/walk: added new vertex: "meta.count-boundary (EachMode fixup)"
2020/07/30 11:32:53 [TRACE] dag/walk: added new vertex: "provider.bizfly (close)"
2020/07/30 11:32:53 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "var.login"
2020/07/30 11:32:53 [TRACE] dag/walk: added edge: "provider.bizfly (close)" waiting on "bizfly_instance.test"
2020/07/30 11:32:53 [TRACE] dag/walk: added edge: "root" waiting on "provider.bizfly (close)"
2020/07/30 11:32:53 [TRACE] dag/walk: added edge: "bizfly_instance.test" waiting on "bizfly_instance.test (prepare state)"
2020/07/30 11:32:53 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "bizfly_instance.test"
2020/07/30 11:32:53 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (EachMode fixup)"
2020/07/30 11:32:53 [TRACE] dag/walk: added edge: "bizfly_instance.test (prepare state)" waiting on "provider.bizfly"
2020/07/30 11:32:53 [TRACE] dag/walk: dependencies changed for "bizfly_instance.test (prepare state)", sending new deps
2020/07/30 11:32:53 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (EachMode fixup)", sending new deps
2020/07/30 11:32:53 [TRACE] dag/walk: dependencies changed for "provider.bizfly (close)", sending new deps
2020/07/30 11:32:53 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2020/07/30 11:32:53 [TRACE] dag/walk: dependencies changed for "bizfly_instance.test", sending new deps
2020/07/30 11:32:53 [TRACE] dag/walk: visiting "provider.bizfly"
2020/07/30 11:32:53 [TRACE] vertex "provider.bizfly": starting visit (*terraform.NodeApplyableProvider)
2020/07/30 11:32:53 [TRACE] vertex "provider.bizfly": evaluating
2020/07/30 11:32:53 [TRACE] [walkApply] Entering eval tree: provider.bizfly
2020/07/30 11:32:53 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:32:53 [TRACE] <root>: eval: *terraform.EvalInitProvider
2020-07-30T11:32:53.965+0700 [INFO]  plugin: configuring client automatic mTLS
2020/07/30 11:32:53 [TRACE] dag/walk: visiting "var.login"
2020/07/30 11:32:53 [TRACE] vertex "var.login": starting visit (*terraform.NodeRootVariable)
2020/07/30 11:32:53 [TRACE] vertex "var.login": evaluating
2020/07/30 11:32:53 [TRACE] [walkApply] Entering eval tree: var.login
2020/07/30 11:32:53 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:32:53 [TRACE] [walkApply] Exiting eval tree: var.login
2020/07/30 11:32:53 [TRACE] vertex "var.login": visit complete
2020-07-30T11:32:53.992+0700 [DEBUG] plugin: starting plugin: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly args=[/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly]
2020-07-30T11:32:53.996+0700 [DEBUG] plugin: plugin started: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=56908
2020-07-30T11:32:53.996+0700 [DEBUG] plugin: waiting for RPC address: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly
2020-07-30T11:32:54.012+0700 [INFO]  plugin.terraform-provider-bizfly: configuring server automatic mTLS: timestamp=2020-07-30T11:32:54.012+0700
2020-07-30T11:32:54.040+0700 [DEBUG] plugin: using plugin: version=5
2020-07-30T11:32:54.040+0700 [DEBUG] plugin.terraform-provider-bizfly: plugin address: address=/var/folders/0r/zdwrk7wn22vd_g32twvblrpc0000gn/T/plugin894288939 network=unix timestamp=2020-07-30T11:32:54.040+0700
2020/07/30 11:32:54 [TRACE] BuiltinEvalContext: Initialized "bizfly" provider for provider.bizfly
2020-07-30T11:32:54.094+0700 [TRACE] plugin.stdio: waiting for stdio data
2020/07/30 11:32:54 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:32:54 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:32:54 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/07/30 11:32:54 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:32:54 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 11:32:54 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/07/30 11:32:54 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:32:54 [TRACE] <root>: eval: *terraform.EvalConfigProvider
2020/07/30 11:32:54 [TRACE] buildProviderConfig for provider.bizfly: using explicit config only
2020/07/30 11:32:54 [TRACE] GRPCProvider: GetSchema
2020/07/30 11:32:54 [TRACE] GRPCProvider: Configure
2020/07/30 11:32:55 [TRACE] [walkApply] Exiting eval tree: provider.bizfly
2020/07/30 11:32:55 [TRACE] vertex "provider.bizfly": visit complete
2020/07/30 11:32:55 [TRACE] dag/walk: visiting "bizfly_instance.test (prepare state)"
2020/07/30 11:32:55 [TRACE] vertex "bizfly_instance.test (prepare state)": starting visit (*terraform.NodeApplyableResource)
2020/07/30 11:32:55 [TRACE] vertex "bizfly_instance.test (prepare state)": evaluating
2020/07/30 11:32:55 [TRACE] [walkApply] Entering eval tree: bizfly_instance.test (prepare state)
2020/07/30 11:32:55 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/07/30 11:32:55 [TRACE] [walkApply] Exiting eval tree: bizfly_instance.test (prepare state)
2020/07/30 11:32:55 [TRACE] vertex "bizfly_instance.test (prepare state)": visit complete
2020/07/30 11:32:55 [TRACE] dag/walk: visiting "bizfly_instance.test"
2020/07/30 11:32:55 [TRACE] vertex "bizfly_instance.test": starting visit (*terraform.NodeApplyableResourceInstance)
2020/07/30 11:32:55 [TRACE] vertex "bizfly_instance.test": evaluating
2020/07/30 11:32:55 [TRACE] [walkApply] Entering eval tree: bizfly_instance.test
2020/07/30 11:32:55 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:32:55 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 11:32:55 [TRACE] <root>: eval: *terraform.EvalReadDiff
2020/07/30 11:32:55 [TRACE] EvalReadDiff: Read Create change from plan for bizfly_instance.test
2020/07/30 11:32:55 [TRACE] <root>: eval: *terraform.EvalIf
2020/07/30 11:32:55 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:32:55 [TRACE] <root>: eval: *terraform.EvalIf
2020/07/30 11:32:55 [TRACE] <root>: eval: *terraform.EvalReadState
2020/07/30 11:32:55 [TRACE] EvalReadState: reading state for bizfly_instance.test
2020/07/30 11:32:55 [TRACE] EvalReadState: no state present for bizfly_instance.test
2020/07/30 11:32:55 [TRACE] <root>: eval: *terraform.EvalReadDiff
2020/07/30 11:32:55 [TRACE] EvalReadDiff: Read Create change from plan for bizfly_instance.test
2020/07/30 11:32:55 [TRACE] <root>: eval: *terraform.EvalDiff
2020/07/30 11:32:55 [TRACE] Re-validating config for "bizfly_instance.test"
2020/07/30 11:32:55 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/07/30 11:32:55 [TRACE] GRPCProvider: PlanResourceChange
2020/07/30 11:32:55 [TRACE] <root>: eval: *terraform.EvalCheckPlannedChange
2020/07/30 11:32:55 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2020/07/30 11:32:55 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 11:32:55 [TRACE] <root>: eval: *terraform.EvalReadState
2020/07/30 11:32:55 [TRACE] EvalReadState: reading state for bizfly_instance.test
2020/07/30 11:32:55 [TRACE] EvalReadState: no state present for bizfly_instance.test
2020/07/30 11:32:55 [TRACE] <root>: eval: *terraform.EvalReduceDiff
2020/07/30 11:32:55 [TRACE] <root>: eval: *terraform.EvalIf
2020/07/30 11:32:55 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:32:55 [TRACE] <root>: eval: *terraform.EvalApplyPre
2020/07/30 11:32:55 [TRACE] <root>: eval: *terraform.EvalApply
2020/07/30 11:32:55 [DEBUG] bizfly_instance.test: applying the planned Create change
2020/07/30 11:32:55 [TRACE] GRPCProvider: ApplyResourceChange
2020-07-30T11:32:55.394+0700 [TRACE] plugin.stdio: received data: channel=STDOUT len=411
2020-07-30T11:32:55.394+0700 [TRACE] plugin.stdio: waiting for stdio data
2020-07-30T11:32:55.394+0700 [TRACE] plugin.stdio: received data: channel=STDOUT len=75
2020-07-30T11:32:55.394+0700 [TRACE] plugin.stdio: waiting for stdio data
2020-07-30T11:32:55.398+0700 [DEBUG] plugin.terraform-provider-bizfly: panic: interface conversion: interface {} is map[string]interface {}, not string
2020-07-30T11:32:55.398+0700 [DEBUG] plugin.terraform-provider-bizfly: 
2020-07-30T11:32:55.398+0700 [DEBUG] plugin.terraform-provider-bizfly: goroutine 82 [running]:
2020-07-30T11:32:55.398+0700 [DEBUG] plugin.terraform-provider-bizfly: terraform-provider-bizfly/provider.resouceInstanceCreate(0xc0001512d0, 0x1aebe00, 0xc000417e00, 0x0, 0x0)
2020-07-30T11:32:55.398+0700 [DEBUG] plugin.terraform-provider-bizfly: 	/Users/hung/go/src/terraform-provider-bizfly/provider/resource_instance.go:148 +0x915
2020-07-30T11:32:55.398+0700 [DEBUG] plugin.terraform-provider-bizfly: github.com/hashicorp/terraform-plugin-sdk/helper/schema.(*Resource).Apply(0xc0003842d0, 0xc00015b360, 0xc0001c4a40, 0x1aebe00, 0xc000417e00, 0x1a9ef01, 0xc000411328, 0xc0005f9410)
2020-07-30T11:32:55.398+0700 [DEBUG] plugin.terraform-provider-bizfly: 	/Users/hung/go/pkg/mod/github.com/hashicorp/terraform-plugin-sdk@v1.15.0/helper/schema/resource.go:310 +0x365
2020-07-30T11:32:55.398+0700 [DEBUG] plugin.terraform-provider-bizfly: github.com/hashicorp/terraform-plugin-sdk/helper/schema.(*Provider).Apply(0xc0003b6000, 0xc000467a10, 0xc00015b360, 0xc0001c4a40, 0xc0005face8, 0xc0003946b0, 0x1aa0b20)
2020-07-30T11:32:55.398+0700 [DEBUG] plugin.terraform-provider-bizfly: 	/Users/hung/go/pkg/mod/github.com/hashicorp/terraform-plugin-sdk@v1.15.0/helper/schema/provider.go:294 +0x99
2020-07-30T11:32:55.398+0700 [DEBUG] plugin.terraform-provider-bizfly: github.com/hashicorp/terraform-plugin-sdk/internal/helper/plugin.(*GRPCProviderServer).ApplyResourceChange(0xc000394020, 0x1e840a0, 0xc0005eb530, 0xc000150d20, 0xc000394020, 0xc0005eb530, 0xc00061eb78)
2020-07-30T11:32:55.398+0700 [DEBUG] plugin.terraform-provider-bizfly: 	/Users/hung/go/pkg/mod/github.com/hashicorp/terraform-plugin-sdk@v1.15.0/internal/helper/plugin/grpc_provider.go:885 +0x8b4
2020-07-30T11:32:55.398+0700 [DEBUG] plugin.terraform-provider-bizfly: github.com/hashicorp/terraform-plugin-sdk/internal/tfplugin5._Provider_ApplyResourceChange_Handler(0x1bb1aa0, 0xc000394020, 0x1e840a0, 0xc0005eb530, 0xc00060b620, 0x0, 0x1e840a0, 0xc0005eb530, 0xc0005f61e0, 0x1ce)
2020-07-30T11:32:55.398+0700 [DEBUG] plugin.terraform-provider-bizfly: 	/Users/hung/go/pkg/mod/github.com/hashicorp/terraform-plugin-sdk@v1.15.0/internal/tfplugin5/tfplugin5.pb.go:3305 +0x217
2020-07-30T11:32:55.398+0700 [DEBUG] plugin.terraform-provider-bizfly: google.golang.org/grpc.(*Server).processUnaryRPC(0xc000001980, 0x1e8e8e0, 0xc000642900, 0xc00013a600, 0xc0000b51d0, 0x2595940, 0x0, 0x0, 0x0)
2020-07-30T11:32:55.398+0700 [DEBUG] plugin.terraform-provider-bizfly: 	/Users/hung/go/pkg/mod/google.golang.org/grpc@v1.27.1/server.go:1024 +0x501
2020-07-30T11:32:55.398+0700 [DEBUG] plugin.terraform-provider-bizfly: google.golang.org/grpc.(*Server).handleStream(0xc000001980, 0x1e8e8e0, 0xc000642900, 0xc00013a600, 0x0)
2020-07-30T11:32:55.398+0700 [DEBUG] plugin.terraform-provider-bizfly: 	/Users/hung/go/pkg/mod/google.golang.org/grpc@v1.27.1/server.go:1313 +0xd3d
2020-07-30T11:32:55.398+0700 [DEBUG] plugin.terraform-provider-bizfly: google.golang.org/grpc.(*Server).serveStreams.func1.1(0xc000038290, 0xc000001980, 0x1e8e8e0, 0xc000642900, 0xc00013a600)
2020-07-30T11:32:55.398+0700 [DEBUG] plugin.terraform-provider-bizfly: 	/Users/hung/go/pkg/mod/google.golang.org/grpc@v1.27.1/server.go:722 +0xa1
2020-07-30T11:32:55.398+0700 [DEBUG] plugin.terraform-provider-bizfly: created by google.golang.org/grpc.(*Server).serveStreams.func1
2020-07-30T11:32:55.398+0700 [DEBUG] plugin.terraform-provider-bizfly: 	/Users/hung/go/pkg/mod/google.golang.org/grpc@v1.27.1/server.go:720 +0xa1
2020-07-30T11:32:55.403+0700 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2020/07/30 11:32:55 [DEBUG] bizfly_instance.test: apply errored, but we're indicating that via the Error pointer rather than returning it: rpc error: code = Unavailable desc = transport is closing
2020/07/30 11:32:55 [TRACE] <root>: eval: *terraform.EvalMaybeTainted
2020/07/30 11:32:55 [TRACE] EvalMaybeTainted: bizfly_instance.test encountered an error during creation, so it is now marked as tainted
2020/07/30 11:32:55 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/07/30 11:32:55 [TRACE] EvalWriteState: removing state object for bizfly_instance.test
2020/07/30 11:32:55 [TRACE] <root>: eval: *terraform.EvalApplyProvisioners
2020/07/30 11:32:55 [TRACE] EvalApplyProvisioners: bizfly_instance.test has no state, so skipping provisioners
2020/07/30 11:32:55 [TRACE] <root>: eval: *terraform.EvalMaybeTainted
2020/07/30 11:32:55 [TRACE] EvalMaybeTainted: bizfly_instance.test encountered an error during creation, so it is now marked as tainted
2020/07/30 11:32:55 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/07/30 11:32:55 [TRACE] EvalWriteState: removing state object for bizfly_instance.test
2020/07/30 11:32:55 [TRACE] <root>: eval: *terraform.EvalIf
2020-07-30T11:32:55.403+0700 [DEBUG] plugin: plugin process exited: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=56908 error="exit status 2"
2020/07/30 11:32:55 [TRACE] <root>: eval: *terraform.EvalIf
2020/07/30 11:32:55 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/07/30 11:32:55 [TRACE] <root>: eval: *terraform.EvalApplyPost
2020/07/30 11:32:55 [ERROR] <root>: eval: *terraform.EvalApplyPost, err: rpc error: code = Unavailable desc = transport is closing
2020/07/30 11:32:55 [ERROR] <root>: eval: *terraform.EvalSequence, err: rpc error: code = Unavailable desc = transport is closing
2020/07/30 11:32:55 [TRACE] [walkApply] Exiting eval tree: bizfly_instance.test
2020/07/30 11:32:55 [TRACE] vertex "bizfly_instance.test": visit complete
2020/07/30 11:32:55 [TRACE] dag/walk: upstream of "provider.bizfly (close)" errored, so skipping
2020/07/30 11:32:55 [TRACE] dag/walk: upstream of "meta.count-boundary (EachMode fixup)" errored, so skipping
2020/07/30 11:32:55 [TRACE] dag/walk: upstream of "root" errored, so skipping
2020/07/30 11:32:55 [TRACE] statemgr.Filesystem: not making a backup, because the new snapshot is identical to the old
2020/07/30 11:32:55 [TRACE] statemgr.Filesystem: no state changes since last snapshot
2020/07/30 11:32:55 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2020/07/30 11:32:55 [TRACE] statemgr.Filesystem: removing lock metadata file .terraform.tfstate.lock.info
2020/07/30 11:32:55 [TRACE] statemgr.Filesystem: unlocking terraform.tfstate using fcntl flock
2020-07-30T11:32:55.410+0700 [DEBUG] plugin: plugin exited
2020/07/30 11:35:57 [INFO] Terraform version: 0.12.29  
2020/07/30 11:35:57 [INFO] Go runtime version: go1.13.14
2020/07/30 11:35:57 [INFO] CLI args: []string{"/usr/local/bin/terraform", "init"}
2020/07/30 11:35:57 [DEBUG] Attempting to open CLI config file: /Users/hung/.terraformrc
2020/07/30 11:35:57 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2020/07/30 11:35:57 [INFO] CLI command args: []string{"init"}
2020/07/30 11:35:57 [TRACE] Meta.Backend: no config given or present on disk, so returning nil config
2020/07/30 11:35:57 [TRACE] Meta.Backend: backend has not previously been initialized in this working directory
2020/07/30 11:35:57 [DEBUG] New state was assigned lineage "2ead9fd5-f535-d589-925b-fb2fc5462b68"
2020/07/30 11:35:57 [TRACE] Meta.Backend: using default local state only (no backend configuration, and no existing initialized backend)
2020/07/30 11:35:57 [TRACE] Meta.Backend: instantiated backend of type <nil>
2020/07/30 11:35:57 [DEBUG] checking for provider in "."
2020/07/30 11:35:57 [WARN] found legacy provider "terraform-provider-bizfly"
2020/07/30 11:35:57 [DEBUG] checking for provider in "/usr/local/bin"
2020/07/30 11:35:57 [DEBUG] checking for provider in ".terraform/plugins/darwin_amd64"
2020/07/30 11:35:57 [DEBUG] found valid plugin: "bizfly", "0.0.0", "/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly"
2020/07/30 11:35:57 [DEBUG] checking for provisioner in "."
2020/07/30 11:35:57 [DEBUG] checking for provisioner in "/usr/local/bin"
2020/07/30 11:35:57 [DEBUG] checking for provisioner in ".terraform/plugins/darwin_amd64"
2020/07/30 11:35:57 [TRACE] Meta.Backend: backend <nil> does not support operations, so wrapping it in a local backend
2020/07/30 11:35:57 [TRACE] backend/local: state manager for workspace "default" will:
 - read initial snapshot from terraform.tfstate
 - write new snapshots to terraform.tfstate
 - create any backup at terraform.tfstate.backup
2020/07/30 11:35:57 [TRACE] statemgr.Filesystem: reading initial snapshot from terraform.tfstate
2020/07/30 11:35:57 [TRACE] statemgr.Filesystem: read snapshot with lineage "8e1934d5-1d8f-e9a8-58e8-6c54c3aa209a" serial 1
2020/07/30 11:35:57 [DEBUG] checking for provider in "."
2020/07/30 11:35:57 [WARN] found legacy provider "terraform-provider-bizfly"
2020/07/30 11:35:57 [DEBUG] checking for provider in "/usr/local/bin"
2020/07/30 11:35:57 [DEBUG] checking for provider in ".terraform/plugins/darwin_amd64"
2020/07/30 11:35:57 [DEBUG] found valid plugin: "bizfly", "0.0.0", "/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly"
2020/07/30 11:35:57 [DEBUG] plugin requirements: "bizfly"=""
2020/07/30 11:35:57 [DEBUG] checking for provider in "."
2020/07/30 11:35:57 [WARN] found legacy provider "terraform-provider-bizfly"
2020/07/30 11:35:57 [DEBUG] checking for provider in "/usr/local/bin"
2020/07/30 11:35:57 [DEBUG] checking for provider in ".terraform/plugins/darwin_amd64"
2020/07/30 11:35:57 [DEBUG] found valid plugin: "bizfly", "0.0.0", "/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly"
2020/07/30 11:35:57 [DEBUG] checking for provider in ".terraform/plugins/darwin_amd64"
2020/07/30 11:36:02 [INFO] Terraform version: 0.12.29  
2020/07/30 11:36:02 [INFO] Go runtime version: go1.13.14
2020/07/30 11:36:02 [INFO] CLI args: []string{"/usr/local/bin/terraform", "plan"}
2020/07/30 11:36:02 [DEBUG] Attempting to open CLI config file: /Users/hung/.terraformrc
2020/07/30 11:36:02 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2020/07/30 11:36:02 [INFO] CLI command args: []string{"plan"}
2020/07/30 11:36:02 [TRACE] Meta.Backend: no config given or present on disk, so returning nil config
2020/07/30 11:36:02 [TRACE] Meta.Backend: backend has not previously been initialized in this working directory
2020/07/30 11:36:02 [DEBUG] New state was assigned lineage "7c27909c-3c70-3551-d4ac-4f6df43fc5ac"
2020/07/30 11:36:02 [TRACE] Meta.Backend: using default local state only (no backend configuration, and no existing initialized backend)
2020/07/30 11:36:02 [TRACE] Meta.Backend: instantiated backend of type <nil>
2020/07/30 11:36:02 [DEBUG] checking for provider in "."
2020/07/30 11:36:02 [WARN] found legacy provider "terraform-provider-bizfly"
2020/07/30 11:36:02 [DEBUG] checking for provider in "/usr/local/bin"
2020/07/30 11:36:02 [DEBUG] checking for provider in ".terraform/plugins/darwin_amd64"
2020/07/30 11:36:02 [DEBUG] found valid plugin: "bizfly", "0.0.0", "/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly"
2020/07/30 11:36:02 [DEBUG] checking for provisioner in "."
2020/07/30 11:36:02 [DEBUG] checking for provisioner in "/usr/local/bin"
2020/07/30 11:36:02 [DEBUG] checking for provisioner in ".terraform/plugins/darwin_amd64"
2020/07/30 11:36:02 [TRACE] Meta.Backend: backend <nil> does not support operations, so wrapping it in a local backend
2020/07/30 11:36:02 [INFO] backend/local: starting Plan operation
2020/07/30 11:36:02 [TRACE] backend/local: requesting state manager for workspace "default"
2020/07/30 11:36:02 [TRACE] backend/local: state manager for workspace "default" will:
 - read initial snapshot from terraform.tfstate
 - write new snapshots to terraform.tfstate
 - create any backup at terraform.tfstate.backup
2020/07/30 11:36:02 [TRACE] backend/local: requesting state lock for workspace "default"
2020/07/30 11:36:02 [TRACE] statemgr.Filesystem: preparing to manage state snapshots at terraform.tfstate
2020/07/30 11:36:02 [TRACE] statemgr.Filesystem: existing snapshot has lineage "8e1934d5-1d8f-e9a8-58e8-6c54c3aa209a" serial 1
2020/07/30 11:36:02 [TRACE] statemgr.Filesystem: locking terraform.tfstate using fcntl flock
2020/07/30 11:36:02 [TRACE] statemgr.Filesystem: writing lock metadata to .terraform.tfstate.lock.info
2020/07/30 11:36:02 [TRACE] backend/local: reading remote state for workspace "default"
2020/07/30 11:36:02 [TRACE] statemgr.Filesystem: reading latest snapshot from terraform.tfstate
2020/07/30 11:36:02 [TRACE] statemgr.Filesystem: read snapshot with lineage "8e1934d5-1d8f-e9a8-58e8-6c54c3aa209a" serial 1
2020/07/30 11:36:02 [TRACE] backend/local: retrieving local state snapshot for workspace "default"
2020/07/30 11:36:02 [TRACE] backend/local: building context for current working directory
2020/07/30 11:36:02 [TRACE] terraform.NewContext: starting
2020/07/30 11:36:02 [TRACE] terraform.NewContext: resolving provider version selections
2020/07/30 11:36:02 [TRACE] terraform.NewContext: loading provider schemas
2020/07/30 11:36:02 [TRACE] LoadSchemas: retrieving schema for provider type "bizfly"
2020-07-30T11:36:02.189+0700 [INFO]  plugin: configuring client automatic mTLS
2020-07-30T11:36:02.227+0700 [DEBUG] plugin: starting plugin: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly args=[/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly]
2020-07-30T11:36:02.230+0700 [DEBUG] plugin: plugin started: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=57216
2020-07-30T11:36:02.230+0700 [DEBUG] plugin: waiting for RPC address: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly
2020-07-30T11:36:02.252+0700 [INFO]  plugin.terraform-provider-bizfly: configuring server automatic mTLS: timestamp=2020-07-30T11:36:02.252+0700
2020-07-30T11:36:02.278+0700 [DEBUG] plugin.terraform-provider-bizfly: plugin address: address=/var/folders/0r/zdwrk7wn22vd_g32twvblrpc0000gn/T/plugin000076655 network=unix timestamp=2020-07-30T11:36:02.277+0700
2020-07-30T11:36:02.278+0700 [DEBUG] plugin: using plugin: version=5
2020/07/30 11:36:02 [TRACE] GRPCProvider: GetSchema
2020-07-30T11:36:02.336+0700 [TRACE] plugin.stdio: waiting for stdio data
2020/07/30 11:36:02 [TRACE] GRPCProvider: Close
2020-07-30T11:36:02.340+0700 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2020-07-30T11:36:02.341+0700 [DEBUG] plugin: plugin process exited: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=57216
2020-07-30T11:36:02.341+0700 [DEBUG] plugin: plugin exited
2020/07/30 11:36:02 [TRACE] terraform.NewContext: complete
2020/07/30 11:36:02 [TRACE] backend/local: finished building terraform.Context
2020/07/30 11:36:02 [TRACE] backend/local: requesting interactive input, if necessary
2020/07/30 11:36:02 [TRACE] Context.Input: Prompting for provider arguments
2020/07/30 11:36:02 [TRACE] Context.Input: Provider provider.bizfly declared at main.tf:1,1-18
2020/07/30 11:36:02 [TRACE] Context.Input: Input for provider.bizfly: map[string]cty.Value{}
2020/07/30 11:36:02 [TRACE] backend/local: running validation operation
2020/07/30 11:36:02 [INFO] terraform: building graph: GraphTypeValidate
2020/07/30 11:36:02 [TRACE] Executing graph transform *terraform.ConfigTransformer
2020/07/30 11:36:02 [TRACE] ConfigTransformer: Starting for path: 
2020/07/30 11:36:02 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
  ------
2020/07/30 11:36:02 [TRACE] Executing graph transform *terraform.LocalTransformer
2020/07/30 11:36:02 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2020/07/30 11:36:02 [TRACE] Executing graph transform *terraform.OutputTransformer
2020/07/30 11:36:02 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2020/07/30 11:36:02 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2020/07/30 11:36:02 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2020/07/30 11:36:02 [TRACE] Executing graph transform *terraform.StateTransformer
2020/07/30 11:36:02 [TRACE] StateTransformer: state is empty, so nothing to do
2020/07/30 11:36:02 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2020/07/30 11:36:02 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2020/07/30 11:36:02 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2020/07/30 11:36:02 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2020/07/30 11:36:02 [TRACE] AttachResourceConfigTransformer: attaching to "bizfly_instance.test" (*terraform.NodeValidatableResource) config from main.tf:7,1-34
2020/07/30 11:36:02 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2020/07/30 11:36:02 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/30 11:36:02 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/30 11:36:02 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2020/07/30 11:36:02 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:36:02 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2020/07/30 11:36:02 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2020/07/30 11:36:02 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2020/07/30 11:36:02 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2020/07/30 11:36:02 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2020/07/30 11:36:02 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2020/07/30 11:36:02 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2020/07/30 11:36:02 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2020/07/30 11:36:02 [TRACE] ProviderConfigTransformer: attaching to "provider.bizfly" provider configuration from main.tf:1,1-18
2020/07/30 11:36:02 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:36:02 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2020/07/30 11:36:02 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2020/07/30 11:36:02 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2020/07/30 11:36:02 [TRACE] ProviderTransformer: bizfly_instance.test is provided by provider.bizfly or inherited equivalent
2020/07/30 11:36:02 [TRACE] ProviderTransformer: exact match for provider.bizfly serving bizfly_instance.test
2020/07/30 11:36:02 [DEBUG] ProviderTransformer: "bizfly_instance.test" (*terraform.NodeValidatableResource) needs provider.bizfly
2020/07/30 11:36:02 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:36:02 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2020/07/30 11:36:02 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2020/07/30 11:36:02 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2020/07/30 11:36:02 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2020/07/30 11:36:02 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:36:02 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2020/07/30 11:36:02 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2020/07/30 11:36:02 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2020/07/30 11:36:02 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.bizfly
2020/07/30 11:36:02 [TRACE] AttachSchemaTransformer: attaching resource schema to bizfly_instance.test
2020/07/30 11:36:02 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2020/07/30 11:36:02 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/30 11:36:02 [DEBUG] ReferenceTransformer: "bizfly_instance.test" references: []
2020/07/30 11:36:02 [DEBUG] ReferenceTransformer: "var.login" references: []
2020/07/30 11:36:02 [DEBUG] ReferenceTransformer: "provider.bizfly" references: []
2020/07/30 11:36:02 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/30 11:36:02 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2020/07/30 11:36:02 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:36:02 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/30 11:36:02 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/30 11:36:02 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2020/07/30 11:36:02 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2020/07/30 11:36:02 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2020/07/30 11:36:02 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
    bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:36:02 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2020/07/30 11:36:02 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer (no changes)
2020/07/30 11:36:02 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/30 11:36:02 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
    bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.bizfly (close) - *terraform.graphNodeCloseProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:36:02 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2020/07/30 11:36:02 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodeValidatableResource
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
    bizfly_instance.test - *terraform.NodeValidatableResource
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.bizfly (close) - *terraform.graphNodeCloseProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:36:02 [DEBUG] Starting graph walk: walkValidate
2020/07/30 11:36:02 [TRACE] dag/walk: updating graph
2020/07/30 11:36:02 [TRACE] dag/walk: added new vertex: "provider.bizfly (close)"
2020/07/30 11:36:02 [TRACE] dag/walk: added new vertex: "root"
2020/07/30 11:36:02 [TRACE] dag/walk: added new vertex: "bizfly_instance.test"
2020/07/30 11:36:02 [TRACE] dag/walk: added new vertex: "var.login"
2020/07/30 11:36:02 [TRACE] dag/walk: added new vertex: "provider.bizfly"
2020/07/30 11:36:02 [TRACE] dag/walk: added new vertex: "meta.count-boundary (EachMode fixup)"
2020/07/30 11:36:02 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "bizfly_instance.test"
2020/07/30 11:36:02 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "var.login"
2020/07/30 11:36:02 [TRACE] dag/walk: added edge: "provider.bizfly (close)" waiting on "bizfly_instance.test"
2020/07/30 11:36:02 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (EachMode fixup)"
2020/07/30 11:36:02 [TRACE] dag/walk: added edge: "root" waiting on "provider.bizfly (close)"
2020/07/30 11:36:02 [TRACE] dag/walk: added edge: "bizfly_instance.test" waiting on "provider.bizfly"
2020/07/30 11:36:02 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (EachMode fixup)", sending new deps
2020/07/30 11:36:02 [TRACE] dag/walk: dependencies changed for "provider.bizfly (close)", sending new deps
2020/07/30 11:36:02 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2020/07/30 11:36:02 [TRACE] dag/walk: dependencies changed for "bizfly_instance.test", sending new deps
2020/07/30 11:36:02 [TRACE] dag/walk: visiting "var.login"
2020/07/30 11:36:02 [TRACE] vertex "var.login": starting visit (*terraform.NodeRootVariable)
2020/07/30 11:36:02 [TRACE] vertex "var.login": evaluating
2020/07/30 11:36:02 [TRACE] [walkValidate] Entering eval tree: var.login
2020/07/30 11:36:02 [TRACE] dag/walk: visiting "provider.bizfly"
2020/07/30 11:36:02 [TRACE] vertex "provider.bizfly": starting visit (*terraform.NodeApplyableProvider)
2020/07/30 11:36:02 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:36:02 [TRACE] [walkValidate] Exiting eval tree: var.login
2020/07/30 11:36:02 [TRACE] vertex "var.login": visit complete
2020/07/30 11:36:02 [TRACE] vertex "provider.bizfly": evaluating
2020/07/30 11:36:02 [TRACE] [walkValidate] Entering eval tree: provider.bizfly
2020/07/30 11:36:02 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:36:02 [TRACE] <root>: eval: *terraform.EvalInitProvider
2020-07-30T11:36:02.348+0700 [INFO]  plugin: configuring client automatic mTLS
2020-07-30T11:36:02.373+0700 [DEBUG] plugin: starting plugin: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly args=[/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly]
2020-07-30T11:36:02.376+0700 [DEBUG] plugin: plugin started: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=57217
2020-07-30T11:36:02.376+0700 [DEBUG] plugin: waiting for RPC address: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly
2020-07-30T11:36:02.395+0700 [INFO]  plugin.terraform-provider-bizfly: configuring server automatic mTLS: timestamp=2020-07-30T11:36:02.395+0700
2020-07-30T11:36:02.421+0700 [DEBUG] plugin.terraform-provider-bizfly: plugin address: address=/var/folders/0r/zdwrk7wn22vd_g32twvblrpc0000gn/T/plugin386412268 network=unix timestamp=2020-07-30T11:36:02.421+0700
2020-07-30T11:36:02.421+0700 [DEBUG] plugin: using plugin: version=5
2020/07/30 11:36:02 [TRACE] BuiltinEvalContext: Initialized "bizfly" provider for provider.bizfly
2020/07/30 11:36:02 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:36:02 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/07/30 11:36:02 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:36:02 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 11:36:02 [TRACE] <root>: eval: *terraform.EvalValidateProvider
2020-07-30T11:36:02.474+0700 [TRACE] plugin.stdio: waiting for stdio data
2020/07/30 11:36:02 [TRACE] buildProviderConfig for provider.bizfly: using explicit config only
2020/07/30 11:36:02 [TRACE] GRPCProvider: GetSchema
2020/07/30 11:36:02 [TRACE] GRPCProvider: PrepareProviderConfig
2020/07/30 11:36:02 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:36:02 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:36:02 [TRACE] [walkValidate] Exiting eval tree: provider.bizfly
2020/07/30 11:36:02 [TRACE] vertex "provider.bizfly": visit complete
2020/07/30 11:36:02 [TRACE] dag/walk: visiting "bizfly_instance.test"
2020/07/30 11:36:02 [TRACE] vertex "bizfly_instance.test": starting visit (*terraform.NodeValidatableResource)
2020/07/30 11:36:02 [TRACE] vertex "bizfly_instance.test": evaluating
2020/07/30 11:36:02 [TRACE] [walkValidate] Entering eval tree: bizfly_instance.test
2020/07/30 11:36:02 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:36:02 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 11:36:02 [TRACE] <root>: eval: *terraform.EvalValidateResource
2020/07/30 11:36:02 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/07/30 11:36:02 [TRACE] [walkValidate] Exiting eval tree: bizfly_instance.test
2020/07/30 11:36:02 [TRACE] vertex "bizfly_instance.test": visit complete
2020/07/30 11:36:02 [TRACE] dag/walk: visiting "provider.bizfly (close)"
2020/07/30 11:36:02 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2020/07/30 11:36:02 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2020/07/30 11:36:02 [TRACE] vertex "meta.count-boundary (EachMode fixup)": evaluating
2020/07/30 11:36:02 [TRACE] vertex "provider.bizfly (close)": starting visit (*terraform.graphNodeCloseProvider)
2020/07/30 11:36:02 [TRACE] [walkValidate] Entering eval tree: meta.count-boundary (EachMode fixup)
2020/07/30 11:36:02 [TRACE] <root>: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2020/07/30 11:36:02 [TRACE] vertex "provider.bizfly (close)": evaluating
2020/07/30 11:36:02 [TRACE] [walkValidate] Entering eval tree: provider.bizfly (close)
2020/07/30 11:36:02 [TRACE] <root>: eval: *terraform.EvalCloseProvider
2020/07/30 11:36:02 [TRACE] GRPCProvider: Close
2020/07/30 11:36:02 [TRACE] [walkValidate] Exiting eval tree: meta.count-boundary (EachMode fixup)
2020/07/30 11:36:02 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2020-07-30T11:36:02.480+0700 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2020-07-30T11:36:02.482+0700 [DEBUG] plugin: plugin process exited: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=57217
2020-07-30T11:36:02.482+0700 [DEBUG] plugin: plugin exited
2020/07/30 11:36:02 [TRACE] [walkValidate] Exiting eval tree: provider.bizfly (close)
2020/07/30 11:36:02 [TRACE] vertex "provider.bizfly (close)": visit complete
2020/07/30 11:36:02 [TRACE] dag/walk: visiting "root"
2020/07/30 11:36:02 [TRACE] vertex "root": starting visit (terraform.graphNodeRoot)
2020/07/30 11:36:02 [TRACE] vertex "root": visit complete
2020/07/30 11:36:02 [INFO] backend/local: plan calling Refresh
2020/07/30 11:36:02 [INFO] terraform: building graph: GraphTypeRefresh
2020/07/30 11:36:02 [TRACE] No managed resources in state during refresh; skipping managed resource transformer
2020/07/30 11:36:02 [TRACE] Executing graph transform *terraform.ConfigTransformer
2020/07/30 11:36:02 [TRACE] ConfigTransformer: Starting for path: 
2020/07/30 11:36:02 [TRACE] Completed graph transform *terraform.ConfigTransformer (no changes)
2020/07/30 11:36:02 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2020/07/30 11:36:02 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2020/07/30 11:36:02 [TRACE] Executing graph transform *terraform.StateTransformer
2020/07/30 11:36:02 [TRACE] StateTransformer: state is empty, so nothing to do
2020/07/30 11:36:02 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2020/07/30 11:36:02 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/30 11:36:02 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/30 11:36:02 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2020/07/30 11:36:02 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2020/07/30 11:36:02 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2020/07/30 11:36:02 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:36:02 [TRACE] Executing graph transform *terraform.LocalTransformer
2020/07/30 11:36:02 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2020/07/30 11:36:02 [TRACE] Executing graph transform *terraform.OutputTransformer
2020/07/30 11:36:02 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2020/07/30 11:36:02 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2020/07/30 11:36:02 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2020/07/30 11:36:02 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2020/07/30 11:36:02 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2020/07/30 11:36:02 [TRACE] ProviderConfigTransformer: attaching to "provider.bizfly" provider configuration from main.tf:1,1-18
2020/07/30 11:36:02 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:36:02 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2020/07/30 11:36:02 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2020/07/30 11:36:02 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2020/07/30 11:36:02 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer (no changes)
2020/07/30 11:36:02 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2020/07/30 11:36:02 [DEBUG] pruning unused provider.bizfly
2020/07/30 11:36:02 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer with new graph:
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:36:02 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2020/07/30 11:36:02 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2020/07/30 11:36:02 [TRACE] Completed graph transform *terraform.graphTransformerMulti (no changes)
2020/07/30 11:36:02 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2020/07/30 11:36:02 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2020/07/30 11:36:02 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/30 11:36:02 [DEBUG] ReferenceTransformer: "var.login" references: []
2020/07/30 11:36:02 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/30 11:36:02 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2020/07/30 11:36:02 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2020/07/30 11:36:02 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/30 11:36:02 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/30 11:36:02 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2020/07/30 11:36:02 [TRACE] Completed graph transform *terraform.CloseProviderTransformer (no changes)
2020/07/30 11:36:02 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/30 11:36:02 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/07/30 11:36:02 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2020/07/30 11:36:02 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer (no changes)
2020/07/30 11:36:02 [DEBUG] Starting graph walk: walkRefresh
2020/07/30 11:36:02 [TRACE] dag/walk: updating graph
2020/07/30 11:36:02 [TRACE] dag/walk: added new vertex: "var.login"
2020/07/30 11:36:02 [TRACE] dag/walk: visiting "var.login"
2020/07/30 11:36:02 [TRACE] vertex "var.login": starting visit (*terraform.NodeRootVariable)
2020/07/30 11:36:02 [TRACE] vertex "var.login": evaluating
2020/07/30 11:36:02 [TRACE] [walkRefresh] Entering eval tree: var.login
2020/07/30 11:36:02 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:36:02 [TRACE] [walkRefresh] Exiting eval tree: var.login
2020/07/30 11:36:02 [TRACE] vertex "var.login": visit complete
2020/07/30 11:36:02 [INFO] backend/local: plan calling Plan
2020/07/30 11:36:02 [INFO] terraform: building graph: GraphTypePlan
2020/07/30 11:36:02 [TRACE] Executing graph transform *terraform.ConfigTransformer
2020/07/30 11:36:02 [TRACE] ConfigTransformer: Starting for path: 
2020/07/30 11:36:02 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
  ------
2020/07/30 11:36:02 [TRACE] Executing graph transform *terraform.LocalTransformer
2020/07/30 11:36:02 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2020/07/30 11:36:02 [TRACE] Executing graph transform *terraform.OutputTransformer
2020/07/30 11:36:02 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2020/07/30 11:36:02 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2020/07/30 11:36:02 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2020/07/30 11:36:02 [TRACE] Executing graph transform *terraform.StateTransformer
2020/07/30 11:36:02 [TRACE] StateTransformer: state is empty, so nothing to do
2020/07/30 11:36:02 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2020/07/30 11:36:02 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2020/07/30 11:36:02 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2020/07/30 11:36:02 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2020/07/30 11:36:02 [TRACE] AttachResourceConfigTransformer: attaching to "bizfly_instance.test" (*terraform.NodePlannableResource) config from main.tf:7,1-34
2020/07/30 11:36:02 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2020/07/30 11:36:02 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/30 11:36:02 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/30 11:36:02 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2020/07/30 11:36:02 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:36:02 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2020/07/30 11:36:02 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2020/07/30 11:36:02 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2020/07/30 11:36:02 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2020/07/30 11:36:02 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2020/07/30 11:36:02 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2020/07/30 11:36:02 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2020/07/30 11:36:02 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2020/07/30 11:36:02 [TRACE] ProviderConfigTransformer: attaching to "provider.bizfly" provider configuration from main.tf:1,1-18
2020/07/30 11:36:02 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:36:02 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2020/07/30 11:36:02 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2020/07/30 11:36:02 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2020/07/30 11:36:02 [TRACE] ProviderTransformer: bizfly_instance.test is provided by provider.bizfly or inherited equivalent
2020/07/30 11:36:02 [TRACE] ProviderTransformer: exact match for provider.bizfly serving bizfly_instance.test
2020/07/30 11:36:02 [DEBUG] ProviderTransformer: "bizfly_instance.test" (*terraform.NodePlannableResource) needs provider.bizfly
2020/07/30 11:36:02 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:36:02 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2020/07/30 11:36:02 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2020/07/30 11:36:02 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2020/07/30 11:36:02 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2020/07/30 11:36:02 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:36:02 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2020/07/30 11:36:02 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2020/07/30 11:36:02 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2020/07/30 11:36:02 [TRACE] AttachSchemaTransformer: attaching resource schema to bizfly_instance.test
2020/07/30 11:36:02 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.bizfly
2020/07/30 11:36:02 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2020/07/30 11:36:02 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/30 11:36:02 [DEBUG] ReferenceTransformer: "bizfly_instance.test" references: []
2020/07/30 11:36:02 [DEBUG] ReferenceTransformer: "var.login" references: []
2020/07/30 11:36:02 [DEBUG] ReferenceTransformer: "provider.bizfly" references: []
2020/07/30 11:36:02 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/30 11:36:02 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2020/07/30 11:36:02 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:36:02 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/30 11:36:02 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/30 11:36:02 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2020/07/30 11:36:02 [TRACE] ForcedCBDTransformer: "bizfly_instance.test" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2020/07/30 11:36:02 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2020/07/30 11:36:02 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2020/07/30 11:36:02 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
    bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:36:02 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2020/07/30 11:36:02 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer (no changes)
2020/07/30 11:36:02 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/30 11:36:02 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
    bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.bizfly (close) - *terraform.graphNodeCloseProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:36:02 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2020/07/30 11:36:02 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodePlannableResource
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
    bizfly_instance.test - *terraform.NodePlannableResource
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.bizfly (close) - *terraform.graphNodeCloseProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:36:02 [DEBUG] Starting graph walk: walkPlan
2020/07/30 11:36:02 [TRACE] dag/walk: updating graph
2020/07/30 11:36:02 [TRACE] dag/walk: added new vertex: "root"
2020/07/30 11:36:02 [TRACE] dag/walk: added new vertex: "bizfly_instance.test"
2020/07/30 11:36:02 [TRACE] dag/walk: added new vertex: "var.login"
2020/07/30 11:36:02 [TRACE] dag/walk: added new vertex: "provider.bizfly"
2020/07/30 11:36:02 [TRACE] dag/walk: added new vertex: "meta.count-boundary (EachMode fixup)"
2020/07/30 11:36:02 [TRACE] dag/walk: added new vertex: "provider.bizfly (close)"
2020/07/30 11:36:02 [TRACE] dag/walk: added edge: "bizfly_instance.test" waiting on "provider.bizfly"
2020/07/30 11:36:02 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "bizfly_instance.test"
2020/07/30 11:36:02 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "var.login"
2020/07/30 11:36:02 [TRACE] dag/walk: added edge: "provider.bizfly (close)" waiting on "bizfly_instance.test"
2020/07/30 11:36:02 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (EachMode fixup)"
2020/07/30 11:36:02 [TRACE] dag/walk: added edge: "root" waiting on "provider.bizfly (close)"
2020/07/30 11:36:02 [TRACE] dag/walk: dependencies changed for "bizfly_instance.test", sending new deps
2020/07/30 11:36:02 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (EachMode fixup)", sending new deps
2020/07/30 11:36:02 [TRACE] dag/walk: dependencies changed for "provider.bizfly (close)", sending new deps
2020/07/30 11:36:02 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2020/07/30 11:36:02 [TRACE] dag/walk: visiting "var.login"
2020/07/30 11:36:02 [TRACE] vertex "var.login": starting visit (*terraform.NodeRootVariable)
2020/07/30 11:36:02 [TRACE] dag/walk: visiting "provider.bizfly"
2020/07/30 11:36:02 [TRACE] vertex "var.login": evaluating
2020/07/30 11:36:02 [TRACE] vertex "provider.bizfly": starting visit (*terraform.NodeApplyableProvider)
2020/07/30 11:36:02 [TRACE] [walkPlan] Entering eval tree: var.login
2020/07/30 11:36:02 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:36:02 [TRACE] vertex "provider.bizfly": evaluating
2020/07/30 11:36:02 [TRACE] [walkPlan] Exiting eval tree: var.login
2020/07/30 11:36:02 [TRACE] [walkPlan] Entering eval tree: provider.bizfly
2020/07/30 11:36:02 [TRACE] vertex "var.login": visit complete
2020/07/30 11:36:02 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:36:02 [TRACE] <root>: eval: *terraform.EvalInitProvider
2020-07-30T11:36:02.484+0700 [INFO]  plugin: configuring client automatic mTLS
2020-07-30T11:36:02.511+0700 [DEBUG] plugin: starting plugin: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly args=[/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly]
2020-07-30T11:36:02.516+0700 [DEBUG] plugin: plugin started: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=57218
2020-07-30T11:36:02.516+0700 [DEBUG] plugin: waiting for RPC address: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly
2020-07-30T11:36:02.534+0700 [INFO]  plugin.terraform-provider-bizfly: configuring server automatic mTLS: timestamp=2020-07-30T11:36:02.534+0700
2020-07-30T11:36:02.560+0700 [DEBUG] plugin.terraform-provider-bizfly: plugin address: address=/var/folders/0r/zdwrk7wn22vd_g32twvblrpc0000gn/T/plugin809444289 network=unix timestamp=2020-07-30T11:36:02.560+0700
2020-07-30T11:36:02.560+0700 [DEBUG] plugin: using plugin: version=5
2020/07/30 11:36:02 [TRACE] BuiltinEvalContext: Initialized "bizfly" provider for provider.bizfly
2020/07/30 11:36:02 [TRACE] <root>: eval: terraform.EvalNoop
2020-07-30T11:36:02.612+0700 [TRACE] plugin.stdio: waiting for stdio data
2020/07/30 11:36:02 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:36:02 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/07/30 11:36:02 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:36:02 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 11:36:02 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/07/30 11:36:02 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:36:02 [TRACE] <root>: eval: *terraform.EvalConfigProvider
2020/07/30 11:36:02 [TRACE] buildProviderConfig for provider.bizfly: using explicit config only
2020/07/30 11:36:02 [TRACE] GRPCProvider: GetSchema
2020/07/30 11:36:02 [TRACE] GRPCProvider: Configure
2020/07/30 11:36:04 [TRACE] [walkPlan] Exiting eval tree: provider.bizfly
2020/07/30 11:36:04 [TRACE] vertex "provider.bizfly": visit complete
2020/07/30 11:36:04 [TRACE] dag/walk: visiting "bizfly_instance.test"
2020/07/30 11:36:04 [TRACE] vertex "bizfly_instance.test": starting visit (*terraform.NodePlannableResource)
2020/07/30 11:36:04 [TRACE] vertex "bizfly_instance.test": evaluating
2020/07/30 11:36:04 [TRACE] [walkPlan] Entering eval tree: bizfly_instance.test
2020/07/30 11:36:04 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/07/30 11:36:04 [TRACE] [walkPlan] Exiting eval tree: bizfly_instance.test
2020/07/30 11:36:04 [TRACE] vertex "bizfly_instance.test": expanding dynamic subgraph
2020/07/30 11:36:04 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/07/30 11:36:04 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResourceInstance
  ------
2020/07/30 11:36:04 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/07/30 11:36:04 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/07/30 11:36:04 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/30 11:36:04 [DEBUG] Resource instance state not found for node "bizfly_instance.test", instance bizfly_instance.test
2020/07/30 11:36:04 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/30 11:36:04 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/30 11:36:04 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/30 11:36:04 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/30 11:36:04 [DEBUG] ReferenceTransformer: "bizfly_instance.test" references: []
2020/07/30 11:36:04 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/30 11:36:04 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/30 11:36:04 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/07/30 11:36:04 [TRACE] vertex "bizfly_instance.test": entering dynamic subgraph
2020/07/30 11:36:04 [TRACE] dag/walk: updating graph
2020/07/30 11:36:04 [TRACE] dag/walk: added new vertex: "bizfly_instance.test"
2020/07/30 11:36:04 [TRACE] dag/walk: visiting "bizfly_instance.test"
2020/07/30 11:36:04 [TRACE] vertex "bizfly_instance.test": starting visit (*terraform.NodePlannableResourceInstance)
2020/07/30 11:36:04 [TRACE] vertex "bizfly_instance.test": evaluating
2020/07/30 11:36:04 [TRACE] [walkPlan] Entering eval tree: bizfly_instance.test
2020/07/30 11:36:04 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:36:04 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 11:36:04 [TRACE] <root>: eval: *terraform.EvalReadState
2020/07/30 11:36:04 [TRACE] EvalReadState: reading state for bizfly_instance.test
2020/07/30 11:36:04 [TRACE] EvalReadState: no state present for bizfly_instance.test
2020/07/30 11:36:04 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2020/07/30 11:36:04 [TRACE] <root>: eval: *terraform.EvalDiff
2020/07/30 11:36:04 [TRACE] Re-validating config for "bizfly_instance.test"
2020/07/30 11:36:04 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/07/30 11:36:04 [TRACE] GRPCProvider: PlanResourceChange
2020/07/30 11:36:04 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2020/07/30 11:36:04 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/07/30 11:36:04 [TRACE] EvalWriteState: writing current state object for bizfly_instance.test
2020/07/30 11:36:04 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/07/30 11:36:04 [TRACE] EvalWriteDiff: recorded Create change for bizfly_instance.test
2020/07/30 11:36:04 [TRACE] [walkPlan] Exiting eval tree: bizfly_instance.test
2020/07/30 11:36:04 [TRACE] vertex "bizfly_instance.test": visit complete
2020/07/30 11:36:04 [TRACE] vertex "bizfly_instance.test": dynamic subgraph completed successfully
2020/07/30 11:36:04 [TRACE] vertex "bizfly_instance.test": visit complete
2020/07/30 11:36:04 [TRACE] dag/walk: visiting "provider.bizfly (close)"
2020/07/30 11:36:04 [TRACE] vertex "provider.bizfly (close)": starting visit (*terraform.graphNodeCloseProvider)
2020/07/30 11:36:04 [TRACE] vertex "provider.bizfly (close)": evaluating
2020/07/30 11:36:04 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2020/07/30 11:36:04 [TRACE] [walkPlan] Entering eval tree: provider.bizfly (close)
2020/07/30 11:36:04 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2020/07/30 11:36:04 [TRACE] <root>: eval: *terraform.EvalCloseProvider
2020/07/30 11:36:04 [TRACE] vertex "meta.count-boundary (EachMode fixup)": evaluating
2020/07/30 11:36:04 [TRACE] GRPCProvider: Close
2020/07/30 11:36:04 [TRACE] [walkPlan] Entering eval tree: meta.count-boundary (EachMode fixup)
2020/07/30 11:36:04 [TRACE] <root>: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2020/07/30 11:36:04 [TRACE] [walkPlan] Exiting eval tree: meta.count-boundary (EachMode fixup)
2020/07/30 11:36:04 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2020-07-30T11:36:04.014+0700 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2020-07-30T11:36:04.017+0700 [DEBUG] plugin: plugin process exited: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=57218
2020-07-30T11:36:04.017+0700 [DEBUG] plugin: plugin exited
2020/07/30 11:36:04 [TRACE] [walkPlan] Exiting eval tree: provider.bizfly (close)
2020/07/30 11:36:04 [TRACE] vertex "provider.bizfly (close)": visit complete
2020/07/30 11:36:04 [TRACE] dag/walk: visiting "root"
2020/07/30 11:36:04 [TRACE] vertex "root": starting visit (terraform.graphNodeRoot)
2020/07/30 11:36:04 [TRACE] vertex "root": visit complete
2020/07/30 11:36:04 [INFO] backend/local: plan operation completed
2020/07/30 11:36:04 [TRACE] statemgr.Filesystem: removing lock metadata file .terraform.tfstate.lock.info
2020/07/30 11:36:04 [TRACE] statemgr.Filesystem: unlocking terraform.tfstate using fcntl flock
2020/07/30 11:36:10 [INFO] Terraform version: 0.12.29  
2020/07/30 11:36:10 [INFO] Go runtime version: go1.13.14
2020/07/30 11:36:10 [INFO] CLI args: []string{"/usr/local/bin/terraform", "apply"}
2020/07/30 11:36:10 [DEBUG] Attempting to open CLI config file: /Users/hung/.terraformrc
2020/07/30 11:36:10 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2020/07/30 11:36:10 [INFO] CLI command args: []string{"apply"}
2020/07/30 11:36:10 [TRACE] Meta.Backend: no config given or present on disk, so returning nil config
2020/07/30 11:36:10 [TRACE] Meta.Backend: backend has not previously been initialized in this working directory
2020/07/30 11:36:10 [DEBUG] New state was assigned lineage "98c083bc-e2ea-4049-f163-45e9950c3f68"
2020/07/30 11:36:10 [TRACE] Meta.Backend: using default local state only (no backend configuration, and no existing initialized backend)
2020/07/30 11:36:10 [TRACE] Meta.Backend: instantiated backend of type <nil>
2020/07/30 11:36:10 [DEBUG] checking for provider in "."
2020/07/30 11:36:10 [WARN] found legacy provider "terraform-provider-bizfly"
2020/07/30 11:36:10 [DEBUG] checking for provider in "/usr/local/bin"
2020/07/30 11:36:10 [DEBUG] checking for provider in ".terraform/plugins/darwin_amd64"
2020/07/30 11:36:10 [DEBUG] found valid plugin: "bizfly", "0.0.0", "/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly"
2020/07/30 11:36:10 [DEBUG] checking for provisioner in "."
2020/07/30 11:36:10 [DEBUG] checking for provisioner in "/usr/local/bin"
2020/07/30 11:36:10 [DEBUG] checking for provisioner in ".terraform/plugins/darwin_amd64"
2020/07/30 11:36:10 [TRACE] Meta.Backend: backend <nil> does not support operations, so wrapping it in a local backend
2020/07/30 11:36:10 [INFO] backend/local: starting Apply operation
2020/07/30 11:36:10 [TRACE] backend/local: requesting state manager for workspace "default"
2020/07/30 11:36:10 [TRACE] backend/local: state manager for workspace "default" will:
 - read initial snapshot from terraform.tfstate
 - write new snapshots to terraform.tfstate
 - create any backup at terraform.tfstate.backup
2020/07/30 11:36:10 [TRACE] backend/local: requesting state lock for workspace "default"
2020/07/30 11:36:10 [TRACE] statemgr.Filesystem: preparing to manage state snapshots at terraform.tfstate
2020/07/30 11:36:10 [TRACE] statemgr.Filesystem: existing snapshot has lineage "8e1934d5-1d8f-e9a8-58e8-6c54c3aa209a" serial 1
2020/07/30 11:36:10 [TRACE] statemgr.Filesystem: locking terraform.tfstate using fcntl flock
2020/07/30 11:36:10 [TRACE] statemgr.Filesystem: writing lock metadata to .terraform.tfstate.lock.info
2020/07/30 11:36:10 [TRACE] backend/local: reading remote state for workspace "default"
2020/07/30 11:36:10 [TRACE] statemgr.Filesystem: reading latest snapshot from terraform.tfstate
2020/07/30 11:36:10 [TRACE] statemgr.Filesystem: read snapshot with lineage "8e1934d5-1d8f-e9a8-58e8-6c54c3aa209a" serial 1
2020/07/30 11:36:10 [TRACE] backend/local: retrieving local state snapshot for workspace "default"
2020/07/30 11:36:10 [TRACE] backend/local: building context for current working directory
2020/07/30 11:36:10 [TRACE] terraform.NewContext: starting
2020/07/30 11:36:10 [TRACE] terraform.NewContext: resolving provider version selections
2020/07/30 11:36:10 [TRACE] terraform.NewContext: loading provider schemas
2020/07/30 11:36:10 [TRACE] LoadSchemas: retrieving schema for provider type "bizfly"
2020-07-30T11:36:10.340+0700 [INFO]  plugin: configuring client automatic mTLS
2020-07-30T11:36:10.367+0700 [DEBUG] plugin: starting plugin: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly args=[/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly]
2020-07-30T11:36:10.371+0700 [DEBUG] plugin: plugin started: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=57237
2020-07-30T11:36:10.371+0700 [DEBUG] plugin: waiting for RPC address: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly
2020-07-30T11:36:10.389+0700 [INFO]  plugin.terraform-provider-bizfly: configuring server automatic mTLS: timestamp=2020-07-30T11:36:10.389+0700
2020-07-30T11:36:10.415+0700 [DEBUG] plugin.terraform-provider-bizfly: plugin address: address=/var/folders/0r/zdwrk7wn22vd_g32twvblrpc0000gn/T/plugin160289256 network=unix timestamp=2020-07-30T11:36:10.415+0700
2020-07-30T11:36:10.415+0700 [DEBUG] plugin: using plugin: version=5
2020/07/30 11:36:10 [TRACE] GRPCProvider: GetSchema
2020-07-30T11:36:10.468+0700 [TRACE] plugin.stdio: waiting for stdio data
2020/07/30 11:36:10 [TRACE] GRPCProvider: Close
2020-07-30T11:36:10.470+0700 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2020-07-30T11:36:10.471+0700 [DEBUG] plugin: plugin process exited: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=57237
2020-07-30T11:36:10.471+0700 [DEBUG] plugin: plugin exited
2020/07/30 11:36:10 [TRACE] terraform.NewContext: complete
2020/07/30 11:36:10 [TRACE] backend/local: finished building terraform.Context
2020/07/30 11:36:10 [TRACE] backend/local: requesting interactive input, if necessary
2020/07/30 11:36:10 [TRACE] Context.Input: Prompting for provider arguments
2020/07/30 11:36:10 [TRACE] Context.Input: Provider provider.bizfly declared at main.tf:1,1-18
2020/07/30 11:36:10 [TRACE] Context.Input: Input for provider.bizfly: map[string]cty.Value{}
2020/07/30 11:36:10 [TRACE] backend/local: running validation operation
2020/07/30 11:36:10 [INFO] terraform: building graph: GraphTypeValidate
2020/07/30 11:36:10 [TRACE] Executing graph transform *terraform.ConfigTransformer
2020/07/30 11:36:10 [TRACE] ConfigTransformer: Starting for path: 
2020/07/30 11:36:10 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
  ------
2020/07/30 11:36:10 [TRACE] Executing graph transform *terraform.LocalTransformer
2020/07/30 11:36:10 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2020/07/30 11:36:10 [TRACE] Executing graph transform *terraform.OutputTransformer
2020/07/30 11:36:10 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2020/07/30 11:36:10 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2020/07/30 11:36:10 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2020/07/30 11:36:10 [TRACE] Executing graph transform *terraform.StateTransformer
2020/07/30 11:36:10 [TRACE] StateTransformer: state is empty, so nothing to do
2020/07/30 11:36:10 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2020/07/30 11:36:10 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2020/07/30 11:36:10 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2020/07/30 11:36:10 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2020/07/30 11:36:10 [TRACE] AttachResourceConfigTransformer: attaching to "bizfly_instance.test" (*terraform.NodeValidatableResource) config from main.tf:7,1-34
2020/07/30 11:36:10 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2020/07/30 11:36:10 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/30 11:36:10 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/30 11:36:10 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2020/07/30 11:36:10 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:36:10 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2020/07/30 11:36:10 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2020/07/30 11:36:10 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2020/07/30 11:36:10 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2020/07/30 11:36:10 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2020/07/30 11:36:10 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2020/07/30 11:36:10 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2020/07/30 11:36:10 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2020/07/30 11:36:10 [TRACE] ProviderConfigTransformer: attaching to "provider.bizfly" provider configuration from main.tf:1,1-18
2020/07/30 11:36:10 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:36:10 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2020/07/30 11:36:10 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2020/07/30 11:36:10 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2020/07/30 11:36:10 [TRACE] ProviderTransformer: bizfly_instance.test is provided by provider.bizfly or inherited equivalent
2020/07/30 11:36:10 [TRACE] ProviderTransformer: exact match for provider.bizfly serving bizfly_instance.test
2020/07/30 11:36:10 [DEBUG] ProviderTransformer: "bizfly_instance.test" (*terraform.NodeValidatableResource) needs provider.bizfly
2020/07/30 11:36:10 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:36:10 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2020/07/30 11:36:10 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2020/07/30 11:36:10 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2020/07/30 11:36:10 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2020/07/30 11:36:10 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:36:10 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2020/07/30 11:36:10 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2020/07/30 11:36:10 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2020/07/30 11:36:10 [TRACE] AttachSchemaTransformer: attaching resource schema to bizfly_instance.test
2020/07/30 11:36:10 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.bizfly
2020/07/30 11:36:10 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2020/07/30 11:36:10 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/30 11:36:10 [DEBUG] ReferenceTransformer: "provider.bizfly" references: []
2020/07/30 11:36:10 [DEBUG] ReferenceTransformer: "bizfly_instance.test" references: []
2020/07/30 11:36:10 [DEBUG] ReferenceTransformer: "var.login" references: []
2020/07/30 11:36:10 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/30 11:36:10 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2020/07/30 11:36:10 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:36:10 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/30 11:36:10 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/30 11:36:10 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2020/07/30 11:36:10 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2020/07/30 11:36:10 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2020/07/30 11:36:10 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
    bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:36:10 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2020/07/30 11:36:10 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer (no changes)
2020/07/30 11:36:10 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/30 11:36:10 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
    bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.bizfly (close) - *terraform.graphNodeCloseProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:36:10 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2020/07/30 11:36:10 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodeValidatableResource
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
    bizfly_instance.test - *terraform.NodeValidatableResource
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.bizfly (close) - *terraform.graphNodeCloseProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:36:10 [DEBUG] Starting graph walk: walkValidate
2020/07/30 11:36:10 [TRACE] dag/walk: updating graph
2020/07/30 11:36:10 [TRACE] dag/walk: added new vertex: "var.login"
2020/07/30 11:36:10 [TRACE] dag/walk: added new vertex: "provider.bizfly"
2020/07/30 11:36:10 [TRACE] dag/walk: added new vertex: "meta.count-boundary (EachMode fixup)"
2020/07/30 11:36:10 [TRACE] dag/walk: added new vertex: "provider.bizfly (close)"
2020/07/30 11:36:10 [TRACE] dag/walk: added new vertex: "root"
2020/07/30 11:36:10 [TRACE] dag/walk: added new vertex: "bizfly_instance.test"
2020/07/30 11:36:10 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "var.login"
2020/07/30 11:36:10 [TRACE] dag/walk: added edge: "provider.bizfly (close)" waiting on "bizfly_instance.test"
2020/07/30 11:36:10 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (EachMode fixup)"
2020/07/30 11:36:10 [TRACE] dag/walk: added edge: "root" waiting on "provider.bizfly (close)"
2020/07/30 11:36:10 [TRACE] dag/walk: added edge: "bizfly_instance.test" waiting on "provider.bizfly"
2020/07/30 11:36:10 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "bizfly_instance.test"
2020/07/30 11:36:10 [TRACE] dag/walk: dependencies changed for "provider.bizfly (close)", sending new deps
2020/07/30 11:36:10 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2020/07/30 11:36:10 [TRACE] dag/walk: dependencies changed for "bizfly_instance.test", sending new deps
2020/07/30 11:36:10 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (EachMode fixup)", sending new deps
2020/07/30 11:36:10 [TRACE] dag/walk: visiting "var.login"
2020/07/30 11:36:10 [TRACE] vertex "var.login": starting visit (*terraform.NodeRootVariable)
2020/07/30 11:36:10 [TRACE] vertex "var.login": evaluating
2020/07/30 11:36:10 [TRACE] dag/walk: visiting "provider.bizfly"
2020/07/30 11:36:10 [TRACE] [walkValidate] Entering eval tree: var.login
2020/07/30 11:36:10 [TRACE] vertex "provider.bizfly": starting visit (*terraform.NodeApplyableProvider)
2020/07/30 11:36:10 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:36:10 [TRACE] [walkValidate] Exiting eval tree: var.login
2020/07/30 11:36:10 [TRACE] vertex "var.login": visit complete
2020/07/30 11:36:10 [TRACE] vertex "provider.bizfly": evaluating
2020/07/30 11:36:10 [TRACE] [walkValidate] Entering eval tree: provider.bizfly
2020/07/30 11:36:10 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:36:10 [TRACE] <root>: eval: *terraform.EvalInitProvider
2020-07-30T11:36:10.472+0700 [INFO]  plugin: configuring client automatic mTLS
2020-07-30T11:36:10.496+0700 [DEBUG] plugin: starting plugin: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly args=[/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly]
2020-07-30T11:36:10.501+0700 [DEBUG] plugin: plugin started: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=57238
2020-07-30T11:36:10.501+0700 [DEBUG] plugin: waiting for RPC address: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly
2020-07-30T11:36:10.518+0700 [INFO]  plugin.terraform-provider-bizfly: configuring server automatic mTLS: timestamp=2020-07-30T11:36:10.518+0700
2020-07-30T11:36:10.544+0700 [DEBUG] plugin: using plugin: version=5
2020-07-30T11:36:10.544+0700 [DEBUG] plugin.terraform-provider-bizfly: plugin address: address=/var/folders/0r/zdwrk7wn22vd_g32twvblrpc0000gn/T/plugin935531669 network=unix timestamp=2020-07-30T11:36:10.544+0700
2020/07/30 11:36:10 [TRACE] BuiltinEvalContext: Initialized "bizfly" provider for provider.bizfly
2020-07-30T11:36:10.596+0700 [TRACE] plugin.stdio: waiting for stdio data
2020/07/30 11:36:10 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:36:10 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/07/30 11:36:10 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:36:10 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 11:36:10 [TRACE] <root>: eval: *terraform.EvalValidateProvider
2020/07/30 11:36:10 [TRACE] buildProviderConfig for provider.bizfly: using explicit config only
2020/07/30 11:36:10 [TRACE] GRPCProvider: GetSchema
2020/07/30 11:36:10 [TRACE] GRPCProvider: PrepareProviderConfig
2020/07/30 11:36:10 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:36:10 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:36:10 [TRACE] [walkValidate] Exiting eval tree: provider.bizfly
2020/07/30 11:36:10 [TRACE] vertex "provider.bizfly": visit complete
2020/07/30 11:36:10 [TRACE] dag/walk: visiting "bizfly_instance.test"
2020/07/30 11:36:10 [TRACE] vertex "bizfly_instance.test": starting visit (*terraform.NodeValidatableResource)
2020/07/30 11:36:10 [TRACE] vertex "bizfly_instance.test": evaluating
2020/07/30 11:36:10 [TRACE] [walkValidate] Entering eval tree: bizfly_instance.test
2020/07/30 11:36:10 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:36:10 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 11:36:10 [TRACE] <root>: eval: *terraform.EvalValidateResource
2020/07/30 11:36:10 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/07/30 11:36:10 [TRACE] [walkValidate] Exiting eval tree: bizfly_instance.test
2020/07/30 11:36:10 [TRACE] vertex "bizfly_instance.test": visit complete
2020/07/30 11:36:10 [TRACE] dag/walk: visiting "provider.bizfly (close)"
2020/07/30 11:36:10 [TRACE] vertex "provider.bizfly (close)": starting visit (*terraform.graphNodeCloseProvider)
2020/07/30 11:36:10 [TRACE] vertex "provider.bizfly (close)": evaluating
2020/07/30 11:36:10 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2020/07/30 11:36:10 [TRACE] [walkValidate] Entering eval tree: provider.bizfly (close)
2020/07/30 11:36:10 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2020/07/30 11:36:10 [TRACE] <root>: eval: *terraform.EvalCloseProvider
2020/07/30 11:36:10 [TRACE] vertex "meta.count-boundary (EachMode fixup)": evaluating
2020/07/30 11:36:10 [TRACE] GRPCProvider: Close
2020/07/30 11:36:10 [TRACE] [walkValidate] Entering eval tree: meta.count-boundary (EachMode fixup)
2020/07/30 11:36:10 [TRACE] <root>: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2020/07/30 11:36:10 [TRACE] [walkValidate] Exiting eval tree: meta.count-boundary (EachMode fixup)
2020/07/30 11:36:10 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2020-07-30T11:36:10.600+0700 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2020-07-30T11:36:10.602+0700 [DEBUG] plugin: plugin process exited: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=57238
2020-07-30T11:36:10.602+0700 [DEBUG] plugin: plugin exited
2020/07/30 11:36:10 [TRACE] [walkValidate] Exiting eval tree: provider.bizfly (close)
2020/07/30 11:36:10 [TRACE] vertex "provider.bizfly (close)": visit complete
2020/07/30 11:36:10 [TRACE] dag/walk: visiting "root"
2020/07/30 11:36:10 [TRACE] vertex "root": starting visit (terraform.graphNodeRoot)
2020/07/30 11:36:10 [TRACE] vertex "root": visit complete
2020/07/30 11:36:10 [INFO] backend/local: apply calling Refresh
2020/07/30 11:36:10 [INFO] terraform: building graph: GraphTypeRefresh
2020/07/30 11:36:10 [TRACE] No managed resources in state during refresh; skipping managed resource transformer
2020/07/30 11:36:10 [TRACE] Executing graph transform *terraform.ConfigTransformer
2020/07/30 11:36:10 [TRACE] ConfigTransformer: Starting for path: 
2020/07/30 11:36:10 [TRACE] Completed graph transform *terraform.ConfigTransformer (no changes)
2020/07/30 11:36:10 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2020/07/30 11:36:10 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2020/07/30 11:36:10 [TRACE] Executing graph transform *terraform.StateTransformer
2020/07/30 11:36:10 [TRACE] StateTransformer: state is empty, so nothing to do
2020/07/30 11:36:10 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2020/07/30 11:36:10 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/30 11:36:10 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/30 11:36:10 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2020/07/30 11:36:10 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2020/07/30 11:36:10 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2020/07/30 11:36:10 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:36:10 [TRACE] Executing graph transform *terraform.LocalTransformer
2020/07/30 11:36:10 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2020/07/30 11:36:10 [TRACE] Executing graph transform *terraform.OutputTransformer
2020/07/30 11:36:10 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2020/07/30 11:36:10 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2020/07/30 11:36:10 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2020/07/30 11:36:10 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2020/07/30 11:36:10 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2020/07/30 11:36:10 [TRACE] ProviderConfigTransformer: attaching to "provider.bizfly" provider configuration from main.tf:1,1-18
2020/07/30 11:36:10 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:36:10 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2020/07/30 11:36:10 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2020/07/30 11:36:10 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2020/07/30 11:36:10 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer (no changes)
2020/07/30 11:36:10 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2020/07/30 11:36:10 [DEBUG] pruning unused provider.bizfly
2020/07/30 11:36:10 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer with new graph:
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:36:10 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2020/07/30 11:36:10 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2020/07/30 11:36:10 [TRACE] Completed graph transform *terraform.graphTransformerMulti (no changes)
2020/07/30 11:36:10 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2020/07/30 11:36:10 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2020/07/30 11:36:10 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/30 11:36:10 [DEBUG] ReferenceTransformer: "var.login" references: []
2020/07/30 11:36:10 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/30 11:36:10 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2020/07/30 11:36:10 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2020/07/30 11:36:10 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/30 11:36:10 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/30 11:36:10 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2020/07/30 11:36:10 [TRACE] Completed graph transform *terraform.CloseProviderTransformer (no changes)
2020/07/30 11:36:10 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/30 11:36:10 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/07/30 11:36:10 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2020/07/30 11:36:10 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer (no changes)
2020/07/30 11:36:10 [DEBUG] Starting graph walk: walkRefresh
2020/07/30 11:36:10 [TRACE] dag/walk: updating graph
2020/07/30 11:36:10 [TRACE] dag/walk: added new vertex: "var.login"
2020/07/30 11:36:10 [TRACE] dag/walk: visiting "var.login"
2020/07/30 11:36:10 [TRACE] vertex "var.login": starting visit (*terraform.NodeRootVariable)
2020/07/30 11:36:10 [TRACE] vertex "var.login": evaluating
2020/07/30 11:36:10 [TRACE] [walkRefresh] Entering eval tree: var.login
2020/07/30 11:36:10 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:36:10 [TRACE] [walkRefresh] Exiting eval tree: var.login
2020/07/30 11:36:10 [TRACE] vertex "var.login": visit complete
2020/07/30 11:36:10 [INFO] backend/local: apply calling Plan
2020/07/30 11:36:10 [INFO] terraform: building graph: GraphTypePlan
2020/07/30 11:36:10 [TRACE] Executing graph transform *terraform.ConfigTransformer
2020/07/30 11:36:10 [TRACE] ConfigTransformer: Starting for path: 
2020/07/30 11:36:10 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
  ------
2020/07/30 11:36:10 [TRACE] Executing graph transform *terraform.LocalTransformer
2020/07/30 11:36:10 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2020/07/30 11:36:10 [TRACE] Executing graph transform *terraform.OutputTransformer
2020/07/30 11:36:10 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2020/07/30 11:36:10 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2020/07/30 11:36:10 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2020/07/30 11:36:10 [TRACE] Executing graph transform *terraform.StateTransformer
2020/07/30 11:36:10 [TRACE] StateTransformer: state is empty, so nothing to do
2020/07/30 11:36:10 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2020/07/30 11:36:10 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2020/07/30 11:36:10 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2020/07/30 11:36:10 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2020/07/30 11:36:10 [TRACE] AttachResourceConfigTransformer: attaching to "bizfly_instance.test" (*terraform.NodePlannableResource) config from main.tf:7,1-34
2020/07/30 11:36:10 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2020/07/30 11:36:10 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/30 11:36:10 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/30 11:36:10 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2020/07/30 11:36:10 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:36:10 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2020/07/30 11:36:10 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2020/07/30 11:36:10 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2020/07/30 11:36:10 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2020/07/30 11:36:10 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2020/07/30 11:36:10 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2020/07/30 11:36:10 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2020/07/30 11:36:10 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2020/07/30 11:36:10 [TRACE] ProviderConfigTransformer: attaching to "provider.bizfly" provider configuration from main.tf:1,1-18
2020/07/30 11:36:10 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:36:10 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2020/07/30 11:36:10 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2020/07/30 11:36:10 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2020/07/30 11:36:10 [TRACE] ProviderTransformer: bizfly_instance.test is provided by provider.bizfly or inherited equivalent
2020/07/30 11:36:10 [TRACE] ProviderTransformer: exact match for provider.bizfly serving bizfly_instance.test
2020/07/30 11:36:10 [DEBUG] ProviderTransformer: "bizfly_instance.test" (*terraform.NodePlannableResource) needs provider.bizfly
2020/07/30 11:36:10 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:36:10 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2020/07/30 11:36:10 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2020/07/30 11:36:10 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2020/07/30 11:36:10 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2020/07/30 11:36:10 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:36:10 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2020/07/30 11:36:10 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2020/07/30 11:36:10 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2020/07/30 11:36:10 [TRACE] AttachSchemaTransformer: attaching resource schema to bizfly_instance.test
2020/07/30 11:36:10 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.bizfly
2020/07/30 11:36:10 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2020/07/30 11:36:10 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/30 11:36:10 [DEBUG] ReferenceTransformer: "bizfly_instance.test" references: []
2020/07/30 11:36:10 [DEBUG] ReferenceTransformer: "var.login" references: []
2020/07/30 11:36:10 [DEBUG] ReferenceTransformer: "provider.bizfly" references: []
2020/07/30 11:36:10 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/30 11:36:10 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2020/07/30 11:36:10 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:36:10 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/30 11:36:10 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/30 11:36:10 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2020/07/30 11:36:10 [TRACE] ForcedCBDTransformer: "bizfly_instance.test" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2020/07/30 11:36:10 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2020/07/30 11:36:10 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2020/07/30 11:36:10 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
    bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:36:10 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2020/07/30 11:36:10 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer (no changes)
2020/07/30 11:36:10 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/30 11:36:10 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
    bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.bizfly (close) - *terraform.graphNodeCloseProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:36:10 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2020/07/30 11:36:10 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodePlannableResource
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
    bizfly_instance.test - *terraform.NodePlannableResource
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.bizfly (close) - *terraform.graphNodeCloseProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:36:10 [DEBUG] Starting graph walk: walkPlan
2020/07/30 11:36:10 [TRACE] dag/walk: updating graph
2020/07/30 11:36:10 [TRACE] dag/walk: added new vertex: "provider.bizfly"
2020/07/30 11:36:10 [TRACE] dag/walk: added new vertex: "meta.count-boundary (EachMode fixup)"
2020/07/30 11:36:10 [TRACE] dag/walk: added new vertex: "provider.bizfly (close)"
2020/07/30 11:36:10 [TRACE] dag/walk: added new vertex: "root"
2020/07/30 11:36:10 [TRACE] dag/walk: added new vertex: "bizfly_instance.test"
2020/07/30 11:36:10 [TRACE] dag/walk: added new vertex: "var.login"
2020/07/30 11:36:10 [TRACE] dag/walk: added edge: "root" waiting on "provider.bizfly (close)"
2020/07/30 11:36:10 [TRACE] dag/walk: added edge: "bizfly_instance.test" waiting on "provider.bizfly"
2020/07/30 11:36:10 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "bizfly_instance.test"
2020/07/30 11:36:10 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "var.login"
2020/07/30 11:36:10 [TRACE] dag/walk: added edge: "provider.bizfly (close)" waiting on "bizfly_instance.test"
2020/07/30 11:36:10 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (EachMode fixup)"
2020/07/30 11:36:10 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2020/07/30 11:36:10 [TRACE] dag/walk: dependencies changed for "bizfly_instance.test", sending new deps
2020/07/30 11:36:10 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (EachMode fixup)", sending new deps
2020/07/30 11:36:10 [TRACE] dag/walk: dependencies changed for "provider.bizfly (close)", sending new deps
2020/07/30 11:36:10 [TRACE] dag/walk: visiting "provider.bizfly"
2020/07/30 11:36:10 [TRACE] vertex "provider.bizfly": starting visit (*terraform.NodeApplyableProvider)
2020/07/30 11:36:10 [TRACE] vertex "provider.bizfly": evaluating
2020/07/30 11:36:10 [TRACE] [walkPlan] Entering eval tree: provider.bizfly
2020/07/30 11:36:10 [TRACE] dag/walk: visiting "var.login"
2020/07/30 11:36:10 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:36:10 [TRACE] <root>: eval: *terraform.EvalInitProvider
2020/07/30 11:36:10 [TRACE] vertex "var.login": starting visit (*terraform.NodeRootVariable)
2020/07/30 11:36:10 [TRACE] vertex "var.login": evaluating
2020/07/30 11:36:10 [TRACE] [walkPlan] Entering eval tree: var.login
2020/07/30 11:36:10 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:36:10 [TRACE] [walkPlan] Exiting eval tree: var.login
2020/07/30 11:36:10 [TRACE] vertex "var.login": visit complete
2020-07-30T11:36:10.604+0700 [INFO]  plugin: configuring client automatic mTLS
2020-07-30T11:36:10.628+0700 [DEBUG] plugin: starting plugin: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly args=[/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly]
2020-07-30T11:36:10.632+0700 [DEBUG] plugin: plugin started: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=57239
2020-07-30T11:36:10.632+0700 [DEBUG] plugin: waiting for RPC address: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly
2020-07-30T11:36:10.650+0700 [INFO]  plugin.terraform-provider-bizfly: configuring server automatic mTLS: timestamp=2020-07-30T11:36:10.650+0700
2020-07-30T11:36:10.677+0700 [DEBUG] plugin.terraform-provider-bizfly: plugin address: address=/var/folders/0r/zdwrk7wn22vd_g32twvblrpc0000gn/T/plugin968601474 network=unix timestamp=2020-07-30T11:36:10.677+0700
2020-07-30T11:36:10.677+0700 [DEBUG] plugin: using plugin: version=5
2020/07/30 11:36:10 [TRACE] BuiltinEvalContext: Initialized "bizfly" provider for provider.bizfly
2020/07/30 11:36:10 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:36:10 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:36:10 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020-07-30T11:36:10.728+0700 [TRACE] plugin.stdio: waiting for stdio data
2020/07/30 11:36:10 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:36:10 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 11:36:10 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/07/30 11:36:10 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:36:10 [TRACE] <root>: eval: *terraform.EvalConfigProvider
2020/07/30 11:36:10 [TRACE] buildProviderConfig for provider.bizfly: using explicit config only
2020/07/30 11:36:10 [TRACE] GRPCProvider: GetSchema
2020/07/30 11:36:10 [TRACE] GRPCProvider: Configure
2020/07/30 11:36:11 [TRACE] [walkPlan] Exiting eval tree: provider.bizfly
2020/07/30 11:36:11 [TRACE] vertex "provider.bizfly": visit complete
2020/07/30 11:36:11 [TRACE] dag/walk: visiting "bizfly_instance.test"
2020/07/30 11:36:11 [TRACE] vertex "bizfly_instance.test": starting visit (*terraform.NodePlannableResource)
2020/07/30 11:36:11 [TRACE] vertex "bizfly_instance.test": evaluating
2020/07/30 11:36:11 [TRACE] [walkPlan] Entering eval tree: bizfly_instance.test
2020/07/30 11:36:11 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/07/30 11:36:11 [TRACE] [walkPlan] Exiting eval tree: bizfly_instance.test
2020/07/30 11:36:11 [TRACE] vertex "bizfly_instance.test": expanding dynamic subgraph
2020/07/30 11:36:11 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/07/30 11:36:11 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResourceInstance
  ------
2020/07/30 11:36:11 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/07/30 11:36:11 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/07/30 11:36:11 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/30 11:36:11 [DEBUG] Resource instance state not found for node "bizfly_instance.test", instance bizfly_instance.test
2020/07/30 11:36:11 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/30 11:36:11 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/30 11:36:11 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/30 11:36:11 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/30 11:36:11 [DEBUG] ReferenceTransformer: "bizfly_instance.test" references: []
2020/07/30 11:36:11 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/30 11:36:11 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/30 11:36:11 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/07/30 11:36:11 [TRACE] vertex "bizfly_instance.test": entering dynamic subgraph
2020/07/30 11:36:11 [TRACE] dag/walk: updating graph
2020/07/30 11:36:11 [TRACE] dag/walk: added new vertex: "bizfly_instance.test"
2020/07/30 11:36:11 [TRACE] dag/walk: visiting "bizfly_instance.test"
2020/07/30 11:36:11 [TRACE] vertex "bizfly_instance.test": starting visit (*terraform.NodePlannableResourceInstance)
2020/07/30 11:36:11 [TRACE] vertex "bizfly_instance.test": evaluating
2020/07/30 11:36:11 [TRACE] [walkPlan] Entering eval tree: bizfly_instance.test
2020/07/30 11:36:11 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:36:11 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 11:36:11 [TRACE] <root>: eval: *terraform.EvalReadState
2020/07/30 11:36:11 [TRACE] EvalReadState: reading state for bizfly_instance.test
2020/07/30 11:36:11 [TRACE] EvalReadState: no state present for bizfly_instance.test
2020/07/30 11:36:11 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2020/07/30 11:36:11 [TRACE] <root>: eval: *terraform.EvalDiff
2020/07/30 11:36:11 [TRACE] Re-validating config for "bizfly_instance.test"
2020/07/30 11:36:11 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/07/30 11:36:11 [TRACE] GRPCProvider: PlanResourceChange
2020/07/30 11:36:11 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2020/07/30 11:36:11 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/07/30 11:36:11 [TRACE] EvalWriteState: writing current state object for bizfly_instance.test
2020/07/30 11:36:11 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/07/30 11:36:11 [TRACE] EvalWriteDiff: recorded Create change for bizfly_instance.test
2020/07/30 11:36:11 [TRACE] [walkPlan] Exiting eval tree: bizfly_instance.test
2020/07/30 11:36:11 [TRACE] vertex "bizfly_instance.test": visit complete
2020/07/30 11:36:11 [TRACE] vertex "bizfly_instance.test": dynamic subgraph completed successfully
2020/07/30 11:36:11 [TRACE] vertex "bizfly_instance.test": visit complete
2020/07/30 11:36:11 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2020/07/30 11:36:11 [TRACE] dag/walk: visiting "provider.bizfly (close)"
2020/07/30 11:36:11 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2020/07/30 11:36:11 [TRACE] vertex "provider.bizfly (close)": starting visit (*terraform.graphNodeCloseProvider)
2020/07/30 11:36:11 [TRACE] vertex "meta.count-boundary (EachMode fixup)": evaluating
2020/07/30 11:36:11 [TRACE] vertex "provider.bizfly (close)": evaluating
2020/07/30 11:36:11 [TRACE] [walkPlan] Entering eval tree: meta.count-boundary (EachMode fixup)
2020/07/30 11:36:11 [TRACE] [walkPlan] Entering eval tree: provider.bizfly (close)
2020/07/30 11:36:11 [TRACE] <root>: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2020/07/30 11:36:11 [TRACE] <root>: eval: *terraform.EvalCloseProvider
2020/07/30 11:36:11 [TRACE] GRPCProvider: Close
2020/07/30 11:36:11 [TRACE] [walkPlan] Exiting eval tree: meta.count-boundary (EachMode fixup)
2020/07/30 11:36:11 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2020-07-30T11:36:12.000+0700 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2020-07-30T11:36:12.003+0700 [DEBUG] plugin: plugin process exited: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=57239
2020-07-30T11:36:12.003+0700 [DEBUG] plugin: plugin exited
2020/07/30 11:36:12 [TRACE] [walkPlan] Exiting eval tree: provider.bizfly (close)
2020/07/30 11:36:12 [TRACE] vertex "provider.bizfly (close)": visit complete
2020/07/30 11:36:12 [TRACE] dag/walk: visiting "root"
2020/07/30 11:36:12 [TRACE] vertex "root": starting visit (terraform.graphNodeRoot)
2020/07/30 11:36:12 [TRACE] vertex "root": visit complete
2020/07/30 11:36:12 [DEBUG] command: asking for input: "Do you want to perform these actions?"
2020/07/30 11:36:15 [INFO] backend/local: apply calling Apply
2020/07/30 11:36:15 [INFO] terraform: building graph: GraphTypeApply
2020/07/30 11:36:15 [TRACE] Executing graph transform *terraform.ConfigTransformer
2020/07/30 11:36:15 [TRACE] ConfigTransformer: Starting for path: 
2020/07/30 11:36:15 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
  ------
2020/07/30 11:36:15 [TRACE] Executing graph transform *terraform.DiffTransformer
2020/07/30 11:36:15 [TRACE] DiffTransformer starting
2020/07/30 11:36:15 [TRACE] DiffTransformer: found Create change for bizfly_instance.test 
2020/07/30 11:36:15 [TRACE] DiffTransformer: bizfly_instance.test will be represented by bizfly_instance.test
2020/07/30 11:36:15 [TRACE] DiffTransformer complete
2020/07/30 11:36:15 [TRACE] Completed graph transform *terraform.DiffTransformer with new graph:
  bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
  ------
2020/07/30 11:36:15 [TRACE] Executing graph transform *terraform.OrphanResourceTransformer
2020/07/30 11:36:15 [TRACE] Completed graph transform *terraform.OrphanResourceTransformer (no changes)
2020/07/30 11:36:15 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2020/07/30 11:36:15 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2020/07/30 11:36:15 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2020/07/30 11:36:15 [TRACE] AttachResourceConfigTransformer: attaching to "bizfly_instance.test (prepare state)" (*terraform.NodeApplyableResource) config from main.tf:7,1-34
2020/07/30 11:36:15 [TRACE] AttachResourceConfigTransformer: attaching to "bizfly_instance.test" (*terraform.NodeApplyableResourceInstance) config from main.tf:7,1-34
2020/07/30 11:36:15 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2020/07/30 11:36:15 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/30 11:36:15 [DEBUG] Resource state not found for node "bizfly_instance.test", instance bizfly_instance.test
2020/07/30 11:36:15 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/30 11:36:15 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2020/07/30 11:36:15 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2020/07/30 11:36:15 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2020/07/30 11:36:15 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2020/07/30 11:36:15 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2020/07/30 11:36:15 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
  bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:36:15 [TRACE] Executing graph transform *terraform.LocalTransformer
2020/07/30 11:36:15 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2020/07/30 11:36:15 [TRACE] Executing graph transform *terraform.OutputTransformer
2020/07/30 11:36:15 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2020/07/30 11:36:15 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2020/07/30 11:36:15 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2020/07/30 11:36:15 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2020/07/30 11:36:15 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2020/07/30 11:36:15 [TRACE] ProviderConfigTransformer: attaching to "provider.bizfly" provider configuration from main.tf:1,1-18
2020/07/30 11:36:15 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:36:15 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2020/07/30 11:36:15 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2020/07/30 11:36:15 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2020/07/30 11:36:15 [TRACE] ProviderTransformer: bizfly_instance.test (prepare state) is provided by provider.bizfly or inherited equivalent
2020/07/30 11:36:15 [TRACE] ProviderTransformer: bizfly_instance.test is provided by provider.bizfly or inherited equivalent
2020/07/30 11:36:15 [TRACE] ProviderTransformer: exact match for provider.bizfly serving bizfly_instance.test (prepare state)
2020/07/30 11:36:15 [DEBUG] ProviderTransformer: "bizfly_instance.test (prepare state)" (*terraform.NodeApplyableResource) needs provider.bizfly
2020/07/30 11:36:15 [TRACE] ProviderTransformer: exact match for provider.bizfly serving bizfly_instance.test
2020/07/30 11:36:15 [DEBUG] ProviderTransformer: "bizfly_instance.test" (*terraform.NodeApplyableResourceInstance) needs provider.bizfly
2020/07/30 11:36:15 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:36:15 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2020/07/30 11:36:15 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2020/07/30 11:36:15 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2020/07/30 11:36:15 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2020/07/30 11:36:15 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:36:15 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2020/07/30 11:36:15 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2020/07/30 11:36:15 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2020/07/30 11:36:15 [TRACE] AttachSchemaTransformer: attaching resource schema to bizfly_instance.test
2020/07/30 11:36:15 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.bizfly
2020/07/30 11:36:15 [TRACE] AttachSchemaTransformer: attaching resource schema to bizfly_instance.test (prepare state)
2020/07/30 11:36:15 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2020/07/30 11:36:15 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/30 11:36:15 [DEBUG] ReferenceTransformer: "bizfly_instance.test (prepare state)" references: []
2020/07/30 11:36:15 [DEBUG] ReferenceTransformer: "bizfly_instance.test" references: []
2020/07/30 11:36:15 [DEBUG] ReferenceTransformer: "var.login" references: []
2020/07/30 11:36:15 [DEBUG] ReferenceTransformer: "provider.bizfly" references: []
2020/07/30 11:36:15 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/30 11:36:15 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2020/07/30 11:36:15 [TRACE] AttachDependenciesTransformer: bizfly_instance.test depends on []
2020/07/30 11:36:15 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2020/07/30 11:36:15 [TRACE] Executing graph transform *terraform.DestroyEdgeTransformer
2020/07/30 11:36:15 [TRACE] Completed graph transform *terraform.DestroyEdgeTransformer (no changes)
2020/07/30 11:36:15 [TRACE] Executing graph transform *terraform.CBDEdgeTransformer
2020/07/30 11:36:15 [TRACE] Completed graph transform *terraform.CBDEdgeTransformer (no changes)
2020/07/30 11:36:15 [TRACE] Executing graph transform *terraform.PruneUnusedValuesTransformer
2020/07/30 11:36:15 [TRACE] Completed graph transform *terraform.PruneUnusedValuesTransformer (no changes)
2020/07/30 11:36:15 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2020/07/30 11:36:15 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:36:15 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/30 11:36:15 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/30 11:36:15 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2020/07/30 11:36:15 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
    bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:36:15 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2020/07/30 11:36:15 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer (no changes)
2020/07/30 11:36:15 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/30 11:36:15 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
  bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
    bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.bizfly (close) - *terraform.graphNodeCloseProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:36:15 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2020/07/30 11:36:15 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
    bizfly_instance.test - *terraform.NodeApplyableResourceInstance
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.bizfly (close) - *terraform.graphNodeCloseProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:36:15 [DEBUG] Starting graph walk: walkApply
2020/07/30 11:36:15 [TRACE] dag/walk: updating graph
2020/07/30 11:36:15 [TRACE] dag/walk: added new vertex: "root"
2020/07/30 11:36:15 [TRACE] dag/walk: added new vertex: "bizfly_instance.test (prepare state)"
2020/07/30 11:36:15 [TRACE] dag/walk: added new vertex: "bizfly_instance.test"
2020/07/30 11:36:15 [TRACE] dag/walk: added new vertex: "var.login"
2020/07/30 11:36:15 [TRACE] dag/walk: added new vertex: "provider.bizfly"
2020/07/30 11:36:15 [TRACE] dag/walk: added new vertex: "meta.count-boundary (EachMode fixup)"
2020/07/30 11:36:15 [TRACE] dag/walk: added new vertex: "provider.bizfly (close)"
2020/07/30 11:36:15 [TRACE] dag/walk: added edge: "bizfly_instance.test" waiting on "bizfly_instance.test (prepare state)"
2020/07/30 11:36:15 [TRACE] dag/walk: added edge: "bizfly_instance.test (prepare state)" waiting on "provider.bizfly"
2020/07/30 11:36:15 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "bizfly_instance.test"
2020/07/30 11:36:15 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "var.login"
2020/07/30 11:36:15 [TRACE] dag/walk: added edge: "provider.bizfly (close)" waiting on "bizfly_instance.test"
2020/07/30 11:36:15 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (EachMode fixup)"
2020/07/30 11:36:15 [TRACE] dag/walk: added edge: "root" waiting on "provider.bizfly (close)"
2020/07/30 11:36:15 [TRACE] dag/walk: dependencies changed for "bizfly_instance.test", sending new deps
2020/07/30 11:36:15 [TRACE] dag/walk: dependencies changed for "bizfly_instance.test (prepare state)", sending new deps
2020/07/30 11:36:15 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (EachMode fixup)", sending new deps
2020/07/30 11:36:15 [TRACE] dag/walk: dependencies changed for "provider.bizfly (close)", sending new deps
2020/07/30 11:36:15 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2020/07/30 11:36:15 [TRACE] dag/walk: visiting "var.login"
2020/07/30 11:36:15 [TRACE] vertex "var.login": starting visit (*terraform.NodeRootVariable)
2020/07/30 11:36:15 [TRACE] vertex "var.login": evaluating
2020/07/30 11:36:15 [TRACE] [walkApply] Entering eval tree: var.login
2020/07/30 11:36:15 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:36:15 [TRACE] dag/walk: visiting "provider.bizfly"
2020/07/30 11:36:15 [TRACE] [walkApply] Exiting eval tree: var.login
2020/07/30 11:36:15 [TRACE] vertex "provider.bizfly": starting visit (*terraform.NodeApplyableProvider)
2020/07/30 11:36:15 [TRACE] vertex "var.login": visit complete
2020/07/30 11:36:15 [TRACE] vertex "provider.bizfly": evaluating
2020/07/30 11:36:15 [TRACE] [walkApply] Entering eval tree: provider.bizfly
2020/07/30 11:36:15 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:36:15 [TRACE] <root>: eval: *terraform.EvalInitProvider
2020-07-30T11:36:15.406+0700 [INFO]  plugin: configuring client automatic mTLS
2020-07-30T11:36:15.433+0700 [DEBUG] plugin: starting plugin: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly args=[/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly]
2020-07-30T11:36:15.436+0700 [DEBUG] plugin: plugin started: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=57244
2020-07-30T11:36:15.436+0700 [DEBUG] plugin: waiting for RPC address: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly
2020-07-30T11:36:15.453+0700 [INFO]  plugin.terraform-provider-bizfly: configuring server automatic mTLS: timestamp=2020-07-30T11:36:15.453+0700
2020-07-30T11:36:15.480+0700 [DEBUG] plugin.terraform-provider-bizfly: plugin address: address=/var/folders/0r/zdwrk7wn22vd_g32twvblrpc0000gn/T/plugin922295859 network=unix timestamp=2020-07-30T11:36:15.480+0700
2020-07-30T11:36:15.480+0700 [DEBUG] plugin: using plugin: version=5
2020/07/30 11:36:15 [TRACE] BuiltinEvalContext: Initialized "bizfly" provider for provider.bizfly
2020/07/30 11:36:15 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:36:15 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:36:15 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/07/30 11:36:15 [TRACE] <root>: eval: *terraform.EvalSequence
2020-07-30T11:36:15.533+0700 [TRACE] plugin.stdio: waiting for stdio data
2020/07/30 11:36:15 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 11:36:15 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/07/30 11:36:15 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:36:15 [TRACE] <root>: eval: *terraform.EvalConfigProvider
2020/07/30 11:36:15 [TRACE] buildProviderConfig for provider.bizfly: using explicit config only
2020/07/30 11:36:15 [TRACE] GRPCProvider: GetSchema
2020/07/30 11:36:15 [TRACE] GRPCProvider: Configure
2020/07/30 11:36:16 [TRACE] [walkApply] Exiting eval tree: provider.bizfly
2020/07/30 11:36:16 [TRACE] vertex "provider.bizfly": visit complete
2020/07/30 11:36:16 [TRACE] dag/walk: visiting "bizfly_instance.test (prepare state)"
2020/07/30 11:36:16 [TRACE] vertex "bizfly_instance.test (prepare state)": starting visit (*terraform.NodeApplyableResource)
2020/07/30 11:36:16 [TRACE] vertex "bizfly_instance.test (prepare state)": evaluating
2020/07/30 11:36:16 [TRACE] [walkApply] Entering eval tree: bizfly_instance.test (prepare state)
2020/07/30 11:36:16 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/07/30 11:36:16 [TRACE] [walkApply] Exiting eval tree: bizfly_instance.test (prepare state)
2020/07/30 11:36:16 [TRACE] vertex "bizfly_instance.test (prepare state)": visit complete
2020/07/30 11:36:16 [TRACE] dag/walk: visiting "bizfly_instance.test"
2020/07/30 11:36:16 [TRACE] vertex "bizfly_instance.test": starting visit (*terraform.NodeApplyableResourceInstance)
2020/07/30 11:36:16 [TRACE] vertex "bizfly_instance.test": evaluating
2020/07/30 11:36:16 [TRACE] [walkApply] Entering eval tree: bizfly_instance.test
2020/07/30 11:36:16 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:36:16 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 11:36:16 [TRACE] <root>: eval: *terraform.EvalReadDiff
2020/07/30 11:36:16 [TRACE] EvalReadDiff: Read Create change from plan for bizfly_instance.test
2020/07/30 11:36:16 [TRACE] <root>: eval: *terraform.EvalIf
2020/07/30 11:36:16 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:36:16 [TRACE] <root>: eval: *terraform.EvalIf
2020/07/30 11:36:16 [TRACE] <root>: eval: *terraform.EvalReadState
2020/07/30 11:36:16 [TRACE] EvalReadState: reading state for bizfly_instance.test
2020/07/30 11:36:16 [TRACE] EvalReadState: no state present for bizfly_instance.test
2020/07/30 11:36:16 [TRACE] <root>: eval: *terraform.EvalReadDiff
2020/07/30 11:36:16 [TRACE] EvalReadDiff: Read Create change from plan for bizfly_instance.test
2020/07/30 11:36:16 [TRACE] <root>: eval: *terraform.EvalDiff
2020/07/30 11:36:16 [TRACE] Re-validating config for "bizfly_instance.test"
2020/07/30 11:36:16 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/07/30 11:36:16 [TRACE] GRPCProvider: PlanResourceChange
2020/07/30 11:36:16 [TRACE] <root>: eval: *terraform.EvalCheckPlannedChange
2020/07/30 11:36:16 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2020/07/30 11:36:16 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 11:36:16 [TRACE] <root>: eval: *terraform.EvalReadState
2020/07/30 11:36:16 [TRACE] EvalReadState: reading state for bizfly_instance.test
2020/07/30 11:36:16 [TRACE] EvalReadState: no state present for bizfly_instance.test
2020/07/30 11:36:16 [TRACE] <root>: eval: *terraform.EvalReduceDiff
2020/07/30 11:36:16 [TRACE] <root>: eval: *terraform.EvalIf
2020/07/30 11:36:16 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:36:16 [TRACE] <root>: eval: *terraform.EvalApplyPre
2020/07/30 11:36:16 [TRACE] <root>: eval: *terraform.EvalApply
2020/07/30 11:36:16 [DEBUG] bizfly_instance.test: applying the planned Create change
2020/07/30 11:36:16 [TRACE] GRPCProvider: ApplyResourceChange
2020-07-30T11:36:16.769+0700 [DEBUG] plugin.terraform-provider-bizfly: 2020/07/30 11:36:16 --------------------------
2020-07-30T11:36:16.769+0700 [DEBUG] plugin.terraform-provider-bizfly: 2020/07/30 11:36:16 map[string]interface {}
2020-07-30T11:36:16.770+0700 [TRACE] plugin.stdio: received data: channel=STDOUT len=411
2020-07-30T11:36:16.770+0700 [TRACE] plugin.stdio: waiting for stdio data
2020-07-30T11:36:16.771+0700 [DEBUG] plugin.terraform-provider-bizfly: panic: interface conversion: interface {} is map[string]interface {}, not string
2020-07-30T11:36:16.771+0700 [DEBUG] plugin.terraform-provider-bizfly: 
2020-07-30T11:36:16.771+0700 [DEBUG] plugin.terraform-provider-bizfly: goroutine 29 [running]:
2020-07-30T11:36:16.771+0700 [DEBUG] plugin.terraform-provider-bizfly: terraform-provider-bizfly/provider.resouceInstanceCreate(0xc000223260, 0x1aebdc0, 0xc00047fe00, 0x0, 0x0)
2020-07-30T11:36:16.771+0700 [DEBUG] plugin.terraform-provider-bizfly: 	/Users/hung/go/src/terraform-provider-bizfly/provider/resource_instance.go:148 +0x8d9
2020-07-30T11:36:16.771+0700 [DEBUG] plugin.terraform-provider-bizfly: github.com/hashicorp/terraform-plugin-sdk/helper/schema.(*Resource).Apply(0xc000120240, 0xc0000cf220, 0xc0006769c0, 0x1aebdc0, 0xc00047fe00, 0x1a9ef01, 0xc000479188, 0xc0000d4ea0)
2020-07-30T11:36:16.771+0700 [DEBUG] plugin.terraform-provider-bizfly: 	/Users/hung/go/pkg/mod/github.com/hashicorp/terraform-plugin-sdk@v1.15.0/helper/schema/resource.go:310 +0x365
2020-07-30T11:36:16.771+0700 [DEBUG] plugin.terraform-provider-bizfly: github.com/hashicorp/terraform-plugin-sdk/helper/schema.(*Provider).Apply(0xc000126000, 0xc000019a10, 0xc0000cf220, 0xc0006769c0, 0xc0000c9ee8, 0xc0001aafd8, 0x1aa0ae0)
2020-07-30T11:36:16.771+0700 [DEBUG] plugin.terraform-provider-bizfly: 	/Users/hung/go/pkg/mod/github.com/hashicorp/terraform-plugin-sdk@v1.15.0/helper/schema/provider.go:294 +0x99
2020-07-30T11:36:16.771+0700 [DEBUG] plugin.terraform-provider-bizfly: github.com/hashicorp/terraform-plugin-sdk/internal/helper/plugin.(*GRPCProviderServer).ApplyResourceChange(0xc000010020, 0x1e84020, 0xc0003dcfc0, 0xc000222bd0, 0xc000010020, 0xc0003dcfc0, 0xc0003c0b78)
2020-07-30T11:36:16.771+0700 [DEBUG] plugin.terraform-provider-bizfly: 	/Users/hung/go/pkg/mod/github.com/hashicorp/terraform-plugin-sdk@v1.15.0/internal/helper/plugin/grpc_provider.go:885 +0x8b4
2020-07-30T11:36:16.771+0700 [DEBUG] plugin.terraform-provider-bizfly: github.com/hashicorp/terraform-plugin-sdk/internal/tfplugin5._Provider_ApplyResourceChange_Handler(0x1bb1a60, 0xc000010020, 0x1e84020, 0xc0003dcfc0, 0xc0000a7c20, 0x0, 0x1e84020, 0xc0003dcfc0, 0xc0003fe1e0, 0x1ce)
2020-07-30T11:36:16.772+0700 [DEBUG] plugin.terraform-provider-bizfly: 	/Users/hung/go/pkg/mod/github.com/hashicorp/terraform-plugin-sdk@v1.15.0/internal/tfplugin5/tfplugin5.pb.go:3305 +0x217
2020-07-30T11:36:16.772+0700 [DEBUG] plugin.terraform-provider-bizfly: google.golang.org/grpc.(*Server).processUnaryRPC(0xc000702600, 0x1e8e8c0, 0xc000703500, 0xc00082a600, 0xc000216b10, 0x2595940, 0x0, 0x0, 0x0)
2020-07-30T11:36:16.772+0700 [DEBUG] plugin.terraform-provider-bizfly: 	/Users/hung/go/pkg/mod/google.golang.org/grpc@v1.27.1/server.go:1024 +0x501
2020-07-30T11:36:16.772+0700 [DEBUG] plugin.terraform-provider-bizfly: google.golang.org/grpc.(*Server).handleStream(0xc000702600, 0x1e8e8c0, 0xc000703500, 0xc00082a600, 0x0)
2020-07-30T11:36:16.772+0700 [DEBUG] plugin.terraform-provider-bizfly: 	/Users/hung/go/pkg/mod/google.golang.org/grpc@v1.27.1/server.go:1313 +0xd3d
2020-07-30T11:36:16.772+0700 [DEBUG] plugin.terraform-provider-bizfly: google.golang.org/grpc.(*Server).serveStreams.func1.1(0xc0004001e0, 0xc000702600, 0x1e8e8c0, 0xc000703500, 0xc00082a600)
2020-07-30T11:36:16.772+0700 [DEBUG] plugin.terraform-provider-bizfly: 	/Users/hung/go/pkg/mod/google.golang.org/grpc@v1.27.1/server.go:722 +0xa1
2020-07-30T11:36:16.772+0700 [DEBUG] plugin.terraform-provider-bizfly: created by google.golang.org/grpc.(*Server).serveStreams.func1
2020-07-30T11:36:16.772+0700 [DEBUG] plugin.terraform-provider-bizfly: 	/Users/hung/go/pkg/mod/google.golang.org/grpc@v1.27.1/server.go:720 +0xa1
2020-07-30T11:36:16.775+0700 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2020/07/30 11:36:16 [DEBUG] bizfly_instance.test: apply errored, but we're indicating that via the Error pointer rather than returning it: rpc error: code = Unavailable desc = transport is closing
2020/07/30 11:36:16 [TRACE] <root>: eval: *terraform.EvalMaybeTainted
2020/07/30 11:36:16 [TRACE] EvalMaybeTainted: bizfly_instance.test encountered an error during creation, so it is now marked as tainted
2020/07/30 11:36:16 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/07/30 11:36:16 [TRACE] EvalWriteState: removing state object for bizfly_instance.test
2020/07/30 11:36:16 [TRACE] <root>: eval: *terraform.EvalApplyProvisioners
2020/07/30 11:36:16 [TRACE] EvalApplyProvisioners: bizfly_instance.test has no state, so skipping provisioners
2020/07/30 11:36:16 [TRACE] <root>: eval: *terraform.EvalMaybeTainted
2020/07/30 11:36:16 [TRACE] EvalMaybeTainted: bizfly_instance.test encountered an error during creation, so it is now marked as tainted
2020/07/30 11:36:16 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/07/30 11:36:16 [TRACE] EvalWriteState: removing state object for bizfly_instance.test
2020/07/30 11:36:16 [TRACE] <root>: eval: *terraform.EvalIf
2020/07/30 11:36:16 [TRACE] <root>: eval: *terraform.EvalIf
2020/07/30 11:36:16 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/07/30 11:36:16 [TRACE] <root>: eval: *terraform.EvalApplyPost
2020/07/30 11:36:16 [ERROR] <root>: eval: *terraform.EvalApplyPost, err: rpc error: code = Unavailable desc = transport is closing
2020/07/30 11:36:16 [ERROR] <root>: eval: *terraform.EvalSequence, err: rpc error: code = Unavailable desc = transport is closing
2020/07/30 11:36:16 [TRACE] [walkApply] Exiting eval tree: bizfly_instance.test
2020/07/30 11:36:16 [TRACE] vertex "bizfly_instance.test": visit complete
2020/07/30 11:36:16 [TRACE] dag/walk: upstream of "provider.bizfly (close)" errored, so skipping
2020/07/30 11:36:16 [TRACE] dag/walk: upstream of "meta.count-boundary (EachMode fixup)" errored, so skipping
2020/07/30 11:36:16 [TRACE] dag/walk: upstream of "root" errored, so skipping
2020-07-30T11:36:16.775+0700 [DEBUG] plugin: plugin process exited: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=57244 error="exit status 2"
2020/07/30 11:36:16 [TRACE] statemgr.Filesystem: not making a backup, because the new snapshot is identical to the old
2020/07/30 11:36:16 [TRACE] statemgr.Filesystem: no state changes since last snapshot
2020/07/30 11:36:16 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2020/07/30 11:36:16 [TRACE] statemgr.Filesystem: removing lock metadata file .terraform.tfstate.lock.info
2020/07/30 11:36:16 [TRACE] statemgr.Filesystem: unlocking terraform.tfstate using fcntl flock
2020-07-30T11:36:16.785+0700 [DEBUG] plugin: plugin exited
2020/07/30 11:37:04 [INFO] Terraform version: 0.12.29  
2020/07/30 11:37:04 [INFO] Go runtime version: go1.13.14
2020/07/30 11:37:04 [INFO] CLI args: []string{"/usr/local/bin/terraform", "init"}
2020/07/30 11:37:04 [DEBUG] Attempting to open CLI config file: /Users/hung/.terraformrc
2020/07/30 11:37:04 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2020/07/30 11:37:04 [INFO] CLI command args: []string{"init"}
2020/07/30 11:37:04 [TRACE] Meta.Backend: no config given or present on disk, so returning nil config
2020/07/30 11:37:04 [TRACE] Meta.Backend: backend has not previously been initialized in this working directory
2020/07/30 11:37:04 [DEBUG] New state was assigned lineage "5c40545d-903d-a4a4-2bcb-f722214c56a5"
2020/07/30 11:37:04 [TRACE] Meta.Backend: using default local state only (no backend configuration, and no existing initialized backend)
2020/07/30 11:37:04 [TRACE] Meta.Backend: instantiated backend of type <nil>
2020/07/30 11:37:04 [DEBUG] checking for provider in "."
2020/07/30 11:37:04 [WARN] found legacy provider "terraform-provider-bizfly"
2020/07/30 11:37:04 [DEBUG] checking for provider in "/usr/local/bin"
2020/07/30 11:37:04 [DEBUG] checking for provider in ".terraform/plugins/darwin_amd64"
2020/07/30 11:37:04 [DEBUG] found valid plugin: "bizfly", "0.0.0", "/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly"
2020/07/30 11:37:04 [DEBUG] checking for provisioner in "."
2020/07/30 11:37:04 [DEBUG] checking for provisioner in "/usr/local/bin"
2020/07/30 11:37:04 [DEBUG] checking for provisioner in ".terraform/plugins/darwin_amd64"
2020/07/30 11:37:04 [TRACE] Meta.Backend: backend <nil> does not support operations, so wrapping it in a local backend
2020/07/30 11:37:04 [TRACE] backend/local: state manager for workspace "default" will:
 - read initial snapshot from terraform.tfstate
 - write new snapshots to terraform.tfstate
 - create any backup at terraform.tfstate.backup
2020/07/30 11:37:04 [TRACE] statemgr.Filesystem: reading initial snapshot from terraform.tfstate
2020/07/30 11:37:04 [TRACE] statemgr.Filesystem: read snapshot with lineage "8e1934d5-1d8f-e9a8-58e8-6c54c3aa209a" serial 1
2020/07/30 11:37:04 [DEBUG] checking for provider in "."
2020/07/30 11:37:04 [WARN] found legacy provider "terraform-provider-bizfly"
2020/07/30 11:37:04 [DEBUG] checking for provider in "/usr/local/bin"
2020/07/30 11:37:04 [DEBUG] checking for provider in ".terraform/plugins/darwin_amd64"
2020/07/30 11:37:04 [DEBUG] found valid plugin: "bizfly", "0.0.0", "/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly"
2020/07/30 11:37:04 [DEBUG] plugin requirements: "bizfly"=""
2020/07/30 11:37:04 [DEBUG] checking for provider in "."
2020/07/30 11:37:04 [WARN] found legacy provider "terraform-provider-bizfly"
2020/07/30 11:37:04 [DEBUG] checking for provider in "/usr/local/bin"
2020/07/30 11:37:04 [DEBUG] checking for provider in ".terraform/plugins/darwin_amd64"
2020/07/30 11:37:04 [DEBUG] found valid plugin: "bizfly", "0.0.0", "/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly"
2020/07/30 11:37:04 [DEBUG] checking for provider in ".terraform/plugins/darwin_amd64"
2020/07/30 11:37:12 [INFO] Terraform version: 0.12.29  
2020/07/30 11:37:12 [INFO] Go runtime version: go1.13.14
2020/07/30 11:37:12 [INFO] CLI args: []string{"/usr/local/bin/terraform", "plan"}
2020/07/30 11:37:12 [DEBUG] Attempting to open CLI config file: /Users/hung/.terraformrc
2020/07/30 11:37:12 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2020/07/30 11:37:12 [INFO] CLI command args: []string{"plan"}
2020/07/30 11:37:12 [TRACE] Meta.Backend: no config given or present on disk, so returning nil config
2020/07/30 11:37:12 [TRACE] Meta.Backend: backend has not previously been initialized in this working directory
2020/07/30 11:37:12 [DEBUG] New state was assigned lineage "3cc87650-ebc9-87cf-b113-4838cc5e797a"
2020/07/30 11:37:12 [TRACE] Meta.Backend: using default local state only (no backend configuration, and no existing initialized backend)
2020/07/30 11:37:12 [TRACE] Meta.Backend: instantiated backend of type <nil>
2020/07/30 11:37:12 [DEBUG] checking for provider in "."
2020/07/30 11:37:12 [WARN] found legacy provider "terraform-provider-bizfly"
2020/07/30 11:37:12 [DEBUG] checking for provider in "/usr/local/bin"
2020/07/30 11:37:12 [DEBUG] checking for provider in ".terraform/plugins/darwin_amd64"
2020/07/30 11:37:12 [DEBUG] found valid plugin: "bizfly", "0.0.0", "/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly"
2020/07/30 11:37:12 [DEBUG] checking for provisioner in "."
2020/07/30 11:37:12 [DEBUG] checking for provisioner in "/usr/local/bin"
2020/07/30 11:37:12 [DEBUG] checking for provisioner in ".terraform/plugins/darwin_amd64"
2020/07/30 11:37:12 [TRACE] Meta.Backend: backend <nil> does not support operations, so wrapping it in a local backend
2020/07/30 11:37:12 [INFO] backend/local: starting Plan operation
2020/07/30 11:37:12 [TRACE] backend/local: requesting state manager for workspace "default"
2020/07/30 11:37:12 [TRACE] backend/local: state manager for workspace "default" will:
 - read initial snapshot from terraform.tfstate
 - write new snapshots to terraform.tfstate
 - create any backup at terraform.tfstate.backup
2020/07/30 11:37:12 [TRACE] backend/local: requesting state lock for workspace "default"
2020/07/30 11:37:12 [TRACE] statemgr.Filesystem: preparing to manage state snapshots at terraform.tfstate
2020/07/30 11:37:12 [TRACE] statemgr.Filesystem: existing snapshot has lineage "8e1934d5-1d8f-e9a8-58e8-6c54c3aa209a" serial 1
2020/07/30 11:37:12 [TRACE] statemgr.Filesystem: locking terraform.tfstate using fcntl flock
2020/07/30 11:37:12 [TRACE] statemgr.Filesystem: writing lock metadata to .terraform.tfstate.lock.info
2020/07/30 11:37:12 [TRACE] backend/local: reading remote state for workspace "default"
2020/07/30 11:37:12 [TRACE] statemgr.Filesystem: reading latest snapshot from terraform.tfstate
2020/07/30 11:37:12 [TRACE] statemgr.Filesystem: read snapshot with lineage "8e1934d5-1d8f-e9a8-58e8-6c54c3aa209a" serial 1
2020/07/30 11:37:12 [TRACE] backend/local: retrieving local state snapshot for workspace "default"
2020/07/30 11:37:12 [TRACE] backend/local: building context for current working directory
2020/07/30 11:37:12 [TRACE] terraform.NewContext: starting
2020/07/30 11:37:12 [TRACE] terraform.NewContext: resolving provider version selections
2020/07/30 11:37:12 [TRACE] terraform.NewContext: loading provider schemas
2020/07/30 11:37:12 [TRACE] LoadSchemas: retrieving schema for provider type "bizfly"
2020-07-30T11:37:12.862+0700 [INFO]  plugin: configuring client automatic mTLS
2020-07-30T11:37:12.888+0700 [DEBUG] plugin: starting plugin: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly args=[/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly]
2020-07-30T11:37:12.891+0700 [DEBUG] plugin: plugin started: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=57490
2020-07-30T11:37:12.891+0700 [DEBUG] plugin: waiting for RPC address: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly
2020-07-30T11:37:12.909+0700 [INFO]  plugin.terraform-provider-bizfly: configuring server automatic mTLS: timestamp=2020-07-30T11:37:12.909+0700
2020-07-30T11:37:12.935+0700 [DEBUG] plugin.terraform-provider-bizfly: plugin address: address=/var/folders/0r/zdwrk7wn22vd_g32twvblrpc0000gn/T/plugin965468433 network=unix timestamp=2020-07-30T11:37:12.934+0700
2020-07-30T11:37:12.935+0700 [DEBUG] plugin: using plugin: version=5
2020/07/30 11:37:12 [TRACE] GRPCProvider: GetSchema
2020-07-30T11:37:12.987+0700 [TRACE] plugin.stdio: waiting for stdio data
2020/07/30 11:37:12 [TRACE] GRPCProvider: Close
2020-07-30T11:37:12.989+0700 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2020-07-30T11:37:12.991+0700 [DEBUG] plugin: plugin process exited: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=57490
2020-07-30T11:37:12.991+0700 [DEBUG] plugin: plugin exited
2020/07/30 11:37:12 [TRACE] terraform.NewContext: complete
2020/07/30 11:37:12 [TRACE] backend/local: finished building terraform.Context
2020/07/30 11:37:12 [TRACE] backend/local: requesting interactive input, if necessary
2020/07/30 11:37:12 [TRACE] Context.Input: Prompting for provider arguments
2020/07/30 11:37:12 [TRACE] Context.Input: Provider provider.bizfly declared at main.tf:1,1-18
2020/07/30 11:37:12 [TRACE] Context.Input: Input for provider.bizfly: map[string]cty.Value{}
2020/07/30 11:37:12 [TRACE] backend/local: running validation operation
2020/07/30 11:37:12 [INFO] terraform: building graph: GraphTypeValidate
2020/07/30 11:37:12 [TRACE] Executing graph transform *terraform.ConfigTransformer
2020/07/30 11:37:12 [TRACE] ConfigTransformer: Starting for path: 
2020/07/30 11:37:12 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
  ------
2020/07/30 11:37:12 [TRACE] Executing graph transform *terraform.LocalTransformer
2020/07/30 11:37:12 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2020/07/30 11:37:12 [TRACE] Executing graph transform *terraform.OutputTransformer
2020/07/30 11:37:12 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2020/07/30 11:37:12 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2020/07/30 11:37:12 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2020/07/30 11:37:12 [TRACE] Executing graph transform *terraform.StateTransformer
2020/07/30 11:37:12 [TRACE] StateTransformer: state is empty, so nothing to do
2020/07/30 11:37:12 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2020/07/30 11:37:12 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2020/07/30 11:37:12 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2020/07/30 11:37:12 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2020/07/30 11:37:12 [TRACE] AttachResourceConfigTransformer: attaching to "bizfly_instance.test" (*terraform.NodeValidatableResource) config from main.tf:7,1-34
2020/07/30 11:37:12 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2020/07/30 11:37:12 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/30 11:37:12 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/30 11:37:12 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2020/07/30 11:37:12 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:37:12 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2020/07/30 11:37:12 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2020/07/30 11:37:12 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2020/07/30 11:37:12 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2020/07/30 11:37:12 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2020/07/30 11:37:12 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2020/07/30 11:37:12 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2020/07/30 11:37:12 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2020/07/30 11:37:12 [TRACE] ProviderConfigTransformer: attaching to "provider.bizfly" provider configuration from main.tf:1,1-18
2020/07/30 11:37:12 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:37:12 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2020/07/30 11:37:12 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2020/07/30 11:37:12 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2020/07/30 11:37:12 [TRACE] ProviderTransformer: bizfly_instance.test is provided by provider.bizfly or inherited equivalent
2020/07/30 11:37:12 [TRACE] ProviderTransformer: exact match for provider.bizfly serving bizfly_instance.test
2020/07/30 11:37:12 [DEBUG] ProviderTransformer: "bizfly_instance.test" (*terraform.NodeValidatableResource) needs provider.bizfly
2020/07/30 11:37:12 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:37:12 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2020/07/30 11:37:12 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2020/07/30 11:37:12 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2020/07/30 11:37:12 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2020/07/30 11:37:12 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:37:12 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2020/07/30 11:37:12 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2020/07/30 11:37:12 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2020/07/30 11:37:12 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.bizfly
2020/07/30 11:37:12 [TRACE] AttachSchemaTransformer: attaching resource schema to bizfly_instance.test
2020/07/30 11:37:12 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2020/07/30 11:37:12 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/30 11:37:12 [DEBUG] ReferenceTransformer: "bizfly_instance.test" references: []
2020/07/30 11:37:12 [DEBUG] ReferenceTransformer: "var.login" references: []
2020/07/30 11:37:12 [DEBUG] ReferenceTransformer: "provider.bizfly" references: []
2020/07/30 11:37:12 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/30 11:37:12 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2020/07/30 11:37:12 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:37:12 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/30 11:37:12 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/30 11:37:12 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2020/07/30 11:37:12 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2020/07/30 11:37:12 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2020/07/30 11:37:12 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
    bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:37:12 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2020/07/30 11:37:12 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer (no changes)
2020/07/30 11:37:12 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/30 11:37:12 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
    bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.bizfly (close) - *terraform.graphNodeCloseProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:37:12 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2020/07/30 11:37:12 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodeValidatableResource
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
    bizfly_instance.test - *terraform.NodeValidatableResource
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.bizfly (close) - *terraform.graphNodeCloseProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:37:12 [DEBUG] Starting graph walk: walkValidate
2020/07/30 11:37:12 [TRACE] dag/walk: updating graph
2020/07/30 11:37:12 [TRACE] dag/walk: added new vertex: "bizfly_instance.test"
2020/07/30 11:37:12 [TRACE] dag/walk: added new vertex: "var.login"
2020/07/30 11:37:12 [TRACE] dag/walk: added new vertex: "provider.bizfly"
2020/07/30 11:37:12 [TRACE] dag/walk: added new vertex: "meta.count-boundary (EachMode fixup)"
2020/07/30 11:37:12 [TRACE] dag/walk: added new vertex: "provider.bizfly (close)"
2020/07/30 11:37:12 [TRACE] dag/walk: added new vertex: "root"
2020/07/30 11:37:12 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "bizfly_instance.test"
2020/07/30 11:37:12 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "var.login"
2020/07/30 11:37:12 [TRACE] dag/walk: added edge: "provider.bizfly (close)" waiting on "bizfly_instance.test"
2020/07/30 11:37:12 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (EachMode fixup)"
2020/07/30 11:37:12 [TRACE] dag/walk: added edge: "root" waiting on "provider.bizfly (close)"
2020/07/30 11:37:12 [TRACE] dag/walk: added edge: "bizfly_instance.test" waiting on "provider.bizfly"
2020/07/30 11:37:12 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (EachMode fixup)", sending new deps
2020/07/30 11:37:12 [TRACE] dag/walk: dependencies changed for "provider.bizfly (close)", sending new deps
2020/07/30 11:37:12 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2020/07/30 11:37:12 [TRACE] dag/walk: dependencies changed for "bizfly_instance.test", sending new deps
2020/07/30 11:37:12 [TRACE] dag/walk: visiting "var.login"
2020/07/30 11:37:12 [TRACE] vertex "var.login": starting visit (*terraform.NodeRootVariable)
2020/07/30 11:37:12 [TRACE] dag/walk: visiting "provider.bizfly"
2020/07/30 11:37:12 [TRACE] vertex "var.login": evaluating
2020/07/30 11:37:12 [TRACE] vertex "provider.bizfly": starting visit (*terraform.NodeApplyableProvider)
2020/07/30 11:37:12 [TRACE] [walkValidate] Entering eval tree: var.login
2020/07/30 11:37:12 [TRACE] vertex "provider.bizfly": evaluating
2020/07/30 11:37:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:37:12 [TRACE] [walkValidate] Exiting eval tree: var.login
2020/07/30 11:37:12 [TRACE] [walkValidate] Entering eval tree: provider.bizfly
2020/07/30 11:37:12 [TRACE] vertex "var.login": visit complete
2020/07/30 11:37:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:37:12 [TRACE] <root>: eval: *terraform.EvalInitProvider
2020-07-30T11:37:12.992+0700 [INFO]  plugin: configuring client automatic mTLS
2020-07-30T11:37:13.016+0700 [DEBUG] plugin: starting plugin: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly args=[/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly]
2020-07-30T11:37:13.020+0700 [DEBUG] plugin: plugin started: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=57491
2020-07-30T11:37:13.020+0700 [DEBUG] plugin: waiting for RPC address: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly
2020-07-30T11:37:13.038+0700 [INFO]  plugin.terraform-provider-bizfly: configuring server automatic mTLS: timestamp=2020-07-30T11:37:13.038+0700
2020-07-30T11:37:13.064+0700 [DEBUG] plugin.terraform-provider-bizfly: plugin address: network=unix address=/var/folders/0r/zdwrk7wn22vd_g32twvblrpc0000gn/T/plugin263070198 timestamp=2020-07-30T11:37:13.064+0700
2020-07-30T11:37:13.064+0700 [DEBUG] plugin: using plugin: version=5
2020/07/30 11:37:13 [TRACE] BuiltinEvalContext: Initialized "bizfly" provider for provider.bizfly
2020-07-30T11:37:13.117+0700 [TRACE] plugin.stdio: waiting for stdio data
2020/07/30 11:37:13 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:37:13 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/07/30 11:37:13 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:37:13 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 11:37:13 [TRACE] <root>: eval: *terraform.EvalValidateProvider
2020/07/30 11:37:13 [TRACE] buildProviderConfig for provider.bizfly: using explicit config only
2020/07/30 11:37:13 [TRACE] GRPCProvider: GetSchema
2020/07/30 11:37:13 [TRACE] GRPCProvider: PrepareProviderConfig
2020/07/30 11:37:13 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:37:13 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:37:13 [TRACE] [walkValidate] Exiting eval tree: provider.bizfly
2020/07/30 11:37:13 [TRACE] vertex "provider.bizfly": visit complete
2020/07/30 11:37:13 [TRACE] dag/walk: visiting "bizfly_instance.test"
2020/07/30 11:37:13 [TRACE] vertex "bizfly_instance.test": starting visit (*terraform.NodeValidatableResource)
2020/07/30 11:37:13 [TRACE] vertex "bizfly_instance.test": evaluating
2020/07/30 11:37:13 [TRACE] [walkValidate] Entering eval tree: bizfly_instance.test
2020/07/30 11:37:13 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:37:13 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 11:37:13 [TRACE] <root>: eval: *terraform.EvalValidateResource
2020/07/30 11:37:13 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/07/30 11:37:13 [TRACE] [walkValidate] Exiting eval tree: bizfly_instance.test
2020/07/30 11:37:13 [TRACE] vertex "bizfly_instance.test": visit complete
2020/07/30 11:37:13 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2020/07/30 11:37:13 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2020/07/30 11:37:13 [TRACE] vertex "meta.count-boundary (EachMode fixup)": evaluating
2020/07/30 11:37:13 [TRACE] [walkValidate] Entering eval tree: meta.count-boundary (EachMode fixup)
2020/07/30 11:37:13 [TRACE] dag/walk: visiting "provider.bizfly (close)"
2020/07/30 11:37:13 [TRACE] <root>: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2020/07/30 11:37:13 [TRACE] vertex "provider.bizfly (close)": starting visit (*terraform.graphNodeCloseProvider)
2020/07/30 11:37:13 [TRACE] vertex "provider.bizfly (close)": evaluating
2020/07/30 11:37:13 [TRACE] [walkValidate] Exiting eval tree: meta.count-boundary (EachMode fixup)
2020/07/30 11:37:13 [TRACE] [walkValidate] Entering eval tree: provider.bizfly (close)
2020/07/30 11:37:13 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2020/07/30 11:37:13 [TRACE] <root>: eval: *terraform.EvalCloseProvider
2020/07/30 11:37:13 [TRACE] GRPCProvider: Close
2020-07-30T11:37:13.120+0700 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2020-07-30T11:37:13.121+0700 [DEBUG] plugin: plugin process exited: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=57491
2020-07-30T11:37:13.121+0700 [DEBUG] plugin: plugin exited
2020/07/30 11:37:13 [TRACE] [walkValidate] Exiting eval tree: provider.bizfly (close)
2020/07/30 11:37:13 [TRACE] vertex "provider.bizfly (close)": visit complete
2020/07/30 11:37:13 [TRACE] dag/walk: visiting "root"
2020/07/30 11:37:13 [TRACE] vertex "root": starting visit (terraform.graphNodeRoot)
2020/07/30 11:37:13 [TRACE] vertex "root": visit complete
2020/07/30 11:37:13 [INFO] backend/local: plan calling Refresh
2020/07/30 11:37:13 [INFO] terraform: building graph: GraphTypeRefresh
2020/07/30 11:37:13 [TRACE] No managed resources in state during refresh; skipping managed resource transformer
2020/07/30 11:37:13 [TRACE] Executing graph transform *terraform.ConfigTransformer
2020/07/30 11:37:13 [TRACE] ConfigTransformer: Starting for path: 
2020/07/30 11:37:13 [TRACE] Completed graph transform *terraform.ConfigTransformer (no changes)
2020/07/30 11:37:13 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2020/07/30 11:37:13 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2020/07/30 11:37:13 [TRACE] Executing graph transform *terraform.StateTransformer
2020/07/30 11:37:13 [TRACE] StateTransformer: state is empty, so nothing to do
2020/07/30 11:37:13 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2020/07/30 11:37:13 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/30 11:37:13 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/30 11:37:13 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2020/07/30 11:37:13 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2020/07/30 11:37:13 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2020/07/30 11:37:13 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:37:13 [TRACE] Executing graph transform *terraform.LocalTransformer
2020/07/30 11:37:13 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2020/07/30 11:37:13 [TRACE] Executing graph transform *terraform.OutputTransformer
2020/07/30 11:37:13 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2020/07/30 11:37:13 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2020/07/30 11:37:13 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2020/07/30 11:37:13 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2020/07/30 11:37:13 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2020/07/30 11:37:13 [TRACE] ProviderConfigTransformer: attaching to "provider.bizfly" provider configuration from main.tf:1,1-18
2020/07/30 11:37:13 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:37:13 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2020/07/30 11:37:13 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2020/07/30 11:37:13 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2020/07/30 11:37:13 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer (no changes)
2020/07/30 11:37:13 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2020/07/30 11:37:13 [DEBUG] pruning unused provider.bizfly
2020/07/30 11:37:13 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer with new graph:
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:37:13 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2020/07/30 11:37:13 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2020/07/30 11:37:13 [TRACE] Completed graph transform *terraform.graphTransformerMulti (no changes)
2020/07/30 11:37:13 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2020/07/30 11:37:13 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2020/07/30 11:37:13 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/30 11:37:13 [DEBUG] ReferenceTransformer: "var.login" references: []
2020/07/30 11:37:13 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/30 11:37:13 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2020/07/30 11:37:13 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2020/07/30 11:37:13 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/30 11:37:13 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/30 11:37:13 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2020/07/30 11:37:13 [TRACE] Completed graph transform *terraform.CloseProviderTransformer (no changes)
2020/07/30 11:37:13 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/30 11:37:13 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/07/30 11:37:13 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2020/07/30 11:37:13 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer (no changes)
2020/07/30 11:37:13 [DEBUG] Starting graph walk: walkRefresh
2020/07/30 11:37:13 [TRACE] dag/walk: updating graph
2020/07/30 11:37:13 [TRACE] dag/walk: added new vertex: "var.login"
2020/07/30 11:37:13 [TRACE] dag/walk: visiting "var.login"
2020/07/30 11:37:13 [TRACE] vertex "var.login": starting visit (*terraform.NodeRootVariable)
2020/07/30 11:37:13 [TRACE] vertex "var.login": evaluating
2020/07/30 11:37:13 [TRACE] [walkRefresh] Entering eval tree: var.login
2020/07/30 11:37:13 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:37:13 [TRACE] [walkRefresh] Exiting eval tree: var.login
2020/07/30 11:37:13 [TRACE] vertex "var.login": visit complete
2020/07/30 11:37:13 [INFO] backend/local: plan calling Plan
2020/07/30 11:37:13 [INFO] terraform: building graph: GraphTypePlan
2020/07/30 11:37:13 [TRACE] Executing graph transform *terraform.ConfigTransformer
2020/07/30 11:37:13 [TRACE] ConfigTransformer: Starting for path: 
2020/07/30 11:37:13 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
  ------
2020/07/30 11:37:13 [TRACE] Executing graph transform *terraform.LocalTransformer
2020/07/30 11:37:13 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2020/07/30 11:37:13 [TRACE] Executing graph transform *terraform.OutputTransformer
2020/07/30 11:37:13 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2020/07/30 11:37:13 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2020/07/30 11:37:13 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2020/07/30 11:37:13 [TRACE] Executing graph transform *terraform.StateTransformer
2020/07/30 11:37:13 [TRACE] StateTransformer: state is empty, so nothing to do
2020/07/30 11:37:13 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2020/07/30 11:37:13 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2020/07/30 11:37:13 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2020/07/30 11:37:13 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2020/07/30 11:37:13 [TRACE] AttachResourceConfigTransformer: attaching to "bizfly_instance.test" (*terraform.NodePlannableResource) config from main.tf:7,1-34
2020/07/30 11:37:13 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2020/07/30 11:37:13 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/30 11:37:13 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/30 11:37:13 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2020/07/30 11:37:13 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:37:13 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2020/07/30 11:37:13 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2020/07/30 11:37:13 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2020/07/30 11:37:13 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2020/07/30 11:37:13 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2020/07/30 11:37:13 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2020/07/30 11:37:13 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2020/07/30 11:37:13 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2020/07/30 11:37:13 [TRACE] ProviderConfigTransformer: attaching to "provider.bizfly" provider configuration from main.tf:1,1-18
2020/07/30 11:37:13 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:37:13 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2020/07/30 11:37:13 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2020/07/30 11:37:13 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2020/07/30 11:37:13 [TRACE] ProviderTransformer: bizfly_instance.test is provided by provider.bizfly or inherited equivalent
2020/07/30 11:37:13 [TRACE] ProviderTransformer: exact match for provider.bizfly serving bizfly_instance.test
2020/07/30 11:37:13 [DEBUG] ProviderTransformer: "bizfly_instance.test" (*terraform.NodePlannableResource) needs provider.bizfly
2020/07/30 11:37:13 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:37:13 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2020/07/30 11:37:13 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2020/07/30 11:37:13 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2020/07/30 11:37:13 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2020/07/30 11:37:13 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:37:13 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2020/07/30 11:37:13 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2020/07/30 11:37:13 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2020/07/30 11:37:13 [TRACE] AttachSchemaTransformer: attaching resource schema to bizfly_instance.test
2020/07/30 11:37:13 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.bizfly
2020/07/30 11:37:13 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2020/07/30 11:37:13 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/30 11:37:13 [DEBUG] ReferenceTransformer: "bizfly_instance.test" references: []
2020/07/30 11:37:13 [DEBUG] ReferenceTransformer: "var.login" references: []
2020/07/30 11:37:13 [DEBUG] ReferenceTransformer: "provider.bizfly" references: []
2020/07/30 11:37:13 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/30 11:37:13 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2020/07/30 11:37:13 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:37:13 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/30 11:37:13 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/30 11:37:13 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2020/07/30 11:37:13 [TRACE] ForcedCBDTransformer: "bizfly_instance.test" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2020/07/30 11:37:13 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2020/07/30 11:37:13 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2020/07/30 11:37:13 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
    bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:37:13 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2020/07/30 11:37:13 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer (no changes)
2020/07/30 11:37:13 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/30 11:37:13 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
    bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.bizfly (close) - *terraform.graphNodeCloseProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:37:13 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2020/07/30 11:37:13 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodePlannableResource
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
    bizfly_instance.test - *terraform.NodePlannableResource
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.bizfly (close) - *terraform.graphNodeCloseProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:37:13 [DEBUG] Starting graph walk: walkPlan
2020/07/30 11:37:13 [TRACE] dag/walk: updating graph
2020/07/30 11:37:13 [TRACE] dag/walk: added new vertex: "bizfly_instance.test"
2020/07/30 11:37:13 [TRACE] dag/walk: added new vertex: "var.login"
2020/07/30 11:37:13 [TRACE] dag/walk: added new vertex: "provider.bizfly"
2020/07/30 11:37:13 [TRACE] dag/walk: added new vertex: "meta.count-boundary (EachMode fixup)"
2020/07/30 11:37:13 [TRACE] dag/walk: added new vertex: "provider.bizfly (close)"
2020/07/30 11:37:13 [TRACE] dag/walk: added new vertex: "root"
2020/07/30 11:37:13 [TRACE] dag/walk: added edge: "root" waiting on "provider.bizfly (close)"
2020/07/30 11:37:13 [TRACE] dag/walk: added edge: "bizfly_instance.test" waiting on "provider.bizfly"
2020/07/30 11:37:13 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "bizfly_instance.test"
2020/07/30 11:37:13 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "var.login"
2020/07/30 11:37:13 [TRACE] dag/walk: added edge: "provider.bizfly (close)" waiting on "bizfly_instance.test"
2020/07/30 11:37:13 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (EachMode fixup)"
2020/07/30 11:37:13 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2020/07/30 11:37:13 [TRACE] dag/walk: dependencies changed for "bizfly_instance.test", sending new deps
2020/07/30 11:37:13 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (EachMode fixup)", sending new deps
2020/07/30 11:37:13 [TRACE] dag/walk: dependencies changed for "provider.bizfly (close)", sending new deps
2020/07/30 11:37:13 [TRACE] dag/walk: visiting "var.login"
2020/07/30 11:37:13 [TRACE] vertex "var.login": starting visit (*terraform.NodeRootVariable)
2020/07/30 11:37:13 [TRACE] vertex "var.login": evaluating
2020/07/30 11:37:13 [TRACE] dag/walk: visiting "provider.bizfly"
2020/07/30 11:37:13 [TRACE] [walkPlan] Entering eval tree: var.login
2020/07/30 11:37:13 [TRACE] vertex "provider.bizfly": starting visit (*terraform.NodeApplyableProvider)
2020/07/30 11:37:13 [TRACE] vertex "provider.bizfly": evaluating
2020/07/30 11:37:13 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:37:13 [TRACE] [walkPlan] Entering eval tree: provider.bizfly
2020/07/30 11:37:13 [TRACE] [walkPlan] Exiting eval tree: var.login
2020/07/30 11:37:13 [TRACE] vertex "var.login": visit complete
2020/07/30 11:37:13 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:37:13 [TRACE] <root>: eval: *terraform.EvalInitProvider
2020-07-30T11:37:13.123+0700 [INFO]  plugin: configuring client automatic mTLS
2020-07-30T11:37:13.150+0700 [DEBUG] plugin: starting plugin: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly args=[/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly]
2020-07-30T11:37:13.154+0700 [DEBUG] plugin: plugin started: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=57492
2020-07-30T11:37:13.154+0700 [DEBUG] plugin: waiting for RPC address: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly
2020-07-30T11:37:13.172+0700 [INFO]  plugin.terraform-provider-bizfly: configuring server automatic mTLS: timestamp=2020-07-30T11:37:13.172+0700
2020-07-30T11:37:13.200+0700 [DEBUG] plugin: using plugin: version=5
2020-07-30T11:37:13.200+0700 [DEBUG] plugin.terraform-provider-bizfly: plugin address: address=/var/folders/0r/zdwrk7wn22vd_g32twvblrpc0000gn/T/plugin682009107 network=unix timestamp=2020-07-30T11:37:13.199+0700
2020/07/30 11:37:13 [TRACE] BuiltinEvalContext: Initialized "bizfly" provider for provider.bizfly
2020/07/30 11:37:13 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:37:13 [TRACE] <root>: eval: terraform.EvalNoop
2020-07-30T11:37:13.252+0700 [TRACE] plugin.stdio: waiting for stdio data
2020/07/30 11:37:13 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/07/30 11:37:13 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:37:13 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 11:37:13 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/07/30 11:37:13 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:37:13 [TRACE] <root>: eval: *terraform.EvalConfigProvider
2020/07/30 11:37:13 [TRACE] buildProviderConfig for provider.bizfly: using explicit config only
2020/07/30 11:37:13 [TRACE] GRPCProvider: GetSchema
2020/07/30 11:37:13 [TRACE] GRPCProvider: Configure
2020/07/30 11:37:14 [TRACE] [walkPlan] Exiting eval tree: provider.bizfly
2020/07/30 11:37:14 [TRACE] vertex "provider.bizfly": visit complete
2020/07/30 11:37:14 [TRACE] dag/walk: visiting "bizfly_instance.test"
2020/07/30 11:37:14 [TRACE] vertex "bizfly_instance.test": starting visit (*terraform.NodePlannableResource)
2020/07/30 11:37:14 [TRACE] vertex "bizfly_instance.test": evaluating
2020/07/30 11:37:14 [TRACE] [walkPlan] Entering eval tree: bizfly_instance.test
2020/07/30 11:37:14 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/07/30 11:37:14 [TRACE] [walkPlan] Exiting eval tree: bizfly_instance.test
2020/07/30 11:37:14 [TRACE] vertex "bizfly_instance.test": expanding dynamic subgraph
2020/07/30 11:37:14 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/07/30 11:37:14 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResourceInstance
  ------
2020/07/30 11:37:14 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/07/30 11:37:14 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/07/30 11:37:14 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/30 11:37:14 [DEBUG] Resource instance state not found for node "bizfly_instance.test", instance bizfly_instance.test
2020/07/30 11:37:14 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/30 11:37:14 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/30 11:37:14 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/30 11:37:14 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/30 11:37:14 [DEBUG] ReferenceTransformer: "bizfly_instance.test" references: []
2020/07/30 11:37:14 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/30 11:37:14 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/30 11:37:14 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/07/30 11:37:14 [TRACE] vertex "bizfly_instance.test": entering dynamic subgraph
2020/07/30 11:37:14 [TRACE] dag/walk: updating graph
2020/07/30 11:37:14 [TRACE] dag/walk: added new vertex: "bizfly_instance.test"
2020/07/30 11:37:14 [TRACE] dag/walk: visiting "bizfly_instance.test"
2020/07/30 11:37:14 [TRACE] vertex "bizfly_instance.test": starting visit (*terraform.NodePlannableResourceInstance)
2020/07/30 11:37:14 [TRACE] vertex "bizfly_instance.test": evaluating
2020/07/30 11:37:14 [TRACE] [walkPlan] Entering eval tree: bizfly_instance.test
2020/07/30 11:37:14 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:37:14 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 11:37:14 [TRACE] <root>: eval: *terraform.EvalReadState
2020/07/30 11:37:14 [TRACE] EvalReadState: reading state for bizfly_instance.test
2020/07/30 11:37:14 [TRACE] EvalReadState: no state present for bizfly_instance.test
2020/07/30 11:37:14 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2020/07/30 11:37:14 [TRACE] <root>: eval: *terraform.EvalDiff
2020/07/30 11:37:14 [TRACE] Re-validating config for "bizfly_instance.test"
2020/07/30 11:37:14 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/07/30 11:37:14 [TRACE] GRPCProvider: PlanResourceChange
2020/07/30 11:37:14 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2020/07/30 11:37:14 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/07/30 11:37:14 [TRACE] EvalWriteState: writing current state object for bizfly_instance.test
2020/07/30 11:37:14 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/07/30 11:37:14 [TRACE] EvalWriteDiff: recorded Create change for bizfly_instance.test
2020/07/30 11:37:14 [TRACE] [walkPlan] Exiting eval tree: bizfly_instance.test
2020/07/30 11:37:14 [TRACE] vertex "bizfly_instance.test": visit complete
2020/07/30 11:37:14 [TRACE] vertex "bizfly_instance.test": dynamic subgraph completed successfully
2020/07/30 11:37:14 [TRACE] vertex "bizfly_instance.test": visit complete
2020/07/30 11:37:14 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2020/07/30 11:37:14 [TRACE] dag/walk: visiting "provider.bizfly (close)"
2020/07/30 11:37:14 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2020/07/30 11:37:14 [TRACE] vertex "provider.bizfly (close)": starting visit (*terraform.graphNodeCloseProvider)
2020/07/30 11:37:14 [TRACE] vertex "meta.count-boundary (EachMode fixup)": evaluating
2020/07/30 11:37:14 [TRACE] vertex "provider.bizfly (close)": evaluating
2020/07/30 11:37:14 [TRACE] [walkPlan] Entering eval tree: meta.count-boundary (EachMode fixup)
2020/07/30 11:37:14 [TRACE] [walkPlan] Entering eval tree: provider.bizfly (close)
2020/07/30 11:37:14 [TRACE] <root>: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2020/07/30 11:37:14 [TRACE] <root>: eval: *terraform.EvalCloseProvider
2020/07/30 11:37:14 [TRACE] GRPCProvider: Close
2020/07/30 11:37:14 [TRACE] [walkPlan] Exiting eval tree: meta.count-boundary (EachMode fixup)
2020/07/30 11:37:14 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2020-07-30T11:37:14.480+0700 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2020-07-30T11:37:14.483+0700 [DEBUG] plugin: plugin process exited: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=57492
2020-07-30T11:37:14.483+0700 [DEBUG] plugin: plugin exited
2020/07/30 11:37:14 [TRACE] [walkPlan] Exiting eval tree: provider.bizfly (close)
2020/07/30 11:37:14 [TRACE] vertex "provider.bizfly (close)": visit complete
2020/07/30 11:37:14 [TRACE] dag/walk: visiting "root"
2020/07/30 11:37:14 [TRACE] vertex "root": starting visit (terraform.graphNodeRoot)
2020/07/30 11:37:14 [TRACE] vertex "root": visit complete
2020/07/30 11:37:14 [INFO] backend/local: plan operation completed
2020/07/30 11:37:14 [TRACE] statemgr.Filesystem: removing lock metadata file .terraform.tfstate.lock.info
2020/07/30 11:37:14 [TRACE] statemgr.Filesystem: unlocking terraform.tfstate using fcntl flock
2020/07/30 11:37:17 [INFO] Terraform version: 0.12.29  
2020/07/30 11:37:17 [INFO] Go runtime version: go1.13.14
2020/07/30 11:37:17 [INFO] CLI args: []string{"/usr/local/bin/terraform", "apply"}
2020/07/30 11:37:17 [DEBUG] Attempting to open CLI config file: /Users/hung/.terraformrc
2020/07/30 11:37:17 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2020/07/30 11:37:17 [INFO] CLI command args: []string{"apply"}
2020/07/30 11:37:17 [TRACE] Meta.Backend: no config given or present on disk, so returning nil config
2020/07/30 11:37:17 [TRACE] Meta.Backend: backend has not previously been initialized in this working directory
2020/07/30 11:37:17 [DEBUG] New state was assigned lineage "f46a50a1-41c0-f76d-7ce4-18ceb1e330c8"
2020/07/30 11:37:17 [TRACE] Meta.Backend: using default local state only (no backend configuration, and no existing initialized backend)
2020/07/30 11:37:17 [TRACE] Meta.Backend: instantiated backend of type <nil>
2020/07/30 11:37:17 [DEBUG] checking for provider in "."
2020/07/30 11:37:17 [WARN] found legacy provider "terraform-provider-bizfly"
2020/07/30 11:37:17 [DEBUG] checking for provider in "/usr/local/bin"
2020/07/30 11:37:17 [DEBUG] checking for provider in ".terraform/plugins/darwin_amd64"
2020/07/30 11:37:17 [DEBUG] found valid plugin: "bizfly", "0.0.0", "/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly"
2020/07/30 11:37:17 [DEBUG] checking for provisioner in "."
2020/07/30 11:37:17 [DEBUG] checking for provisioner in "/usr/local/bin"
2020/07/30 11:37:17 [DEBUG] checking for provisioner in ".terraform/plugins/darwin_amd64"
2020/07/30 11:37:17 [TRACE] Meta.Backend: backend <nil> does not support operations, so wrapping it in a local backend
2020/07/30 11:37:17 [INFO] backend/local: starting Apply operation
2020/07/30 11:37:17 [TRACE] backend/local: requesting state manager for workspace "default"
2020/07/30 11:37:17 [TRACE] backend/local: state manager for workspace "default" will:
 - read initial snapshot from terraform.tfstate
 - write new snapshots to terraform.tfstate
 - create any backup at terraform.tfstate.backup
2020/07/30 11:37:17 [TRACE] backend/local: requesting state lock for workspace "default"
2020/07/30 11:37:17 [TRACE] statemgr.Filesystem: preparing to manage state snapshots at terraform.tfstate
2020/07/30 11:37:17 [TRACE] statemgr.Filesystem: existing snapshot has lineage "8e1934d5-1d8f-e9a8-58e8-6c54c3aa209a" serial 1
2020/07/30 11:37:17 [TRACE] statemgr.Filesystem: locking terraform.tfstate using fcntl flock
2020/07/30 11:37:17 [TRACE] statemgr.Filesystem: writing lock metadata to .terraform.tfstate.lock.info
2020/07/30 11:37:17 [TRACE] backend/local: reading remote state for workspace "default"
2020/07/30 11:37:17 [TRACE] statemgr.Filesystem: reading latest snapshot from terraform.tfstate
2020/07/30 11:37:17 [TRACE] statemgr.Filesystem: read snapshot with lineage "8e1934d5-1d8f-e9a8-58e8-6c54c3aa209a" serial 1
2020/07/30 11:37:17 [TRACE] backend/local: retrieving local state snapshot for workspace "default"
2020/07/30 11:37:17 [TRACE] backend/local: building context for current working directory
2020/07/30 11:37:17 [TRACE] terraform.NewContext: starting
2020/07/30 11:37:17 [TRACE] terraform.NewContext: resolving provider version selections
2020/07/30 11:37:17 [TRACE] terraform.NewContext: loading provider schemas
2020/07/30 11:37:17 [TRACE] LoadSchemas: retrieving schema for provider type "bizfly"
2020-07-30T11:37:17.714+0700 [INFO]  plugin: configuring client automatic mTLS
2020-07-30T11:37:17.741+0700 [DEBUG] plugin: starting plugin: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly args=[/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly]
2020-07-30T11:37:17.744+0700 [DEBUG] plugin: plugin started: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=57511
2020-07-30T11:37:17.744+0700 [DEBUG] plugin: waiting for RPC address: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly
2020-07-30T11:37:17.761+0700 [INFO]  plugin.terraform-provider-bizfly: configuring server automatic mTLS: timestamp=2020-07-30T11:37:17.761+0700
2020-07-30T11:37:17.788+0700 [DEBUG] plugin.terraform-provider-bizfly: plugin address: address=/var/folders/0r/zdwrk7wn22vd_g32twvblrpc0000gn/T/plugin314690618 network=unix timestamp=2020-07-30T11:37:17.788+0700
2020-07-30T11:37:17.788+0700 [DEBUG] plugin: using plugin: version=5
2020/07/30 11:37:17 [TRACE] GRPCProvider: GetSchema
2020-07-30T11:37:17.839+0700 [TRACE] plugin.stdio: waiting for stdio data
2020/07/30 11:37:17 [TRACE] GRPCProvider: Close
2020-07-30T11:37:17.842+0700 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2020-07-30T11:37:17.844+0700 [DEBUG] plugin: plugin process exited: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=57511
2020-07-30T11:37:17.844+0700 [DEBUG] plugin: plugin exited
2020/07/30 11:37:17 [TRACE] terraform.NewContext: complete
2020/07/30 11:37:17 [TRACE] backend/local: finished building terraform.Context
2020/07/30 11:37:17 [TRACE] backend/local: requesting interactive input, if necessary
2020/07/30 11:37:17 [TRACE] Context.Input: Prompting for provider arguments
2020/07/30 11:37:17 [TRACE] Context.Input: Provider provider.bizfly declared at main.tf:1,1-18
2020/07/30 11:37:17 [TRACE] Context.Input: Input for provider.bizfly: map[string]cty.Value{}
2020/07/30 11:37:17 [TRACE] backend/local: running validation operation
2020/07/30 11:37:17 [INFO] terraform: building graph: GraphTypeValidate
2020/07/30 11:37:17 [TRACE] Executing graph transform *terraform.ConfigTransformer
2020/07/30 11:37:17 [TRACE] ConfigTransformer: Starting for path: 
2020/07/30 11:37:17 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
  ------
2020/07/30 11:37:17 [TRACE] Executing graph transform *terraform.LocalTransformer
2020/07/30 11:37:17 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2020/07/30 11:37:17 [TRACE] Executing graph transform *terraform.OutputTransformer
2020/07/30 11:37:17 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2020/07/30 11:37:17 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2020/07/30 11:37:17 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2020/07/30 11:37:17 [TRACE] Executing graph transform *terraform.StateTransformer
2020/07/30 11:37:17 [TRACE] StateTransformer: state is empty, so nothing to do
2020/07/30 11:37:17 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2020/07/30 11:37:17 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2020/07/30 11:37:17 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2020/07/30 11:37:17 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2020/07/30 11:37:17 [TRACE] AttachResourceConfigTransformer: attaching to "bizfly_instance.test" (*terraform.NodeValidatableResource) config from main.tf:7,1-34
2020/07/30 11:37:17 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2020/07/30 11:37:17 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/30 11:37:17 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/30 11:37:17 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2020/07/30 11:37:17 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:37:17 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2020/07/30 11:37:17 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2020/07/30 11:37:17 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2020/07/30 11:37:17 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2020/07/30 11:37:17 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2020/07/30 11:37:17 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2020/07/30 11:37:17 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2020/07/30 11:37:17 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2020/07/30 11:37:17 [TRACE] ProviderConfigTransformer: attaching to "provider.bizfly" provider configuration from main.tf:1,1-18
2020/07/30 11:37:17 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:37:17 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2020/07/30 11:37:17 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2020/07/30 11:37:17 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2020/07/30 11:37:17 [TRACE] ProviderTransformer: bizfly_instance.test is provided by provider.bizfly or inherited equivalent
2020/07/30 11:37:17 [TRACE] ProviderTransformer: exact match for provider.bizfly serving bizfly_instance.test
2020/07/30 11:37:17 [DEBUG] ProviderTransformer: "bizfly_instance.test" (*terraform.NodeValidatableResource) needs provider.bizfly
2020/07/30 11:37:17 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:37:17 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2020/07/30 11:37:17 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2020/07/30 11:37:17 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2020/07/30 11:37:17 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2020/07/30 11:37:17 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:37:17 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2020/07/30 11:37:17 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2020/07/30 11:37:17 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2020/07/30 11:37:17 [TRACE] AttachSchemaTransformer: attaching resource schema to bizfly_instance.test
2020/07/30 11:37:17 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.bizfly
2020/07/30 11:37:17 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2020/07/30 11:37:17 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/30 11:37:17 [DEBUG] ReferenceTransformer: "provider.bizfly" references: []
2020/07/30 11:37:17 [DEBUG] ReferenceTransformer: "bizfly_instance.test" references: []
2020/07/30 11:37:17 [DEBUG] ReferenceTransformer: "var.login" references: []
2020/07/30 11:37:17 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/30 11:37:17 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2020/07/30 11:37:17 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:37:17 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/30 11:37:17 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/30 11:37:17 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2020/07/30 11:37:17 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2020/07/30 11:37:17 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2020/07/30 11:37:17 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
    bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:37:17 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2020/07/30 11:37:17 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer (no changes)
2020/07/30 11:37:17 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/30 11:37:17 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
    bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.bizfly (close) - *terraform.graphNodeCloseProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:37:17 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2020/07/30 11:37:17 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodeValidatableResource
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
    bizfly_instance.test - *terraform.NodeValidatableResource
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.bizfly (close) - *terraform.graphNodeCloseProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:37:17 [DEBUG] Starting graph walk: walkValidate
2020/07/30 11:37:17 [TRACE] dag/walk: updating graph
2020/07/30 11:37:17 [TRACE] dag/walk: added new vertex: "bizfly_instance.test"
2020/07/30 11:37:17 [TRACE] dag/walk: added new vertex: "var.login"
2020/07/30 11:37:17 [TRACE] dag/walk: added new vertex: "provider.bizfly"
2020/07/30 11:37:17 [TRACE] dag/walk: added new vertex: "meta.count-boundary (EachMode fixup)"
2020/07/30 11:37:17 [TRACE] dag/walk: added new vertex: "provider.bizfly (close)"
2020/07/30 11:37:17 [TRACE] dag/walk: added new vertex: "root"
2020/07/30 11:37:17 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "bizfly_instance.test"
2020/07/30 11:37:17 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "var.login"
2020/07/30 11:37:17 [TRACE] dag/walk: added edge: "provider.bizfly (close)" waiting on "bizfly_instance.test"
2020/07/30 11:37:17 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (EachMode fixup)"
2020/07/30 11:37:17 [TRACE] dag/walk: added edge: "root" waiting on "provider.bizfly (close)"
2020/07/30 11:37:17 [TRACE] dag/walk: added edge: "bizfly_instance.test" waiting on "provider.bizfly"
2020/07/30 11:37:17 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (EachMode fixup)", sending new deps
2020/07/30 11:37:17 [TRACE] dag/walk: dependencies changed for "provider.bizfly (close)", sending new deps
2020/07/30 11:37:17 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2020/07/30 11:37:17 [TRACE] dag/walk: dependencies changed for "bizfly_instance.test", sending new deps
2020/07/30 11:37:17 [TRACE] dag/walk: visiting "provider.bizfly"
2020/07/30 11:37:17 [TRACE] vertex "provider.bizfly": starting visit (*terraform.NodeApplyableProvider)
2020/07/30 11:37:17 [TRACE] vertex "provider.bizfly": evaluating
2020/07/30 11:37:17 [TRACE] [walkValidate] Entering eval tree: provider.bizfly
2020/07/30 11:37:17 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:37:17 [TRACE] <root>: eval: *terraform.EvalInitProvider
2020-07-30T11:37:17.846+0700 [INFO]  plugin: configuring client automatic mTLS
2020/07/30 11:37:17 [TRACE] dag/walk: visiting "var.login"
2020/07/30 11:37:17 [TRACE] vertex "var.login": starting visit (*terraform.NodeRootVariable)
2020/07/30 11:37:17 [TRACE] vertex "var.login": evaluating
2020/07/30 11:37:17 [TRACE] [walkValidate] Entering eval tree: var.login
2020/07/30 11:37:17 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:37:17 [TRACE] [walkValidate] Exiting eval tree: var.login
2020/07/30 11:37:17 [TRACE] vertex "var.login": visit complete
2020-07-30T11:37:17.871+0700 [DEBUG] plugin: starting plugin: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly args=[/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly]
2020-07-30T11:37:17.874+0700 [DEBUG] plugin: plugin started: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=57512
2020-07-30T11:37:17.875+0700 [DEBUG] plugin: waiting for RPC address: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly
2020-07-30T11:37:17.892+0700 [INFO]  plugin.terraform-provider-bizfly: configuring server automatic mTLS: timestamp=2020-07-30T11:37:17.892+0700
2020-07-30T11:37:17.920+0700 [DEBUG] plugin.terraform-provider-bizfly: plugin address: address=/var/folders/0r/zdwrk7wn22vd_g32twvblrpc0000gn/T/plugin022801287 network=unix timestamp=2020-07-30T11:37:17.920+0700
2020-07-30T11:37:17.920+0700 [DEBUG] plugin: using plugin: version=5
2020/07/30 11:37:17 [TRACE] BuiltinEvalContext: Initialized "bizfly" provider for provider.bizfly
2020/07/30 11:37:17 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:37:17 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/07/30 11:37:17 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:37:17 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 11:37:17 [TRACE] <root>: eval: *terraform.EvalValidateProvider
2020-07-30T11:37:17.971+0700 [TRACE] plugin.stdio: waiting for stdio data
2020/07/30 11:37:17 [TRACE] buildProviderConfig for provider.bizfly: using explicit config only
2020/07/30 11:37:17 [TRACE] GRPCProvider: GetSchema
2020/07/30 11:37:17 [TRACE] GRPCProvider: PrepareProviderConfig
2020/07/30 11:37:17 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:37:17 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:37:17 [TRACE] [walkValidate] Exiting eval tree: provider.bizfly
2020/07/30 11:37:17 [TRACE] vertex "provider.bizfly": visit complete
2020/07/30 11:37:17 [TRACE] dag/walk: visiting "bizfly_instance.test"
2020/07/30 11:37:17 [TRACE] vertex "bizfly_instance.test": starting visit (*terraform.NodeValidatableResource)
2020/07/30 11:37:17 [TRACE] vertex "bizfly_instance.test": evaluating
2020/07/30 11:37:17 [TRACE] [walkValidate] Entering eval tree: bizfly_instance.test
2020/07/30 11:37:17 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:37:17 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 11:37:17 [TRACE] <root>: eval: *terraform.EvalValidateResource
2020/07/30 11:37:17 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/07/30 11:37:17 [TRACE] [walkValidate] Exiting eval tree: bizfly_instance.test
2020/07/30 11:37:17 [TRACE] vertex "bizfly_instance.test": visit complete
2020/07/30 11:37:17 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2020/07/30 11:37:17 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2020/07/30 11:37:17 [TRACE] vertex "meta.count-boundary (EachMode fixup)": evaluating
2020/07/30 11:37:17 [TRACE] [walkValidate] Entering eval tree: meta.count-boundary (EachMode fixup)
2020/07/30 11:37:17 [TRACE] <root>: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2020/07/30 11:37:17 [TRACE] dag/walk: visiting "provider.bizfly (close)"
2020/07/30 11:37:17 [TRACE] [walkValidate] Exiting eval tree: meta.count-boundary (EachMode fixup)
2020/07/30 11:37:17 [TRACE] vertex "provider.bizfly (close)": starting visit (*terraform.graphNodeCloseProvider)
2020/07/30 11:37:17 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2020/07/30 11:37:17 [TRACE] vertex "provider.bizfly (close)": evaluating
2020/07/30 11:37:17 [TRACE] [walkValidate] Entering eval tree: provider.bizfly (close)
2020/07/30 11:37:17 [TRACE] <root>: eval: *terraform.EvalCloseProvider
2020/07/30 11:37:17 [TRACE] GRPCProvider: Close
2020-07-30T11:37:17.975+0700 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2020-07-30T11:37:17.978+0700 [DEBUG] plugin: plugin process exited: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=57512
2020-07-30T11:37:17.978+0700 [DEBUG] plugin: plugin exited
2020/07/30 11:37:17 [TRACE] [walkValidate] Exiting eval tree: provider.bizfly (close)
2020/07/30 11:37:17 [TRACE] vertex "provider.bizfly (close)": visit complete
2020/07/30 11:37:17 [TRACE] dag/walk: visiting "root"
2020/07/30 11:37:17 [TRACE] vertex "root": starting visit (terraform.graphNodeRoot)
2020/07/30 11:37:17 [TRACE] vertex "root": visit complete
2020/07/30 11:37:17 [INFO] backend/local: apply calling Refresh
2020/07/30 11:37:17 [INFO] terraform: building graph: GraphTypeRefresh
2020/07/30 11:37:17 [TRACE] No managed resources in state during refresh; skipping managed resource transformer
2020/07/30 11:37:17 [TRACE] Executing graph transform *terraform.ConfigTransformer
2020/07/30 11:37:17 [TRACE] ConfigTransformer: Starting for path: 
2020/07/30 11:37:17 [TRACE] Completed graph transform *terraform.ConfigTransformer (no changes)
2020/07/30 11:37:17 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2020/07/30 11:37:17 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2020/07/30 11:37:17 [TRACE] Executing graph transform *terraform.StateTransformer
2020/07/30 11:37:17 [TRACE] StateTransformer: state is empty, so nothing to do
2020/07/30 11:37:17 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2020/07/30 11:37:17 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/30 11:37:17 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/30 11:37:17 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2020/07/30 11:37:17 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2020/07/30 11:37:17 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2020/07/30 11:37:17 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:37:17 [TRACE] Executing graph transform *terraform.LocalTransformer
2020/07/30 11:37:17 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2020/07/30 11:37:17 [TRACE] Executing graph transform *terraform.OutputTransformer
2020/07/30 11:37:17 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2020/07/30 11:37:17 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2020/07/30 11:37:17 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2020/07/30 11:37:17 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2020/07/30 11:37:17 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2020/07/30 11:37:17 [TRACE] ProviderConfigTransformer: attaching to "provider.bizfly" provider configuration from main.tf:1,1-18
2020/07/30 11:37:17 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:37:17 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2020/07/30 11:37:17 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2020/07/30 11:37:17 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2020/07/30 11:37:17 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer (no changes)
2020/07/30 11:37:17 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2020/07/30 11:37:17 [DEBUG] pruning unused provider.bizfly
2020/07/30 11:37:17 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer with new graph:
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:37:17 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2020/07/30 11:37:17 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2020/07/30 11:37:17 [TRACE] Completed graph transform *terraform.graphTransformerMulti (no changes)
2020/07/30 11:37:17 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2020/07/30 11:37:17 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2020/07/30 11:37:17 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/30 11:37:17 [DEBUG] ReferenceTransformer: "var.login" references: []
2020/07/30 11:37:17 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/30 11:37:17 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2020/07/30 11:37:17 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2020/07/30 11:37:17 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/30 11:37:17 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/30 11:37:17 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2020/07/30 11:37:17 [TRACE] Completed graph transform *terraform.CloseProviderTransformer (no changes)
2020/07/30 11:37:17 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/30 11:37:17 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/07/30 11:37:17 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2020/07/30 11:37:17 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer (no changes)
2020/07/30 11:37:17 [DEBUG] Starting graph walk: walkRefresh
2020/07/30 11:37:17 [TRACE] dag/walk: updating graph
2020/07/30 11:37:17 [TRACE] dag/walk: added new vertex: "var.login"
2020/07/30 11:37:17 [TRACE] dag/walk: visiting "var.login"
2020/07/30 11:37:17 [TRACE] vertex "var.login": starting visit (*terraform.NodeRootVariable)
2020/07/30 11:37:17 [TRACE] vertex "var.login": evaluating
2020/07/30 11:37:17 [TRACE] [walkRefresh] Entering eval tree: var.login
2020/07/30 11:37:17 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:37:17 [TRACE] [walkRefresh] Exiting eval tree: var.login
2020/07/30 11:37:17 [TRACE] vertex "var.login": visit complete
2020/07/30 11:37:17 [INFO] backend/local: apply calling Plan
2020/07/30 11:37:17 [INFO] terraform: building graph: GraphTypePlan
2020/07/30 11:37:17 [TRACE] Executing graph transform *terraform.ConfigTransformer
2020/07/30 11:37:17 [TRACE] ConfigTransformer: Starting for path: 
2020/07/30 11:37:17 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
  ------
2020/07/30 11:37:17 [TRACE] Executing graph transform *terraform.LocalTransformer
2020/07/30 11:37:17 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2020/07/30 11:37:17 [TRACE] Executing graph transform *terraform.OutputTransformer
2020/07/30 11:37:17 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2020/07/30 11:37:17 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2020/07/30 11:37:17 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2020/07/30 11:37:17 [TRACE] Executing graph transform *terraform.StateTransformer
2020/07/30 11:37:17 [TRACE] StateTransformer: state is empty, so nothing to do
2020/07/30 11:37:17 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2020/07/30 11:37:17 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2020/07/30 11:37:17 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2020/07/30 11:37:17 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2020/07/30 11:37:17 [TRACE] AttachResourceConfigTransformer: attaching to "bizfly_instance.test" (*terraform.NodePlannableResource) config from main.tf:7,1-34
2020/07/30 11:37:17 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2020/07/30 11:37:17 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/30 11:37:17 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/30 11:37:17 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2020/07/30 11:37:17 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:37:17 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2020/07/30 11:37:17 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2020/07/30 11:37:17 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2020/07/30 11:37:17 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2020/07/30 11:37:17 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2020/07/30 11:37:17 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2020/07/30 11:37:17 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2020/07/30 11:37:17 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2020/07/30 11:37:17 [TRACE] ProviderConfigTransformer: attaching to "provider.bizfly" provider configuration from main.tf:1,1-18
2020/07/30 11:37:17 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:37:17 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2020/07/30 11:37:17 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2020/07/30 11:37:17 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2020/07/30 11:37:17 [TRACE] ProviderTransformer: bizfly_instance.test is provided by provider.bizfly or inherited equivalent
2020/07/30 11:37:17 [TRACE] ProviderTransformer: exact match for provider.bizfly serving bizfly_instance.test
2020/07/30 11:37:17 [DEBUG] ProviderTransformer: "bizfly_instance.test" (*terraform.NodePlannableResource) needs provider.bizfly
2020/07/30 11:37:17 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:37:17 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2020/07/30 11:37:17 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2020/07/30 11:37:17 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2020/07/30 11:37:17 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2020/07/30 11:37:17 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:37:17 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2020/07/30 11:37:17 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2020/07/30 11:37:17 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2020/07/30 11:37:17 [TRACE] AttachSchemaTransformer: attaching resource schema to bizfly_instance.test
2020/07/30 11:37:17 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.bizfly
2020/07/30 11:37:17 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2020/07/30 11:37:17 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/30 11:37:17 [DEBUG] ReferenceTransformer: "bizfly_instance.test" references: []
2020/07/30 11:37:17 [DEBUG] ReferenceTransformer: "var.login" references: []
2020/07/30 11:37:17 [DEBUG] ReferenceTransformer: "provider.bizfly" references: []
2020/07/30 11:37:17 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/30 11:37:17 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2020/07/30 11:37:17 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:37:17 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/30 11:37:17 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/30 11:37:17 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2020/07/30 11:37:17 [TRACE] ForcedCBDTransformer: "bizfly_instance.test" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2020/07/30 11:37:17 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2020/07/30 11:37:17 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2020/07/30 11:37:17 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
    bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:37:17 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2020/07/30 11:37:17 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer (no changes)
2020/07/30 11:37:17 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/30 11:37:17 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
    bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.bizfly (close) - *terraform.graphNodeCloseProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:37:17 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2020/07/30 11:37:17 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodePlannableResource
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
    bizfly_instance.test - *terraform.NodePlannableResource
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.bizfly (close) - *terraform.graphNodeCloseProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:37:17 [DEBUG] Starting graph walk: walkPlan
2020/07/30 11:37:17 [TRACE] dag/walk: updating graph
2020/07/30 11:37:17 [TRACE] dag/walk: added new vertex: "bizfly_instance.test"
2020/07/30 11:37:17 [TRACE] dag/walk: added new vertex: "var.login"
2020/07/30 11:37:17 [TRACE] dag/walk: added new vertex: "provider.bizfly"
2020/07/30 11:37:17 [TRACE] dag/walk: added new vertex: "meta.count-boundary (EachMode fixup)"
2020/07/30 11:37:17 [TRACE] dag/walk: added new vertex: "provider.bizfly (close)"
2020/07/30 11:37:17 [TRACE] dag/walk: added new vertex: "root"
2020/07/30 11:37:17 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (EachMode fixup)"
2020/07/30 11:37:17 [TRACE] dag/walk: added edge: "root" waiting on "provider.bizfly (close)"
2020/07/30 11:37:17 [TRACE] dag/walk: added edge: "bizfly_instance.test" waiting on "provider.bizfly"
2020/07/30 11:37:17 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "bizfly_instance.test"
2020/07/30 11:37:17 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "var.login"
2020/07/30 11:37:17 [TRACE] dag/walk: added edge: "provider.bizfly (close)" waiting on "bizfly_instance.test"
2020/07/30 11:37:17 [TRACE] dag/walk: dependencies changed for "bizfly_instance.test", sending new deps
2020/07/30 11:37:17 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (EachMode fixup)", sending new deps
2020/07/30 11:37:17 [TRACE] dag/walk: dependencies changed for "provider.bizfly (close)", sending new deps
2020/07/30 11:37:17 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2020/07/30 11:37:17 [TRACE] dag/walk: visiting "provider.bizfly"
2020/07/30 11:37:17 [TRACE] vertex "provider.bizfly": starting visit (*terraform.NodeApplyableProvider)
2020/07/30 11:37:17 [TRACE] vertex "provider.bizfly": evaluating
2020/07/30 11:37:17 [TRACE] [walkPlan] Entering eval tree: provider.bizfly
2020/07/30 11:37:17 [TRACE] dag/walk: visiting "var.login"
2020/07/30 11:37:17 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:37:17 [TRACE] <root>: eval: *terraform.EvalInitProvider
2020/07/30 11:37:17 [TRACE] vertex "var.login": starting visit (*terraform.NodeRootVariable)
2020/07/30 11:37:17 [TRACE] vertex "var.login": evaluating
2020/07/30 11:37:17 [TRACE] [walkPlan] Entering eval tree: var.login
2020/07/30 11:37:17 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:37:17 [TRACE] [walkPlan] Exiting eval tree: var.login
2020/07/30 11:37:17 [TRACE] vertex "var.login": visit complete
2020-07-30T11:37:17.979+0700 [INFO]  plugin: configuring client automatic mTLS
2020-07-30T11:37:18.003+0700 [DEBUG] plugin: starting plugin: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly args=[/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly]
2020-07-30T11:37:18.008+0700 [DEBUG] plugin: plugin started: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=57513
2020-07-30T11:37:18.008+0700 [DEBUG] plugin: waiting for RPC address: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly
2020-07-30T11:37:18.026+0700 [INFO]  plugin.terraform-provider-bizfly: configuring server automatic mTLS: timestamp=2020-07-30T11:37:18.026+0700
2020-07-30T11:37:18.052+0700 [DEBUG] plugin.terraform-provider-bizfly: plugin address: address=/var/folders/0r/zdwrk7wn22vd_g32twvblrpc0000gn/T/plugin294021532 network=unix timestamp=2020-07-30T11:37:18.052+0700
2020-07-30T11:37:18.052+0700 [DEBUG] plugin: using plugin: version=5
2020/07/30 11:37:18 [TRACE] BuiltinEvalContext: Initialized "bizfly" provider for provider.bizfly
2020/07/30 11:37:18 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:37:18 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:37:18 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/07/30 11:37:18 [TRACE] <root>: eval: *terraform.EvalSequence
2020-07-30T11:37:18.104+0700 [TRACE] plugin.stdio: waiting for stdio data
2020/07/30 11:37:18 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 11:37:18 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/07/30 11:37:18 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:37:18 [TRACE] <root>: eval: *terraform.EvalConfigProvider
2020/07/30 11:37:18 [TRACE] buildProviderConfig for provider.bizfly: using explicit config only
2020/07/30 11:37:18 [TRACE] GRPCProvider: GetSchema
2020/07/30 11:37:18 [TRACE] GRPCProvider: Configure
2020/07/30 11:37:19 [TRACE] [walkPlan] Exiting eval tree: provider.bizfly
2020/07/30 11:37:19 [TRACE] vertex "provider.bizfly": visit complete
2020/07/30 11:37:19 [TRACE] dag/walk: visiting "bizfly_instance.test"
2020/07/30 11:37:19 [TRACE] vertex "bizfly_instance.test": starting visit (*terraform.NodePlannableResource)
2020/07/30 11:37:19 [TRACE] vertex "bizfly_instance.test": evaluating
2020/07/30 11:37:19 [TRACE] [walkPlan] Entering eval tree: bizfly_instance.test
2020/07/30 11:37:19 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/07/30 11:37:19 [TRACE] [walkPlan] Exiting eval tree: bizfly_instance.test
2020/07/30 11:37:19 [TRACE] vertex "bizfly_instance.test": expanding dynamic subgraph
2020/07/30 11:37:19 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/07/30 11:37:19 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResourceInstance
  ------
2020/07/30 11:37:19 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/07/30 11:37:19 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/07/30 11:37:19 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/30 11:37:19 [DEBUG] Resource instance state not found for node "bizfly_instance.test", instance bizfly_instance.test
2020/07/30 11:37:19 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/30 11:37:19 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/30 11:37:19 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/30 11:37:19 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/30 11:37:19 [DEBUG] ReferenceTransformer: "bizfly_instance.test" references: []
2020/07/30 11:37:19 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/30 11:37:19 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/30 11:37:19 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/07/30 11:37:19 [TRACE] vertex "bizfly_instance.test": entering dynamic subgraph
2020/07/30 11:37:19 [TRACE] dag/walk: updating graph
2020/07/30 11:37:19 [TRACE] dag/walk: added new vertex: "bizfly_instance.test"
2020/07/30 11:37:19 [TRACE] dag/walk: visiting "bizfly_instance.test"
2020/07/30 11:37:19 [TRACE] vertex "bizfly_instance.test": starting visit (*terraform.NodePlannableResourceInstance)
2020/07/30 11:37:19 [TRACE] vertex "bizfly_instance.test": evaluating
2020/07/30 11:37:19 [TRACE] [walkPlan] Entering eval tree: bizfly_instance.test
2020/07/30 11:37:19 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:37:19 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 11:37:19 [TRACE] <root>: eval: *terraform.EvalReadState
2020/07/30 11:37:19 [TRACE] EvalReadState: reading state for bizfly_instance.test
2020/07/30 11:37:19 [TRACE] EvalReadState: no state present for bizfly_instance.test
2020/07/30 11:37:19 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2020/07/30 11:37:19 [TRACE] <root>: eval: *terraform.EvalDiff
2020/07/30 11:37:19 [TRACE] Re-validating config for "bizfly_instance.test"
2020/07/30 11:37:19 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/07/30 11:37:19 [TRACE] GRPCProvider: PlanResourceChange
2020/07/30 11:37:19 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2020/07/30 11:37:19 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/07/30 11:37:19 [TRACE] EvalWriteState: writing current state object for bizfly_instance.test
2020/07/30 11:37:19 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/07/30 11:37:19 [TRACE] EvalWriteDiff: recorded Create change for bizfly_instance.test
2020/07/30 11:37:19 [TRACE] [walkPlan] Exiting eval tree: bizfly_instance.test
2020/07/30 11:37:19 [TRACE] vertex "bizfly_instance.test": visit complete
2020/07/30 11:37:19 [TRACE] vertex "bizfly_instance.test": dynamic subgraph completed successfully
2020/07/30 11:37:19 [TRACE] vertex "bizfly_instance.test": visit complete
2020/07/30 11:37:19 [TRACE] dag/walk: visiting "provider.bizfly (close)"
2020/07/30 11:37:19 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2020/07/30 11:37:19 [TRACE] vertex "provider.bizfly (close)": starting visit (*terraform.graphNodeCloseProvider)
2020/07/30 11:37:19 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2020/07/30 11:37:19 [TRACE] vertex "provider.bizfly (close)": evaluating
2020/07/30 11:37:19 [TRACE] vertex "meta.count-boundary (EachMode fixup)": evaluating
2020/07/30 11:37:19 [TRACE] [walkPlan] Entering eval tree: provider.bizfly (close)
2020/07/30 11:37:19 [TRACE] [walkPlan] Entering eval tree: meta.count-boundary (EachMode fixup)
2020/07/30 11:37:19 [TRACE] <root>: eval: *terraform.EvalCloseProvider
2020/07/30 11:37:19 [TRACE] <root>: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2020/07/30 11:37:19 [TRACE] GRPCProvider: Close
2020/07/30 11:37:19 [TRACE] [walkPlan] Exiting eval tree: meta.count-boundary (EachMode fixup)
2020/07/30 11:37:19 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2020-07-30T11:37:19.281+0700 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2020-07-30T11:37:19.285+0700 [DEBUG] plugin: plugin process exited: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=57513
2020-07-30T11:37:19.285+0700 [DEBUG] plugin: plugin exited
2020/07/30 11:37:19 [TRACE] [walkPlan] Exiting eval tree: provider.bizfly (close)
2020/07/30 11:37:19 [TRACE] vertex "provider.bizfly (close)": visit complete
2020/07/30 11:37:19 [TRACE] dag/walk: visiting "root"
2020/07/30 11:37:19 [TRACE] vertex "root": starting visit (terraform.graphNodeRoot)
2020/07/30 11:37:19 [TRACE] vertex "root": visit complete
2020/07/30 11:37:19 [DEBUG] command: asking for input: "Do you want to perform these actions?"
2020/07/30 11:37:22 [INFO] backend/local: apply calling Apply
2020/07/30 11:37:22 [INFO] terraform: building graph: GraphTypeApply
2020/07/30 11:37:22 [TRACE] Executing graph transform *terraform.ConfigTransformer
2020/07/30 11:37:22 [TRACE] ConfigTransformer: Starting for path: 
2020/07/30 11:37:22 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
  ------
2020/07/30 11:37:22 [TRACE] Executing graph transform *terraform.DiffTransformer
2020/07/30 11:37:22 [TRACE] DiffTransformer starting
2020/07/30 11:37:22 [TRACE] DiffTransformer: found Create change for bizfly_instance.test 
2020/07/30 11:37:22 [TRACE] DiffTransformer: bizfly_instance.test will be represented by bizfly_instance.test
2020/07/30 11:37:22 [TRACE] DiffTransformer complete
2020/07/30 11:37:22 [TRACE] Completed graph transform *terraform.DiffTransformer with new graph:
  bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
  ------
2020/07/30 11:37:22 [TRACE] Executing graph transform *terraform.OrphanResourceTransformer
2020/07/30 11:37:22 [TRACE] Completed graph transform *terraform.OrphanResourceTransformer (no changes)
2020/07/30 11:37:22 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2020/07/30 11:37:22 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2020/07/30 11:37:22 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2020/07/30 11:37:22 [TRACE] AttachResourceConfigTransformer: attaching to "bizfly_instance.test (prepare state)" (*terraform.NodeApplyableResource) config from main.tf:7,1-34
2020/07/30 11:37:22 [TRACE] AttachResourceConfigTransformer: attaching to "bizfly_instance.test" (*terraform.NodeApplyableResourceInstance) config from main.tf:7,1-34
2020/07/30 11:37:22 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2020/07/30 11:37:22 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/30 11:37:22 [DEBUG] Resource state not found for node "bizfly_instance.test", instance bizfly_instance.test
2020/07/30 11:37:22 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/30 11:37:22 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2020/07/30 11:37:22 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2020/07/30 11:37:22 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2020/07/30 11:37:22 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2020/07/30 11:37:22 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2020/07/30 11:37:22 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
  bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:37:22 [TRACE] Executing graph transform *terraform.LocalTransformer
2020/07/30 11:37:22 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2020/07/30 11:37:22 [TRACE] Executing graph transform *terraform.OutputTransformer
2020/07/30 11:37:22 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2020/07/30 11:37:22 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2020/07/30 11:37:22 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2020/07/30 11:37:22 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2020/07/30 11:37:22 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2020/07/30 11:37:22 [TRACE] ProviderConfigTransformer: attaching to "provider.bizfly" provider configuration from main.tf:1,1-18
2020/07/30 11:37:22 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:37:22 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2020/07/30 11:37:22 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2020/07/30 11:37:22 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2020/07/30 11:37:22 [TRACE] ProviderTransformer: bizfly_instance.test (prepare state) is provided by provider.bizfly or inherited equivalent
2020/07/30 11:37:22 [TRACE] ProviderTransformer: bizfly_instance.test is provided by provider.bizfly or inherited equivalent
2020/07/30 11:37:22 [TRACE] ProviderTransformer: exact match for provider.bizfly serving bizfly_instance.test (prepare state)
2020/07/30 11:37:22 [DEBUG] ProviderTransformer: "bizfly_instance.test (prepare state)" (*terraform.NodeApplyableResource) needs provider.bizfly
2020/07/30 11:37:22 [TRACE] ProviderTransformer: exact match for provider.bizfly serving bizfly_instance.test
2020/07/30 11:37:22 [DEBUG] ProviderTransformer: "bizfly_instance.test" (*terraform.NodeApplyableResourceInstance) needs provider.bizfly
2020/07/30 11:37:22 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:37:22 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2020/07/30 11:37:22 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2020/07/30 11:37:22 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2020/07/30 11:37:22 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2020/07/30 11:37:22 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:37:22 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2020/07/30 11:37:22 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2020/07/30 11:37:22 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2020/07/30 11:37:22 [TRACE] AttachSchemaTransformer: attaching resource schema to bizfly_instance.test (prepare state)
2020/07/30 11:37:22 [TRACE] AttachSchemaTransformer: attaching resource schema to bizfly_instance.test
2020/07/30 11:37:22 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.bizfly
2020/07/30 11:37:22 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2020/07/30 11:37:22 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/30 11:37:22 [DEBUG] ReferenceTransformer: "bizfly_instance.test (prepare state)" references: []
2020/07/30 11:37:22 [DEBUG] ReferenceTransformer: "bizfly_instance.test" references: []
2020/07/30 11:37:22 [DEBUG] ReferenceTransformer: "var.login" references: []
2020/07/30 11:37:22 [DEBUG] ReferenceTransformer: "provider.bizfly" references: []
2020/07/30 11:37:22 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/30 11:37:22 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2020/07/30 11:37:22 [TRACE] AttachDependenciesTransformer: bizfly_instance.test depends on []
2020/07/30 11:37:22 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2020/07/30 11:37:22 [TRACE] Executing graph transform *terraform.DestroyEdgeTransformer
2020/07/30 11:37:22 [TRACE] Completed graph transform *terraform.DestroyEdgeTransformer (no changes)
2020/07/30 11:37:22 [TRACE] Executing graph transform *terraform.CBDEdgeTransformer
2020/07/30 11:37:22 [TRACE] Completed graph transform *terraform.CBDEdgeTransformer (no changes)
2020/07/30 11:37:22 [TRACE] Executing graph transform *terraform.PruneUnusedValuesTransformer
2020/07/30 11:37:22 [TRACE] Completed graph transform *terraform.PruneUnusedValuesTransformer (no changes)
2020/07/30 11:37:22 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2020/07/30 11:37:22 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:37:22 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/30 11:37:22 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/30 11:37:22 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2020/07/30 11:37:22 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
    bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:37:22 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2020/07/30 11:37:22 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer (no changes)
2020/07/30 11:37:22 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/30 11:37:22 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
  bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
    bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.bizfly (close) - *terraform.graphNodeCloseProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:37:22 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2020/07/30 11:37:22 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
    bizfly_instance.test - *terraform.NodeApplyableResourceInstance
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.bizfly (close) - *terraform.graphNodeCloseProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:37:22 [DEBUG] Starting graph walk: walkApply
2020/07/30 11:37:22 [TRACE] dag/walk: updating graph
2020/07/30 11:37:22 [TRACE] dag/walk: added new vertex: "root"
2020/07/30 11:37:22 [TRACE] dag/walk: added new vertex: "bizfly_instance.test (prepare state)"
2020/07/30 11:37:22 [TRACE] dag/walk: added new vertex: "bizfly_instance.test"
2020/07/30 11:37:22 [TRACE] dag/walk: added new vertex: "var.login"
2020/07/30 11:37:22 [TRACE] dag/walk: added new vertex: "provider.bizfly"
2020/07/30 11:37:22 [TRACE] dag/walk: added new vertex: "meta.count-boundary (EachMode fixup)"
2020/07/30 11:37:22 [TRACE] dag/walk: added new vertex: "provider.bizfly (close)"
2020/07/30 11:37:22 [TRACE] dag/walk: added edge: "bizfly_instance.test" waiting on "bizfly_instance.test (prepare state)"
2020/07/30 11:37:22 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "bizfly_instance.test"
2020/07/30 11:37:22 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "var.login"
2020/07/30 11:37:22 [TRACE] dag/walk: added edge: "bizfly_instance.test (prepare state)" waiting on "provider.bizfly"
2020/07/30 11:37:22 [TRACE] dag/walk: added edge: "provider.bizfly (close)" waiting on "bizfly_instance.test"
2020/07/30 11:37:22 [TRACE] dag/walk: added edge: "root" waiting on "provider.bizfly (close)"
2020/07/30 11:37:22 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (EachMode fixup)"
2020/07/30 11:37:22 [TRACE] dag/walk: dependencies changed for "bizfly_instance.test (prepare state)", sending new deps
2020/07/30 11:37:22 [TRACE] dag/walk: dependencies changed for "provider.bizfly (close)", sending new deps
2020/07/30 11:37:22 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2020/07/30 11:37:22 [TRACE] dag/walk: dependencies changed for "bizfly_instance.test", sending new deps
2020/07/30 11:37:22 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (EachMode fixup)", sending new deps
2020/07/30 11:37:22 [TRACE] dag/walk: visiting "var.login"
2020/07/30 11:37:22 [TRACE] vertex "var.login": starting visit (*terraform.NodeRootVariable)
2020/07/30 11:37:22 [TRACE] dag/walk: visiting "provider.bizfly"
2020/07/30 11:37:22 [TRACE] vertex "var.login": evaluating
2020/07/30 11:37:22 [TRACE] vertex "provider.bizfly": starting visit (*terraform.NodeApplyableProvider)
2020/07/30 11:37:22 [TRACE] [walkApply] Entering eval tree: var.login
2020/07/30 11:37:22 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:37:22 [TRACE] vertex "provider.bizfly": evaluating
2020/07/30 11:37:22 [TRACE] [walkApply] Exiting eval tree: var.login
2020/07/30 11:37:22 [TRACE] [walkApply] Entering eval tree: provider.bizfly
2020/07/30 11:37:22 [TRACE] vertex "var.login": visit complete
2020/07/30 11:37:22 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:37:22 [TRACE] <root>: eval: *terraform.EvalInitProvider
2020-07-30T11:37:22.910+0700 [INFO]  plugin: configuring client automatic mTLS
2020-07-30T11:37:22.938+0700 [DEBUG] plugin: starting plugin: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly args=[/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly]
2020-07-30T11:37:22.941+0700 [DEBUG] plugin: plugin started: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=57518
2020-07-30T11:37:22.941+0700 [DEBUG] plugin: waiting for RPC address: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly
2020-07-30T11:37:22.958+0700 [INFO]  plugin.terraform-provider-bizfly: configuring server automatic mTLS: timestamp=2020-07-30T11:37:22.958+0700
2020-07-30T11:37:22.984+0700 [DEBUG] plugin: using plugin: version=5
2020-07-30T11:37:22.984+0700 [DEBUG] plugin.terraform-provider-bizfly: plugin address: address=/var/folders/0r/zdwrk7wn22vd_g32twvblrpc0000gn/T/plugin604910773 network=unix timestamp=2020-07-30T11:37:22.984+0700
2020/07/30 11:37:23 [TRACE] BuiltinEvalContext: Initialized "bizfly" provider for provider.bizfly
2020/07/30 11:37:23 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:37:23 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:37:23 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/07/30 11:37:23 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:37:23 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 11:37:23 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020-07-30T11:37:23.039+0700 [TRACE] plugin.stdio: waiting for stdio data
2020/07/30 11:37:23 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:37:23 [TRACE] <root>: eval: *terraform.EvalConfigProvider
2020/07/30 11:37:23 [TRACE] buildProviderConfig for provider.bizfly: using explicit config only
2020/07/30 11:37:23 [TRACE] GRPCProvider: GetSchema
2020/07/30 11:37:23 [TRACE] GRPCProvider: Configure
2020/07/30 11:37:24 [TRACE] [walkApply] Exiting eval tree: provider.bizfly
2020/07/30 11:37:24 [TRACE] vertex "provider.bizfly": visit complete
2020/07/30 11:37:24 [TRACE] dag/walk: visiting "bizfly_instance.test (prepare state)"
2020/07/30 11:37:24 [TRACE] vertex "bizfly_instance.test (prepare state)": starting visit (*terraform.NodeApplyableResource)
2020/07/30 11:37:24 [TRACE] vertex "bizfly_instance.test (prepare state)": evaluating
2020/07/30 11:37:24 [TRACE] [walkApply] Entering eval tree: bizfly_instance.test (prepare state)
2020/07/30 11:37:24 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/07/30 11:37:24 [TRACE] [walkApply] Exiting eval tree: bizfly_instance.test (prepare state)
2020/07/30 11:37:24 [TRACE] vertex "bizfly_instance.test (prepare state)": visit complete
2020/07/30 11:37:24 [TRACE] dag/walk: visiting "bizfly_instance.test"
2020/07/30 11:37:24 [TRACE] vertex "bizfly_instance.test": starting visit (*terraform.NodeApplyableResourceInstance)
2020/07/30 11:37:24 [TRACE] vertex "bizfly_instance.test": evaluating
2020/07/30 11:37:24 [TRACE] [walkApply] Entering eval tree: bizfly_instance.test
2020/07/30 11:37:24 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:37:24 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 11:37:24 [TRACE] <root>: eval: *terraform.EvalReadDiff
2020/07/30 11:37:24 [TRACE] EvalReadDiff: Read Create change from plan for bizfly_instance.test
2020/07/30 11:37:24 [TRACE] <root>: eval: *terraform.EvalIf
2020/07/30 11:37:24 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:37:24 [TRACE] <root>: eval: *terraform.EvalIf
2020/07/30 11:37:24 [TRACE] <root>: eval: *terraform.EvalReadState
2020/07/30 11:37:24 [TRACE] EvalReadState: reading state for bizfly_instance.test
2020/07/30 11:37:24 [TRACE] EvalReadState: no state present for bizfly_instance.test
2020/07/30 11:37:24 [TRACE] <root>: eval: *terraform.EvalReadDiff
2020/07/30 11:37:24 [TRACE] EvalReadDiff: Read Create change from plan for bizfly_instance.test
2020/07/30 11:37:24 [TRACE] <root>: eval: *terraform.EvalDiff
2020/07/30 11:37:24 [TRACE] Re-validating config for "bizfly_instance.test"
2020/07/30 11:37:24 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/07/30 11:37:24 [TRACE] GRPCProvider: PlanResourceChange
2020/07/30 11:37:24 [TRACE] <root>: eval: *terraform.EvalCheckPlannedChange
2020/07/30 11:37:24 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2020/07/30 11:37:24 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 11:37:24 [TRACE] <root>: eval: *terraform.EvalReadState
2020/07/30 11:37:24 [TRACE] EvalReadState: reading state for bizfly_instance.test
2020/07/30 11:37:24 [TRACE] EvalReadState: no state present for bizfly_instance.test
2020/07/30 11:37:24 [TRACE] <root>: eval: *terraform.EvalReduceDiff
2020/07/30 11:37:24 [TRACE] <root>: eval: *terraform.EvalIf
2020/07/30 11:37:24 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:37:24 [TRACE] <root>: eval: *terraform.EvalApplyPre
2020/07/30 11:37:24 [TRACE] <root>: eval: *terraform.EvalApply
2020/07/30 11:37:24 [DEBUG] bizfly_instance.test: applying the planned Create change
2020/07/30 11:37:24 [TRACE] GRPCProvider: ApplyResourceChange
2020-07-30T11:37:24.296+0700 [DEBUG] plugin.terraform-provider-bizfly: 2020/07/30 11:37:24 --------------------------
2020-07-30T11:37:24.296+0700 [DEBUG] plugin.terraform-provider-bizfly: 2020/07/30 11:37:24 map[string]interface {}
2020-07-30T11:37:24.299+0700 [DEBUG] plugin.terraform-provider-bizfly: panic: interface conversion: interface {} is nil, not string
2020-07-30T11:37:24.299+0700 [DEBUG] plugin.terraform-provider-bizfly: 
2020-07-30T11:37:24.299+0700 [DEBUG] plugin.terraform-provider-bizfly: goroutine 38 [running]:
2020-07-30T11:37:24.299+0700 [DEBUG] plugin.terraform-provider-bizfly: terraform-provider-bizfly/provider.resouceInstanceCreate(0xc0001a09a0, 0x1aebd40, 0xc000666780, 0x0, 0x0)
2020-07-30T11:37:24.299+0700 [DEBUG] plugin.terraform-provider-bizfly: 	/Users/hung/go/src/terraform-provider-bizfly/provider/resource_instance.go:163 +0x83f
2020-07-30T11:37:24.299+0700 [DEBUG] plugin.terraform-provider-bizfly: github.com/hashicorp/terraform-plugin-sdk/helper/schema.(*Resource).Apply(0xc000436360, 0xc00065ccd0, 0xc000791740, 0x1aebd40, 0xc000666780, 0x1a9ee01, 0xc000161cf8, 0xc0003560f0)
2020-07-30T11:37:24.299+0700 [DEBUG] plugin.terraform-provider-bizfly: 	/Users/hung/go/pkg/mod/github.com/hashicorp/terraform-plugin-sdk@v1.15.0/helper/schema/resource.go:310 +0x365
2020-07-30T11:37:24.299+0700 [DEBUG] plugin.terraform-provider-bizfly: github.com/hashicorp/terraform-plugin-sdk/helper/schema.(*Provider).Apply(0xc00017e980, 0xc00035fa10, 0xc00065ccd0, 0xc000791740, 0xc000354f28, 0xc0000a6198, 0x1aa0a60)
2020-07-30T11:37:24.299+0700 [DEBUG] plugin.terraform-provider-bizfly: 	/Users/hung/go/pkg/mod/github.com/hashicorp/terraform-plugin-sdk@v1.15.0/helper/schema/provider.go:294 +0x99
2020-07-30T11:37:24.299+0700 [DEBUG] plugin.terraform-provider-bizfly: github.com/hashicorp/terraform-plugin-sdk/internal/helper/plugin.(*GRPCProviderServer).ApplyResourceChange(0xc000010c20, 0x1e83fa0, 0xc000750210, 0xc0001a00e0, 0xc000010c20, 0xc000750210, 0xc000567b78)
2020-07-30T11:37:24.299+0700 [DEBUG] plugin.terraform-provider-bizfly: 	/Users/hung/go/pkg/mod/github.com/hashicorp/terraform-plugin-sdk@v1.15.0/internal/helper/plugin/grpc_provider.go:885 +0x8b4
2020-07-30T11:37:24.299+0700 [DEBUG] plugin.terraform-provider-bizfly: github.com/hashicorp/terraform-plugin-sdk/internal/tfplugin5._Provider_ApplyResourceChange_Handler(0x1bb19e0, 0xc000010c20, 0x1e83fa0, 0xc000750210, 0xc00007ef00, 0x0, 0x1e83fa0, 0xc000750210, 0xc0003501e0, 0x1ce)
2020-07-30T11:37:24.299+0700 [DEBUG] plugin.terraform-provider-bizfly: 	/Users/hung/go/pkg/mod/github.com/hashicorp/terraform-plugin-sdk@v1.15.0/internal/tfplugin5/tfplugin5.pb.go:3305 +0x217
2020-07-30T11:37:24.300+0700 [DEBUG] plugin.terraform-provider-bizfly: google.golang.org/grpc.(*Server).processUnaryRPC(0xc000782300, 0x1e8e840, 0xc000782c00, 0xc00019e200, 0xc000362360, 0x2595940, 0x0, 0x0, 0x0)
2020-07-30T11:37:24.300+0700 [DEBUG] plugin.terraform-provider-bizfly: 	/Users/hung/go/pkg/mod/google.golang.org/grpc@v1.27.1/server.go:1024 +0x501
2020-07-30T11:37:24.300+0700 [DEBUG] plugin.terraform-provider-bizfly: google.golang.org/grpc.(*Server).handleStream(0xc000782300, 0x1e8e840, 0xc000782c00, 0xc00019e200, 0x0)
2020-07-30T11:37:24.300+0700 [DEBUG] plugin.terraform-provider-bizfly: 	/Users/hung/go/pkg/mod/google.golang.org/grpc@v1.27.1/server.go:1313 +0xd3d
2020-07-30T11:37:24.300+0700 [DEBUG] plugin.terraform-provider-bizfly: google.golang.org/grpc.(*Server).serveStreams.func1.1(0xc000038500, 0xc000782300, 0x1e8e840, 0xc000782c00, 0xc00019e200)
2020-07-30T11:37:24.300+0700 [DEBUG] plugin.terraform-provider-bizfly: 	/Users/hung/go/pkg/mod/google.golang.org/grpc@v1.27.1/server.go:722 +0xa1
2020-07-30T11:37:24.300+0700 [DEBUG] plugin.terraform-provider-bizfly: created by google.golang.org/grpc.(*Server).serveStreams.func1
2020-07-30T11:37:24.300+0700 [DEBUG] plugin.terraform-provider-bizfly: 	/Users/hung/go/pkg/mod/google.golang.org/grpc@v1.27.1/server.go:720 +0xa1
2020-07-30T11:37:24.305+0700 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2020/07/30 11:37:24 [DEBUG] bizfly_instance.test: apply errored, but we're indicating that via the Error pointer rather than returning it: rpc error: code = Unavailable desc = transport is closing
2020/07/30 11:37:24 [TRACE] <root>: eval: *terraform.EvalMaybeTainted
2020/07/30 11:37:24 [TRACE] EvalMaybeTainted: bizfly_instance.test encountered an error during creation, so it is now marked as tainted
2020/07/30 11:37:24 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/07/30 11:37:24 [TRACE] EvalWriteState: removing state object for bizfly_instance.test
2020/07/30 11:37:24 [TRACE] <root>: eval: *terraform.EvalApplyProvisioners
2020/07/30 11:37:24 [TRACE] EvalApplyProvisioners: bizfly_instance.test has no state, so skipping provisioners
2020/07/30 11:37:24 [TRACE] <root>: eval: *terraform.EvalMaybeTainted
2020/07/30 11:37:24 [TRACE] EvalMaybeTainted: bizfly_instance.test encountered an error during creation, so it is now marked as tainted
2020/07/30 11:37:24 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/07/30 11:37:24 [TRACE] EvalWriteState: removing state object for bizfly_instance.test
2020/07/30 11:37:24 [TRACE] <root>: eval: *terraform.EvalIf
2020/07/30 11:37:24 [TRACE] <root>: eval: *terraform.EvalIf
2020/07/30 11:37:24 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/07/30 11:37:24 [TRACE] <root>: eval: *terraform.EvalApplyPost
2020/07/30 11:37:24 [ERROR] <root>: eval: *terraform.EvalApplyPost, err: rpc error: code = Unavailable desc = transport is closing
2020-07-30T11:37:24.305+0700 [DEBUG] plugin: plugin process exited: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=57518 error="exit status 2"
2020/07/30 11:37:24 [ERROR] <root>: eval: *terraform.EvalSequence, err: rpc error: code = Unavailable desc = transport is closing
2020/07/30 11:37:24 [TRACE] [walkApply] Exiting eval tree: bizfly_instance.test
2020/07/30 11:37:24 [TRACE] vertex "bizfly_instance.test": visit complete
2020/07/30 11:37:24 [TRACE] dag/walk: upstream of "provider.bizfly (close)" errored, so skipping
2020/07/30 11:37:24 [TRACE] dag/walk: upstream of "meta.count-boundary (EachMode fixup)" errored, so skipping
2020/07/30 11:37:24 [TRACE] dag/walk: upstream of "root" errored, so skipping
2020/07/30 11:37:24 [TRACE] statemgr.Filesystem: not making a backup, because the new snapshot is identical to the old
2020/07/30 11:37:24 [TRACE] statemgr.Filesystem: no state changes since last snapshot
2020/07/30 11:37:24 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2020/07/30 11:37:24 [TRACE] statemgr.Filesystem: removing lock metadata file .terraform.tfstate.lock.info
2020/07/30 11:37:24 [TRACE] statemgr.Filesystem: unlocking terraform.tfstate using fcntl flock
2020-07-30T11:37:24.313+0700 [DEBUG] plugin: plugin exited
2020/07/30 11:42:02 [INFO] Terraform version: 0.12.29  
2020/07/30 11:42:02 [INFO] Go runtime version: go1.13.14
2020/07/30 11:42:02 [INFO] CLI args: []string{"/usr/local/bin/terraform", "init"}
2020/07/30 11:42:02 [DEBUG] Attempting to open CLI config file: /Users/hung/.terraformrc
2020/07/30 11:42:02 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2020/07/30 11:42:02 [INFO] CLI command args: []string{"init"}
2020/07/30 11:42:02 [TRACE] Meta.Backend: no config given or present on disk, so returning nil config
2020/07/30 11:42:02 [TRACE] Meta.Backend: backend has not previously been initialized in this working directory
2020/07/30 11:42:02 [DEBUG] New state was assigned lineage "f8573d49-7ccb-1800-598b-f486423850ed"
2020/07/30 11:42:02 [TRACE] Meta.Backend: using default local state only (no backend configuration, and no existing initialized backend)
2020/07/30 11:42:02 [TRACE] Meta.Backend: instantiated backend of type <nil>
2020/07/30 11:42:02 [DEBUG] checking for provider in "."
2020/07/30 11:42:02 [WARN] found legacy provider "terraform-provider-bizfly"
2020/07/30 11:42:02 [DEBUG] checking for provider in "/usr/local/bin"
2020/07/30 11:42:02 [DEBUG] checking for provider in ".terraform/plugins/darwin_amd64"
2020/07/30 11:42:02 [DEBUG] found valid plugin: "bizfly", "0.0.0", "/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly"
2020/07/30 11:42:02 [DEBUG] checking for provisioner in "."
2020/07/30 11:42:02 [DEBUG] checking for provisioner in "/usr/local/bin"
2020/07/30 11:42:02 [DEBUG] checking for provisioner in ".terraform/plugins/darwin_amd64"
2020/07/30 11:42:02 [TRACE] Meta.Backend: backend <nil> does not support operations, so wrapping it in a local backend
2020/07/30 11:42:02 [TRACE] backend/local: state manager for workspace "default" will:
 - read initial snapshot from terraform.tfstate
 - write new snapshots to terraform.tfstate
 - create any backup at terraform.tfstate.backup
2020/07/30 11:42:02 [TRACE] statemgr.Filesystem: reading initial snapshot from terraform.tfstate
2020/07/30 11:42:02 [TRACE] statemgr.Filesystem: read snapshot with lineage "8e1934d5-1d8f-e9a8-58e8-6c54c3aa209a" serial 1
2020/07/30 11:42:02 [DEBUG] checking for provider in "."
2020/07/30 11:42:02 [WARN] found legacy provider "terraform-provider-bizfly"
2020/07/30 11:42:02 [DEBUG] checking for provider in "/usr/local/bin"
2020/07/30 11:42:02 [DEBUG] checking for provider in ".terraform/plugins/darwin_amd64"
2020/07/30 11:42:02 [DEBUG] found valid plugin: "bizfly", "0.0.0", "/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly"
2020/07/30 11:42:02 [DEBUG] plugin requirements: "bizfly"=""
2020/07/30 11:42:02 [DEBUG] checking for provider in "."
2020/07/30 11:42:02 [WARN] found legacy provider "terraform-provider-bizfly"
2020/07/30 11:42:02 [DEBUG] checking for provider in "/usr/local/bin"
2020/07/30 11:42:02 [DEBUG] checking for provider in ".terraform/plugins/darwin_amd64"
2020/07/30 11:42:02 [DEBUG] found valid plugin: "bizfly", "0.0.0", "/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly"
2020/07/30 11:42:02 [DEBUG] checking for provider in ".terraform/plugins/darwin_amd64"
2020/07/30 11:42:08 [INFO] Terraform version: 0.12.29  
2020/07/30 11:42:08 [INFO] Go runtime version: go1.13.14
2020/07/30 11:42:08 [INFO] CLI args: []string{"/usr/local/bin/terraform", "plan"}
2020/07/30 11:42:08 [DEBUG] Attempting to open CLI config file: /Users/hung/.terraformrc
2020/07/30 11:42:08 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2020/07/30 11:42:08 [INFO] CLI command args: []string{"plan"}
2020/07/30 11:42:08 [TRACE] Meta.Backend: no config given or present on disk, so returning nil config
2020/07/30 11:42:08 [TRACE] Meta.Backend: backend has not previously been initialized in this working directory
2020/07/30 11:42:08 [DEBUG] New state was assigned lineage "2dd0aec2-17b3-eeb3-08fa-63ee251b26c7"
2020/07/30 11:42:08 [TRACE] Meta.Backend: using default local state only (no backend configuration, and no existing initialized backend)
2020/07/30 11:42:08 [TRACE] Meta.Backend: instantiated backend of type <nil>
2020/07/30 11:42:08 [DEBUG] checking for provider in "."
2020/07/30 11:42:08 [WARN] found legacy provider "terraform-provider-bizfly"
2020/07/30 11:42:08 [DEBUG] checking for provider in "/usr/local/bin"
2020/07/30 11:42:08 [DEBUG] checking for provider in ".terraform/plugins/darwin_amd64"
2020/07/30 11:42:08 [DEBUG] found valid plugin: "bizfly", "0.0.0", "/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly"
2020/07/30 11:42:08 [DEBUG] checking for provisioner in "."
2020/07/30 11:42:08 [DEBUG] checking for provisioner in "/usr/local/bin"
2020/07/30 11:42:08 [DEBUG] checking for provisioner in ".terraform/plugins/darwin_amd64"
2020/07/30 11:42:08 [TRACE] Meta.Backend: backend <nil> does not support operations, so wrapping it in a local backend
2020/07/30 11:42:08 [INFO] backend/local: starting Plan operation
2020/07/30 11:42:08 [TRACE] backend/local: requesting state manager for workspace "default"
2020/07/30 11:42:08 [TRACE] backend/local: state manager for workspace "default" will:
 - read initial snapshot from terraform.tfstate
 - write new snapshots to terraform.tfstate
 - create any backup at terraform.tfstate.backup
2020/07/30 11:42:08 [TRACE] backend/local: requesting state lock for workspace "default"
2020/07/30 11:42:08 [TRACE] statemgr.Filesystem: preparing to manage state snapshots at terraform.tfstate
2020/07/30 11:42:08 [TRACE] statemgr.Filesystem: existing snapshot has lineage "8e1934d5-1d8f-e9a8-58e8-6c54c3aa209a" serial 1
2020/07/30 11:42:08 [TRACE] statemgr.Filesystem: locking terraform.tfstate using fcntl flock
2020/07/30 11:42:08 [TRACE] statemgr.Filesystem: writing lock metadata to .terraform.tfstate.lock.info
2020/07/30 11:42:08 [TRACE] backend/local: reading remote state for workspace "default"
2020/07/30 11:42:08 [TRACE] statemgr.Filesystem: reading latest snapshot from terraform.tfstate
2020/07/30 11:42:08 [TRACE] statemgr.Filesystem: read snapshot with lineage "8e1934d5-1d8f-e9a8-58e8-6c54c3aa209a" serial 1
2020/07/30 11:42:08 [TRACE] backend/local: retrieving local state snapshot for workspace "default"
2020/07/30 11:42:08 [TRACE] backend/local: building context for current working directory
2020/07/30 11:42:08 [TRACE] terraform.NewContext: starting
2020/07/30 11:42:08 [TRACE] terraform.NewContext: resolving provider version selections
2020/07/30 11:42:08 [TRACE] terraform.NewContext: loading provider schemas
2020/07/30 11:42:08 [TRACE] LoadSchemas: retrieving schema for provider type "bizfly"
2020-07-30T11:42:08.599+0700 [INFO]  plugin: configuring client automatic mTLS
2020-07-30T11:42:08.637+0700 [DEBUG] plugin: starting plugin: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly args=[/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly]
2020-07-30T11:42:08.641+0700 [DEBUG] plugin: plugin started: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=57785
2020-07-30T11:42:08.641+0700 [DEBUG] plugin: waiting for RPC address: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly
2020-07-30T11:42:08.661+0700 [INFO]  plugin.terraform-provider-bizfly: configuring server automatic mTLS: timestamp=2020-07-30T11:42:08.661+0700
2020-07-30T11:42:08.688+0700 [DEBUG] plugin: using plugin: version=5
2020-07-30T11:42:08.688+0700 [DEBUG] plugin.terraform-provider-bizfly: plugin address: address=/var/folders/0r/zdwrk7wn22vd_g32twvblrpc0000gn/T/plugin983488252 network=unix timestamp=2020-07-30T11:42:08.688+0700
2020/07/30 11:42:08 [TRACE] GRPCProvider: GetSchema
2020-07-30T11:42:08.747+0700 [TRACE] plugin.stdio: waiting for stdio data
2020/07/30 11:42:08 [TRACE] GRPCProvider: Close
2020-07-30T11:42:08.752+0700 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2020-07-30T11:42:08.754+0700 [DEBUG] plugin: plugin process exited: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=57785
2020-07-30T11:42:08.754+0700 [DEBUG] plugin: plugin exited
2020/07/30 11:42:08 [TRACE] terraform.NewContext: complete
2020/07/30 11:42:08 [TRACE] backend/local: finished building terraform.Context
2020/07/30 11:42:08 [TRACE] backend/local: requesting interactive input, if necessary
2020/07/30 11:42:08 [TRACE] Context.Input: Prompting for provider arguments
2020/07/30 11:42:08 [TRACE] Context.Input: Provider provider.bizfly declared at main.tf:1,1-18
2020/07/30 11:42:08 [TRACE] Context.Input: Input for provider.bizfly: map[string]cty.Value{}
2020/07/30 11:42:08 [TRACE] backend/local: running validation operation
2020/07/30 11:42:08 [INFO] terraform: building graph: GraphTypeValidate
2020/07/30 11:42:08 [TRACE] Executing graph transform *terraform.ConfigTransformer
2020/07/30 11:42:08 [TRACE] ConfigTransformer: Starting for path: 
2020/07/30 11:42:08 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
  ------
2020/07/30 11:42:08 [TRACE] Executing graph transform *terraform.LocalTransformer
2020/07/30 11:42:08 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2020/07/30 11:42:08 [TRACE] Executing graph transform *terraform.OutputTransformer
2020/07/30 11:42:08 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2020/07/30 11:42:08 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2020/07/30 11:42:08 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2020/07/30 11:42:08 [TRACE] Executing graph transform *terraform.StateTransformer
2020/07/30 11:42:08 [TRACE] StateTransformer: state is empty, so nothing to do
2020/07/30 11:42:08 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2020/07/30 11:42:08 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2020/07/30 11:42:08 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2020/07/30 11:42:08 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2020/07/30 11:42:08 [TRACE] AttachResourceConfigTransformer: attaching to "bizfly_instance.test" (*terraform.NodeValidatableResource) config from main.tf:7,1-34
2020/07/30 11:42:08 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2020/07/30 11:42:08 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/30 11:42:08 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/30 11:42:08 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2020/07/30 11:42:08 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:42:08 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2020/07/30 11:42:08 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2020/07/30 11:42:08 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2020/07/30 11:42:08 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2020/07/30 11:42:08 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2020/07/30 11:42:08 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2020/07/30 11:42:08 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2020/07/30 11:42:08 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2020/07/30 11:42:08 [TRACE] ProviderConfigTransformer: attaching to "provider.bizfly" provider configuration from main.tf:1,1-18
2020/07/30 11:42:08 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:42:08 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2020/07/30 11:42:08 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2020/07/30 11:42:08 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2020/07/30 11:42:08 [TRACE] ProviderTransformer: bizfly_instance.test is provided by provider.bizfly or inherited equivalent
2020/07/30 11:42:08 [TRACE] ProviderTransformer: exact match for provider.bizfly serving bizfly_instance.test
2020/07/30 11:42:08 [DEBUG] ProviderTransformer: "bizfly_instance.test" (*terraform.NodeValidatableResource) needs provider.bizfly
2020/07/30 11:42:08 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:42:08 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2020/07/30 11:42:08 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2020/07/30 11:42:08 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2020/07/30 11:42:08 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2020/07/30 11:42:08 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:42:08 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2020/07/30 11:42:08 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2020/07/30 11:42:08 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2020/07/30 11:42:08 [TRACE] AttachSchemaTransformer: attaching resource schema to bizfly_instance.test
2020/07/30 11:42:08 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.bizfly
2020/07/30 11:42:08 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2020/07/30 11:42:08 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/30 11:42:08 [DEBUG] ReferenceTransformer: "bizfly_instance.test" references: []
2020/07/30 11:42:08 [DEBUG] ReferenceTransformer: "var.login" references: []
2020/07/30 11:42:08 [DEBUG] ReferenceTransformer: "provider.bizfly" references: []
2020/07/30 11:42:08 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/30 11:42:08 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2020/07/30 11:42:08 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:42:08 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/30 11:42:08 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/30 11:42:08 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2020/07/30 11:42:08 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2020/07/30 11:42:08 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2020/07/30 11:42:08 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
    bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:42:08 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2020/07/30 11:42:08 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer (no changes)
2020/07/30 11:42:08 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/30 11:42:08 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
    bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.bizfly (close) - *terraform.graphNodeCloseProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:42:08 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2020/07/30 11:42:08 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodeValidatableResource
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
    bizfly_instance.test - *terraform.NodeValidatableResource
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.bizfly (close) - *terraform.graphNodeCloseProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:42:08 [DEBUG] Starting graph walk: walkValidate
2020/07/30 11:42:08 [TRACE] dag/walk: updating graph
2020/07/30 11:42:08 [TRACE] dag/walk: added new vertex: "meta.count-boundary (EachMode fixup)"
2020/07/30 11:42:08 [TRACE] dag/walk: added new vertex: "provider.bizfly (close)"
2020/07/30 11:42:08 [TRACE] dag/walk: added new vertex: "root"
2020/07/30 11:42:08 [TRACE] dag/walk: added new vertex: "bizfly_instance.test"
2020/07/30 11:42:08 [TRACE] dag/walk: added new vertex: "var.login"
2020/07/30 11:42:08 [TRACE] dag/walk: added new vertex: "provider.bizfly"
2020/07/30 11:42:08 [TRACE] dag/walk: added edge: "root" waiting on "provider.bizfly (close)"
2020/07/30 11:42:08 [TRACE] dag/walk: added edge: "bizfly_instance.test" waiting on "provider.bizfly"
2020/07/30 11:42:08 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "bizfly_instance.test"
2020/07/30 11:42:08 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "var.login"
2020/07/30 11:42:08 [TRACE] dag/walk: added edge: "provider.bizfly (close)" waiting on "bizfly_instance.test"
2020/07/30 11:42:08 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (EachMode fixup)"
2020/07/30 11:42:08 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2020/07/30 11:42:08 [TRACE] dag/walk: dependencies changed for "bizfly_instance.test", sending new deps
2020/07/30 11:42:08 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (EachMode fixup)", sending new deps
2020/07/30 11:42:08 [TRACE] dag/walk: dependencies changed for "provider.bizfly (close)", sending new deps
2020/07/30 11:42:08 [TRACE] dag/walk: visiting "var.login"
2020/07/30 11:42:08 [TRACE] vertex "var.login": starting visit (*terraform.NodeRootVariable)
2020/07/30 11:42:08 [TRACE] vertex "var.login": evaluating
2020/07/30 11:42:08 [TRACE] [walkValidate] Entering eval tree: var.login
2020/07/30 11:42:08 [TRACE] dag/walk: visiting "provider.bizfly"
2020/07/30 11:42:08 [TRACE] vertex "provider.bizfly": starting visit (*terraform.NodeApplyableProvider)
2020/07/30 11:42:08 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:42:08 [TRACE] [walkValidate] Exiting eval tree: var.login
2020/07/30 11:42:08 [TRACE] vertex "var.login": visit complete
2020/07/30 11:42:08 [TRACE] vertex "provider.bizfly": evaluating
2020/07/30 11:42:08 [TRACE] [walkValidate] Entering eval tree: provider.bizfly
2020/07/30 11:42:08 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:42:08 [TRACE] <root>: eval: *terraform.EvalInitProvider
2020-07-30T11:42:08.760+0700 [INFO]  plugin: configuring client automatic mTLS
2020-07-30T11:42:08.784+0700 [DEBUG] plugin: starting plugin: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly args=[/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly]
2020-07-30T11:42:08.788+0700 [DEBUG] plugin: plugin started: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=57786
2020-07-30T11:42:08.788+0700 [DEBUG] plugin: waiting for RPC address: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly
2020-07-30T11:42:08.806+0700 [INFO]  plugin.terraform-provider-bizfly: configuring server automatic mTLS: timestamp=2020-07-30T11:42:08.806+0700
2020-07-30T11:42:08.833+0700 [DEBUG] plugin.terraform-provider-bizfly: plugin address: address=/var/folders/0r/zdwrk7wn22vd_g32twvblrpc0000gn/T/plugin882781857 network=unix timestamp=2020-07-30T11:42:08.832+0700
2020-07-30T11:42:08.833+0700 [DEBUG] plugin: using plugin: version=5
2020/07/30 11:42:08 [TRACE] BuiltinEvalContext: Initialized "bizfly" provider for provider.bizfly
2020/07/30 11:42:08 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:42:08 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/07/30 11:42:08 [TRACE] <root>: eval: *terraform.EvalSequence
2020-07-30T11:42:08.886+0700 [TRACE] plugin.stdio: waiting for stdio data
2020/07/30 11:42:08 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 11:42:08 [TRACE] <root>: eval: *terraform.EvalValidateProvider
2020/07/30 11:42:08 [TRACE] buildProviderConfig for provider.bizfly: using explicit config only
2020/07/30 11:42:08 [TRACE] GRPCProvider: GetSchema
2020/07/30 11:42:08 [TRACE] GRPCProvider: PrepareProviderConfig
2020/07/30 11:42:08 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:42:08 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:42:08 [TRACE] [walkValidate] Exiting eval tree: provider.bizfly
2020/07/30 11:42:08 [TRACE] vertex "provider.bizfly": visit complete
2020/07/30 11:42:08 [TRACE] dag/walk: visiting "bizfly_instance.test"
2020/07/30 11:42:08 [TRACE] vertex "bizfly_instance.test": starting visit (*terraform.NodeValidatableResource)
2020/07/30 11:42:08 [TRACE] vertex "bizfly_instance.test": evaluating
2020/07/30 11:42:08 [TRACE] [walkValidate] Entering eval tree: bizfly_instance.test
2020/07/30 11:42:08 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:42:08 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 11:42:08 [TRACE] <root>: eval: *terraform.EvalValidateResource
2020/07/30 11:42:08 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/07/30 11:42:08 [TRACE] [walkValidate] Exiting eval tree: bizfly_instance.test
2020/07/30 11:42:08 [TRACE] vertex "bizfly_instance.test": visit complete
2020/07/30 11:42:08 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2020/07/30 11:42:08 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2020/07/30 11:42:08 [TRACE] vertex "meta.count-boundary (EachMode fixup)": evaluating
2020/07/30 11:42:08 [TRACE] [walkValidate] Entering eval tree: meta.count-boundary (EachMode fixup)
2020/07/30 11:42:08 [TRACE] dag/walk: visiting "provider.bizfly (close)"
2020/07/30 11:42:08 [TRACE] <root>: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2020/07/30 11:42:08 [TRACE] vertex "provider.bizfly (close)": starting visit (*terraform.graphNodeCloseProvider)
2020/07/30 11:42:08 [TRACE] vertex "provider.bizfly (close)": evaluating
2020/07/30 11:42:08 [TRACE] [walkValidate] Exiting eval tree: meta.count-boundary (EachMode fixup)
2020/07/30 11:42:08 [TRACE] [walkValidate] Entering eval tree: provider.bizfly (close)
2020/07/30 11:42:08 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2020/07/30 11:42:08 [TRACE] <root>: eval: *terraform.EvalCloseProvider
2020/07/30 11:42:08 [TRACE] GRPCProvider: Close
2020-07-30T11:42:08.892+0700 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2020-07-30T11:42:08.894+0700 [DEBUG] plugin: plugin process exited: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=57786
2020-07-30T11:42:08.894+0700 [DEBUG] plugin: plugin exited
2020/07/30 11:42:08 [TRACE] [walkValidate] Exiting eval tree: provider.bizfly (close)
2020/07/30 11:42:08 [TRACE] vertex "provider.bizfly (close)": visit complete
2020/07/30 11:42:08 [TRACE] dag/walk: visiting "root"
2020/07/30 11:42:08 [TRACE] vertex "root": starting visit (terraform.graphNodeRoot)
2020/07/30 11:42:08 [TRACE] vertex "root": visit complete
2020/07/30 11:42:08 [INFO] backend/local: plan calling Refresh
2020/07/30 11:42:08 [INFO] terraform: building graph: GraphTypeRefresh
2020/07/30 11:42:08 [TRACE] No managed resources in state during refresh; skipping managed resource transformer
2020/07/30 11:42:08 [TRACE] Executing graph transform *terraform.ConfigTransformer
2020/07/30 11:42:08 [TRACE] ConfigTransformer: Starting for path: 
2020/07/30 11:42:08 [TRACE] Completed graph transform *terraform.ConfigTransformer (no changes)
2020/07/30 11:42:08 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2020/07/30 11:42:08 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2020/07/30 11:42:08 [TRACE] Executing graph transform *terraform.StateTransformer
2020/07/30 11:42:08 [TRACE] StateTransformer: state is empty, so nothing to do
2020/07/30 11:42:08 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2020/07/30 11:42:08 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/30 11:42:08 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/30 11:42:08 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2020/07/30 11:42:08 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2020/07/30 11:42:08 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2020/07/30 11:42:08 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:42:08 [TRACE] Executing graph transform *terraform.LocalTransformer
2020/07/30 11:42:08 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2020/07/30 11:42:08 [TRACE] Executing graph transform *terraform.OutputTransformer
2020/07/30 11:42:08 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2020/07/30 11:42:08 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2020/07/30 11:42:08 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2020/07/30 11:42:08 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2020/07/30 11:42:08 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2020/07/30 11:42:08 [TRACE] ProviderConfigTransformer: attaching to "provider.bizfly" provider configuration from main.tf:1,1-18
2020/07/30 11:42:08 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:42:08 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2020/07/30 11:42:08 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2020/07/30 11:42:08 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2020/07/30 11:42:08 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer (no changes)
2020/07/30 11:42:08 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2020/07/30 11:42:08 [DEBUG] pruning unused provider.bizfly
2020/07/30 11:42:08 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer with new graph:
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:42:08 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2020/07/30 11:42:08 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2020/07/30 11:42:08 [TRACE] Completed graph transform *terraform.graphTransformerMulti (no changes)
2020/07/30 11:42:08 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2020/07/30 11:42:08 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2020/07/30 11:42:08 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/30 11:42:08 [DEBUG] ReferenceTransformer: "var.login" references: []
2020/07/30 11:42:08 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/30 11:42:08 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2020/07/30 11:42:08 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2020/07/30 11:42:08 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/30 11:42:08 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/30 11:42:08 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2020/07/30 11:42:08 [TRACE] Completed graph transform *terraform.CloseProviderTransformer (no changes)
2020/07/30 11:42:08 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/30 11:42:08 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/07/30 11:42:08 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2020/07/30 11:42:08 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer (no changes)
2020/07/30 11:42:08 [DEBUG] Starting graph walk: walkRefresh
2020/07/30 11:42:08 [TRACE] dag/walk: updating graph
2020/07/30 11:42:08 [TRACE] dag/walk: added new vertex: "var.login"
2020/07/30 11:42:08 [TRACE] dag/walk: visiting "var.login"
2020/07/30 11:42:08 [TRACE] vertex "var.login": starting visit (*terraform.NodeRootVariable)
2020/07/30 11:42:08 [TRACE] vertex "var.login": evaluating
2020/07/30 11:42:08 [TRACE] [walkRefresh] Entering eval tree: var.login
2020/07/30 11:42:08 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:42:08 [TRACE] [walkRefresh] Exiting eval tree: var.login
2020/07/30 11:42:08 [TRACE] vertex "var.login": visit complete
2020/07/30 11:42:08 [INFO] backend/local: plan calling Plan
2020/07/30 11:42:08 [INFO] terraform: building graph: GraphTypePlan
2020/07/30 11:42:08 [TRACE] Executing graph transform *terraform.ConfigTransformer
2020/07/30 11:42:08 [TRACE] ConfigTransformer: Starting for path: 
2020/07/30 11:42:08 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
  ------
2020/07/30 11:42:08 [TRACE] Executing graph transform *terraform.LocalTransformer
2020/07/30 11:42:08 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2020/07/30 11:42:08 [TRACE] Executing graph transform *terraform.OutputTransformer
2020/07/30 11:42:08 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2020/07/30 11:42:08 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2020/07/30 11:42:08 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2020/07/30 11:42:08 [TRACE] Executing graph transform *terraform.StateTransformer
2020/07/30 11:42:08 [TRACE] StateTransformer: state is empty, so nothing to do
2020/07/30 11:42:08 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2020/07/30 11:42:08 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2020/07/30 11:42:08 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2020/07/30 11:42:08 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2020/07/30 11:42:08 [TRACE] AttachResourceConfigTransformer: attaching to "bizfly_instance.test" (*terraform.NodePlannableResource) config from main.tf:7,1-34
2020/07/30 11:42:08 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2020/07/30 11:42:08 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/30 11:42:08 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/30 11:42:08 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2020/07/30 11:42:08 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:42:08 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2020/07/30 11:42:08 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2020/07/30 11:42:08 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2020/07/30 11:42:08 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2020/07/30 11:42:08 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2020/07/30 11:42:08 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2020/07/30 11:42:08 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2020/07/30 11:42:08 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2020/07/30 11:42:08 [TRACE] ProviderConfigTransformer: attaching to "provider.bizfly" provider configuration from main.tf:1,1-18
2020/07/30 11:42:08 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:42:08 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2020/07/30 11:42:08 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2020/07/30 11:42:08 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2020/07/30 11:42:08 [TRACE] ProviderTransformer: bizfly_instance.test is provided by provider.bizfly or inherited equivalent
2020/07/30 11:42:08 [TRACE] ProviderTransformer: exact match for provider.bizfly serving bizfly_instance.test
2020/07/30 11:42:08 [DEBUG] ProviderTransformer: "bizfly_instance.test" (*terraform.NodePlannableResource) needs provider.bizfly
2020/07/30 11:42:08 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:42:08 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2020/07/30 11:42:08 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2020/07/30 11:42:08 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2020/07/30 11:42:08 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2020/07/30 11:42:08 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:42:08 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2020/07/30 11:42:08 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2020/07/30 11:42:08 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2020/07/30 11:42:08 [TRACE] AttachSchemaTransformer: attaching resource schema to bizfly_instance.test
2020/07/30 11:42:08 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.bizfly
2020/07/30 11:42:08 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2020/07/30 11:42:08 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/30 11:42:08 [DEBUG] ReferenceTransformer: "bizfly_instance.test" references: []
2020/07/30 11:42:08 [DEBUG] ReferenceTransformer: "var.login" references: []
2020/07/30 11:42:08 [DEBUG] ReferenceTransformer: "provider.bizfly" references: []
2020/07/30 11:42:08 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/30 11:42:08 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2020/07/30 11:42:08 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:42:08 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/30 11:42:08 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/30 11:42:08 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2020/07/30 11:42:08 [TRACE] ForcedCBDTransformer: "bizfly_instance.test" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2020/07/30 11:42:08 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2020/07/30 11:42:08 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2020/07/30 11:42:08 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
    bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:42:08 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2020/07/30 11:42:08 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer (no changes)
2020/07/30 11:42:08 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/30 11:42:08 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
    bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.bizfly (close) - *terraform.graphNodeCloseProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:42:08 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2020/07/30 11:42:08 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodePlannableResource
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
    bizfly_instance.test - *terraform.NodePlannableResource
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.bizfly (close) - *terraform.graphNodeCloseProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:42:08 [DEBUG] Starting graph walk: walkPlan
2020/07/30 11:42:08 [TRACE] dag/walk: updating graph
2020/07/30 11:42:08 [TRACE] dag/walk: added new vertex: "provider.bizfly"
2020/07/30 11:42:08 [TRACE] dag/walk: added new vertex: "meta.count-boundary (EachMode fixup)"
2020/07/30 11:42:08 [TRACE] dag/walk: added new vertex: "provider.bizfly (close)"
2020/07/30 11:42:08 [TRACE] dag/walk: added new vertex: "root"
2020/07/30 11:42:08 [TRACE] dag/walk: added new vertex: "bizfly_instance.test"
2020/07/30 11:42:08 [TRACE] dag/walk: added new vertex: "var.login"
2020/07/30 11:42:08 [TRACE] dag/walk: added edge: "provider.bizfly (close)" waiting on "bizfly_instance.test"
2020/07/30 11:42:08 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (EachMode fixup)"
2020/07/30 11:42:08 [TRACE] dag/walk: added edge: "root" waiting on "provider.bizfly (close)"
2020/07/30 11:42:08 [TRACE] dag/walk: added edge: "bizfly_instance.test" waiting on "provider.bizfly"
2020/07/30 11:42:08 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "bizfly_instance.test"
2020/07/30 11:42:08 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "var.login"
2020/07/30 11:42:08 [TRACE] dag/walk: dependencies changed for "provider.bizfly (close)", sending new deps
2020/07/30 11:42:08 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2020/07/30 11:42:08 [TRACE] dag/walk: dependencies changed for "bizfly_instance.test", sending new deps
2020/07/30 11:42:08 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (EachMode fixup)", sending new deps
2020/07/30 11:42:08 [TRACE] dag/walk: visiting "provider.bizfly"
2020/07/30 11:42:08 [TRACE] vertex "provider.bizfly": starting visit (*terraform.NodeApplyableProvider)
2020/07/30 11:42:08 [TRACE] vertex "provider.bizfly": evaluating
2020/07/30 11:42:08 [TRACE] [walkPlan] Entering eval tree: provider.bizfly
2020/07/30 11:42:08 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:42:08 [TRACE] <root>: eval: *terraform.EvalInitProvider
2020-07-30T11:42:08.897+0700 [INFO]  plugin: configuring client automatic mTLS
2020/07/30 11:42:08 [TRACE] dag/walk: visiting "var.login"
2020/07/30 11:42:08 [TRACE] vertex "var.login": starting visit (*terraform.NodeRootVariable)
2020/07/30 11:42:08 [TRACE] vertex "var.login": evaluating
2020/07/30 11:42:08 [TRACE] [walkPlan] Entering eval tree: var.login
2020/07/30 11:42:08 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:42:08 [TRACE] [walkPlan] Exiting eval tree: var.login
2020/07/30 11:42:08 [TRACE] vertex "var.login": visit complete
2020-07-30T11:42:08.922+0700 [DEBUG] plugin: starting plugin: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly args=[/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly]
2020-07-30T11:42:08.925+0700 [DEBUG] plugin: plugin started: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=57787
2020-07-30T11:42:08.925+0700 [DEBUG] plugin: waiting for RPC address: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly
2020-07-30T11:42:08.943+0700 [INFO]  plugin.terraform-provider-bizfly: configuring server automatic mTLS: timestamp=2020-07-30T11:42:08.943+0700
2020-07-30T11:42:08.969+0700 [DEBUG] plugin: using plugin: version=5
2020-07-30T11:42:08.969+0700 [DEBUG] plugin.terraform-provider-bizfly: plugin address: address=/var/folders/0r/zdwrk7wn22vd_g32twvblrpc0000gn/T/plugin188998334 network=unix timestamp=2020-07-30T11:42:08.968+0700
2020/07/30 11:42:09 [TRACE] BuiltinEvalContext: Initialized "bizfly" provider for provider.bizfly
2020/07/30 11:42:09 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:42:09 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:42:09 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020-07-30T11:42:09.022+0700 [TRACE] plugin.stdio: waiting for stdio data
2020/07/30 11:42:09 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:42:09 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 11:42:09 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/07/30 11:42:09 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:42:09 [TRACE] <root>: eval: *terraform.EvalConfigProvider
2020/07/30 11:42:09 [TRACE] buildProviderConfig for provider.bizfly: using explicit config only
2020/07/30 11:42:09 [TRACE] GRPCProvider: GetSchema
2020/07/30 11:42:09 [TRACE] GRPCProvider: Configure
2020/07/30 11:42:10 [TRACE] [walkPlan] Exiting eval tree: provider.bizfly
2020/07/30 11:42:10 [TRACE] vertex "provider.bizfly": visit complete
2020/07/30 11:42:10 [TRACE] dag/walk: visiting "bizfly_instance.test"
2020/07/30 11:42:10 [TRACE] vertex "bizfly_instance.test": starting visit (*terraform.NodePlannableResource)
2020/07/30 11:42:10 [TRACE] vertex "bizfly_instance.test": evaluating
2020/07/30 11:42:10 [TRACE] [walkPlan] Entering eval tree: bizfly_instance.test
2020/07/30 11:42:10 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/07/30 11:42:10 [TRACE] [walkPlan] Exiting eval tree: bizfly_instance.test
2020/07/30 11:42:10 [TRACE] vertex "bizfly_instance.test": expanding dynamic subgraph
2020/07/30 11:42:10 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/07/30 11:42:10 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResourceInstance
  ------
2020/07/30 11:42:10 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/07/30 11:42:10 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/07/30 11:42:10 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/30 11:42:10 [DEBUG] Resource instance state not found for node "bizfly_instance.test", instance bizfly_instance.test
2020/07/30 11:42:10 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/30 11:42:10 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/30 11:42:10 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/30 11:42:10 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/30 11:42:10 [DEBUG] ReferenceTransformer: "bizfly_instance.test" references: []
2020/07/30 11:42:10 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/30 11:42:10 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/30 11:42:10 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/07/30 11:42:10 [TRACE] vertex "bizfly_instance.test": entering dynamic subgraph
2020/07/30 11:42:10 [TRACE] dag/walk: updating graph
2020/07/30 11:42:10 [TRACE] dag/walk: added new vertex: "bizfly_instance.test"
2020/07/30 11:42:10 [TRACE] dag/walk: visiting "bizfly_instance.test"
2020/07/30 11:42:10 [TRACE] vertex "bizfly_instance.test": starting visit (*terraform.NodePlannableResourceInstance)
2020/07/30 11:42:10 [TRACE] vertex "bizfly_instance.test": evaluating
2020/07/30 11:42:10 [TRACE] [walkPlan] Entering eval tree: bizfly_instance.test
2020/07/30 11:42:10 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:42:10 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 11:42:10 [TRACE] <root>: eval: *terraform.EvalReadState
2020/07/30 11:42:10 [TRACE] EvalReadState: reading state for bizfly_instance.test
2020/07/30 11:42:10 [TRACE] EvalReadState: no state present for bizfly_instance.test
2020/07/30 11:42:10 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2020/07/30 11:42:10 [TRACE] <root>: eval: *terraform.EvalDiff
2020/07/30 11:42:10 [TRACE] Re-validating config for "bizfly_instance.test"
2020/07/30 11:42:10 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/07/30 11:42:10 [TRACE] GRPCProvider: PlanResourceChange
2020/07/30 11:42:10 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2020/07/30 11:42:10 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/07/30 11:42:10 [TRACE] EvalWriteState: writing current state object for bizfly_instance.test
2020/07/30 11:42:10 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/07/30 11:42:10 [TRACE] EvalWriteDiff: recorded Create change for bizfly_instance.test
2020/07/30 11:42:10 [TRACE] [walkPlan] Exiting eval tree: bizfly_instance.test
2020/07/30 11:42:10 [TRACE] vertex "bizfly_instance.test": visit complete
2020/07/30 11:42:10 [TRACE] vertex "bizfly_instance.test": dynamic subgraph completed successfully
2020/07/30 11:42:10 [TRACE] vertex "bizfly_instance.test": visit complete
2020/07/30 11:42:10 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2020/07/30 11:42:10 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2020/07/30 11:42:10 [TRACE] vertex "meta.count-boundary (EachMode fixup)": evaluating
2020/07/30 11:42:10 [TRACE] dag/walk: visiting "provider.bizfly (close)"
2020/07/30 11:42:10 [TRACE] [walkPlan] Entering eval tree: meta.count-boundary (EachMode fixup)
2020/07/30 11:42:10 [TRACE] vertex "provider.bizfly (close)": starting visit (*terraform.graphNodeCloseProvider)
2020/07/30 11:42:10 [TRACE] <root>: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2020/07/30 11:42:10 [TRACE] vertex "provider.bizfly (close)": evaluating
2020/07/30 11:42:10 [TRACE] [walkPlan] Entering eval tree: provider.bizfly (close)
2020/07/30 11:42:10 [TRACE] <root>: eval: *terraform.EvalCloseProvider
2020/07/30 11:42:10 [TRACE] GRPCProvider: Close
2020/07/30 11:42:10 [TRACE] [walkPlan] Exiting eval tree: meta.count-boundary (EachMode fixup)
2020/07/30 11:42:10 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2020-07-30T11:42:10.461+0700 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2020-07-30T11:42:10.464+0700 [DEBUG] plugin: plugin process exited: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=57787
2020-07-30T11:42:10.464+0700 [DEBUG] plugin: plugin exited
2020/07/30 11:42:10 [TRACE] [walkPlan] Exiting eval tree: provider.bizfly (close)
2020/07/30 11:42:10 [TRACE] vertex "provider.bizfly (close)": visit complete
2020/07/30 11:42:10 [TRACE] dag/walk: visiting "root"
2020/07/30 11:42:10 [TRACE] vertex "root": starting visit (terraform.graphNodeRoot)
2020/07/30 11:42:10 [TRACE] vertex "root": visit complete
2020/07/30 11:42:10 [INFO] backend/local: plan operation completed
2020/07/30 11:42:10 [TRACE] statemgr.Filesystem: removing lock metadata file .terraform.tfstate.lock.info
2020/07/30 11:42:10 [TRACE] statemgr.Filesystem: unlocking terraform.tfstate using fcntl flock
2020/07/30 11:42:14 [INFO] Terraform version: 0.12.29  
2020/07/30 11:42:14 [INFO] Go runtime version: go1.13.14
2020/07/30 11:42:14 [INFO] CLI args: []string{"/usr/local/bin/terraform", "apply"}
2020/07/30 11:42:14 [DEBUG] Attempting to open CLI config file: /Users/hung/.terraformrc
2020/07/30 11:42:14 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2020/07/30 11:42:14 [INFO] CLI command args: []string{"apply"}
2020/07/30 11:42:14 [TRACE] Meta.Backend: no config given or present on disk, so returning nil config
2020/07/30 11:42:14 [TRACE] Meta.Backend: backend has not previously been initialized in this working directory
2020/07/30 11:42:14 [DEBUG] New state was assigned lineage "32e711ab-da15-eab1-e5fa-1562fe33a299"
2020/07/30 11:42:14 [TRACE] Meta.Backend: using default local state only (no backend configuration, and no existing initialized backend)
2020/07/30 11:42:14 [TRACE] Meta.Backend: instantiated backend of type <nil>
2020/07/30 11:42:14 [DEBUG] checking for provider in "."
2020/07/30 11:42:14 [WARN] found legacy provider "terraform-provider-bizfly"
2020/07/30 11:42:14 [DEBUG] checking for provider in "/usr/local/bin"
2020/07/30 11:42:14 [DEBUG] checking for provider in ".terraform/plugins/darwin_amd64"
2020/07/30 11:42:14 [DEBUG] found valid plugin: "bizfly", "0.0.0", "/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly"
2020/07/30 11:42:14 [DEBUG] checking for provisioner in "."
2020/07/30 11:42:14 [DEBUG] checking for provisioner in "/usr/local/bin"
2020/07/30 11:42:14 [DEBUG] checking for provisioner in ".terraform/plugins/darwin_amd64"
2020/07/30 11:42:14 [TRACE] Meta.Backend: backend <nil> does not support operations, so wrapping it in a local backend
2020/07/30 11:42:14 [INFO] backend/local: starting Apply operation
2020/07/30 11:42:14 [TRACE] backend/local: requesting state manager for workspace "default"
2020/07/30 11:42:14 [TRACE] backend/local: state manager for workspace "default" will:
 - read initial snapshot from terraform.tfstate
 - write new snapshots to terraform.tfstate
 - create any backup at terraform.tfstate.backup
2020/07/30 11:42:14 [TRACE] backend/local: requesting state lock for workspace "default"
2020/07/30 11:42:14 [TRACE] statemgr.Filesystem: preparing to manage state snapshots at terraform.tfstate
2020/07/30 11:42:14 [TRACE] statemgr.Filesystem: existing snapshot has lineage "8e1934d5-1d8f-e9a8-58e8-6c54c3aa209a" serial 1
2020/07/30 11:42:14 [TRACE] statemgr.Filesystem: locking terraform.tfstate using fcntl flock
2020/07/30 11:42:14 [TRACE] statemgr.Filesystem: writing lock metadata to .terraform.tfstate.lock.info
2020/07/30 11:42:14 [TRACE] backend/local: reading remote state for workspace "default"
2020/07/30 11:42:14 [TRACE] statemgr.Filesystem: reading latest snapshot from terraform.tfstate
2020/07/30 11:42:14 [TRACE] statemgr.Filesystem: read snapshot with lineage "8e1934d5-1d8f-e9a8-58e8-6c54c3aa209a" serial 1
2020/07/30 11:42:14 [TRACE] backend/local: retrieving local state snapshot for workspace "default"
2020/07/30 11:42:14 [TRACE] backend/local: building context for current working directory
2020/07/30 11:42:14 [TRACE] terraform.NewContext: starting
2020/07/30 11:42:14 [TRACE] terraform.NewContext: resolving provider version selections
2020/07/30 11:42:14 [TRACE] terraform.NewContext: loading provider schemas
2020/07/30 11:42:14 [TRACE] LoadSchemas: retrieving schema for provider type "bizfly"
2020-07-30T11:42:14.379+0700 [INFO]  plugin: configuring client automatic mTLS
2020-07-30T11:42:14.405+0700 [DEBUG] plugin: starting plugin: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly args=[/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly]
2020-07-30T11:42:14.409+0700 [DEBUG] plugin: plugin started: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=57806
2020-07-30T11:42:14.409+0700 [DEBUG] plugin: waiting for RPC address: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly
2020-07-30T11:42:14.427+0700 [INFO]  plugin.terraform-provider-bizfly: configuring server automatic mTLS: timestamp=2020-07-30T11:42:14.427+0700
2020-07-30T11:42:14.456+0700 [DEBUG] plugin.terraform-provider-bizfly: plugin address: address=/var/folders/0r/zdwrk7wn22vd_g32twvblrpc0000gn/T/plugin462005997 network=unix timestamp=2020-07-30T11:42:14.456+0700
2020-07-30T11:42:14.456+0700 [DEBUG] plugin: using plugin: version=5
2020/07/30 11:42:14 [TRACE] GRPCProvider: GetSchema
2020-07-30T11:42:14.509+0700 [TRACE] plugin.stdio: waiting for stdio data
2020/07/30 11:42:14 [TRACE] GRPCProvider: Close
2020-07-30T11:42:14.511+0700 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2020-07-30T11:42:14.513+0700 [DEBUG] plugin: plugin process exited: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=57806
2020-07-30T11:42:14.513+0700 [DEBUG] plugin: plugin exited
2020/07/30 11:42:14 [TRACE] terraform.NewContext: complete
2020/07/30 11:42:14 [TRACE] backend/local: finished building terraform.Context
2020/07/30 11:42:14 [TRACE] backend/local: requesting interactive input, if necessary
2020/07/30 11:42:14 [TRACE] Context.Input: Prompting for provider arguments
2020/07/30 11:42:14 [TRACE] Context.Input: Provider provider.bizfly declared at main.tf:1,1-18
2020/07/30 11:42:14 [TRACE] Context.Input: Input for provider.bizfly: map[string]cty.Value{}
2020/07/30 11:42:14 [TRACE] backend/local: running validation operation
2020/07/30 11:42:14 [INFO] terraform: building graph: GraphTypeValidate
2020/07/30 11:42:14 [TRACE] Executing graph transform *terraform.ConfigTransformer
2020/07/30 11:42:14 [TRACE] ConfigTransformer: Starting for path: 
2020/07/30 11:42:14 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
  ------
2020/07/30 11:42:14 [TRACE] Executing graph transform *terraform.LocalTransformer
2020/07/30 11:42:14 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2020/07/30 11:42:14 [TRACE] Executing graph transform *terraform.OutputTransformer
2020/07/30 11:42:14 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2020/07/30 11:42:14 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2020/07/30 11:42:14 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2020/07/30 11:42:14 [TRACE] Executing graph transform *terraform.StateTransformer
2020/07/30 11:42:14 [TRACE] StateTransformer: state is empty, so nothing to do
2020/07/30 11:42:14 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2020/07/30 11:42:14 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2020/07/30 11:42:14 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2020/07/30 11:42:14 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2020/07/30 11:42:14 [TRACE] AttachResourceConfigTransformer: attaching to "bizfly_instance.test" (*terraform.NodeValidatableResource) config from main.tf:7,1-34
2020/07/30 11:42:14 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2020/07/30 11:42:14 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/30 11:42:14 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/30 11:42:14 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2020/07/30 11:42:14 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:42:14 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2020/07/30 11:42:14 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2020/07/30 11:42:14 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2020/07/30 11:42:14 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2020/07/30 11:42:14 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2020/07/30 11:42:14 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2020/07/30 11:42:14 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2020/07/30 11:42:14 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2020/07/30 11:42:14 [TRACE] ProviderConfigTransformer: attaching to "provider.bizfly" provider configuration from main.tf:1,1-18
2020/07/30 11:42:14 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:42:14 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2020/07/30 11:42:14 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2020/07/30 11:42:14 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2020/07/30 11:42:14 [TRACE] ProviderTransformer: bizfly_instance.test is provided by provider.bizfly or inherited equivalent
2020/07/30 11:42:14 [TRACE] ProviderTransformer: exact match for provider.bizfly serving bizfly_instance.test
2020/07/30 11:42:14 [DEBUG] ProviderTransformer: "bizfly_instance.test" (*terraform.NodeValidatableResource) needs provider.bizfly
2020/07/30 11:42:14 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:42:14 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2020/07/30 11:42:14 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2020/07/30 11:42:14 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2020/07/30 11:42:14 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2020/07/30 11:42:14 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:42:14 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2020/07/30 11:42:14 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2020/07/30 11:42:14 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2020/07/30 11:42:14 [TRACE] AttachSchemaTransformer: attaching resource schema to bizfly_instance.test
2020/07/30 11:42:14 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.bizfly
2020/07/30 11:42:14 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2020/07/30 11:42:14 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/30 11:42:14 [DEBUG] ReferenceTransformer: "var.login" references: []
2020/07/30 11:42:14 [DEBUG] ReferenceTransformer: "provider.bizfly" references: []
2020/07/30 11:42:14 [DEBUG] ReferenceTransformer: "bizfly_instance.test" references: []
2020/07/30 11:42:14 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/30 11:42:14 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2020/07/30 11:42:14 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:42:14 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/30 11:42:14 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/30 11:42:14 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2020/07/30 11:42:14 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2020/07/30 11:42:14 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2020/07/30 11:42:14 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
    bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:42:14 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2020/07/30 11:42:14 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer (no changes)
2020/07/30 11:42:14 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/30 11:42:14 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
    bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.bizfly (close) - *terraform.graphNodeCloseProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:42:14 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2020/07/30 11:42:14 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodeValidatableResource
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
    bizfly_instance.test - *terraform.NodeValidatableResource
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.bizfly (close) - *terraform.graphNodeCloseProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:42:14 [DEBUG] Starting graph walk: walkValidate
2020/07/30 11:42:14 [TRACE] dag/walk: updating graph
2020/07/30 11:42:14 [TRACE] dag/walk: added new vertex: "var.login"
2020/07/30 11:42:14 [TRACE] dag/walk: added new vertex: "provider.bizfly"
2020/07/30 11:42:14 [TRACE] dag/walk: added new vertex: "meta.count-boundary (EachMode fixup)"
2020/07/30 11:42:14 [TRACE] dag/walk: added new vertex: "provider.bizfly (close)"
2020/07/30 11:42:14 [TRACE] dag/walk: added new vertex: "root"
2020/07/30 11:42:14 [TRACE] dag/walk: added new vertex: "bizfly_instance.test"
2020/07/30 11:42:14 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (EachMode fixup)"
2020/07/30 11:42:14 [TRACE] dag/walk: added edge: "root" waiting on "provider.bizfly (close)"
2020/07/30 11:42:14 [TRACE] dag/walk: added edge: "bizfly_instance.test" waiting on "provider.bizfly"
2020/07/30 11:42:14 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "bizfly_instance.test"
2020/07/30 11:42:14 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "var.login"
2020/07/30 11:42:14 [TRACE] dag/walk: added edge: "provider.bizfly (close)" waiting on "bizfly_instance.test"
2020/07/30 11:42:14 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2020/07/30 11:42:14 [TRACE] dag/walk: dependencies changed for "bizfly_instance.test", sending new deps
2020/07/30 11:42:14 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (EachMode fixup)", sending new deps
2020/07/30 11:42:14 [TRACE] dag/walk: dependencies changed for "provider.bizfly (close)", sending new deps
2020/07/30 11:42:14 [TRACE] dag/walk: visiting "var.login"
2020/07/30 11:42:14 [TRACE] vertex "var.login": starting visit (*terraform.NodeRootVariable)
2020/07/30 11:42:14 [TRACE] vertex "var.login": evaluating
2020/07/30 11:42:14 [TRACE] dag/walk: visiting "provider.bizfly"
2020/07/30 11:42:14 [TRACE] [walkValidate] Entering eval tree: var.login
2020/07/30 11:42:14 [TRACE] vertex "provider.bizfly": starting visit (*terraform.NodeApplyableProvider)
2020/07/30 11:42:14 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:42:14 [TRACE] [walkValidate] Exiting eval tree: var.login
2020/07/30 11:42:14 [TRACE] vertex "provider.bizfly": evaluating
2020/07/30 11:42:14 [TRACE] vertex "var.login": visit complete
2020/07/30 11:42:14 [TRACE] [walkValidate] Entering eval tree: provider.bizfly
2020/07/30 11:42:14 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:42:14 [TRACE] <root>: eval: *terraform.EvalInitProvider
2020-07-30T11:42:14.514+0700 [INFO]  plugin: configuring client automatic mTLS
2020-07-30T11:42:14.538+0700 [DEBUG] plugin: starting plugin: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly args=[/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly]
2020-07-30T11:42:14.542+0700 [DEBUG] plugin: plugin started: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=57807
2020-07-30T11:42:14.542+0700 [DEBUG] plugin: waiting for RPC address: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly
2020-07-30T11:42:14.560+0700 [INFO]  plugin.terraform-provider-bizfly: configuring server automatic mTLS: timestamp=2020-07-30T11:42:14.560+0700
2020-07-30T11:42:14.586+0700 [DEBUG] plugin: using plugin: version=5
2020-07-30T11:42:14.586+0700 [DEBUG] plugin.terraform-provider-bizfly: plugin address: address=/var/folders/0r/zdwrk7wn22vd_g32twvblrpc0000gn/T/plugin708505602 network=unix timestamp=2020-07-30T11:42:14.586+0700
2020/07/30 11:42:14 [TRACE] BuiltinEvalContext: Initialized "bizfly" provider for provider.bizfly
2020/07/30 11:42:14 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:42:14 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/07/30 11:42:14 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:42:14 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 11:42:14 [TRACE] <root>: eval: *terraform.EvalValidateProvider
2020-07-30T11:42:14.640+0700 [TRACE] plugin.stdio: waiting for stdio data
2020/07/30 11:42:14 [TRACE] buildProviderConfig for provider.bizfly: using explicit config only
2020/07/30 11:42:14 [TRACE] GRPCProvider: GetSchema
2020/07/30 11:42:14 [TRACE] GRPCProvider: PrepareProviderConfig
2020/07/30 11:42:14 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:42:14 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:42:14 [TRACE] [walkValidate] Exiting eval tree: provider.bizfly
2020/07/30 11:42:14 [TRACE] vertex "provider.bizfly": visit complete
2020/07/30 11:42:14 [TRACE] dag/walk: visiting "bizfly_instance.test"
2020/07/30 11:42:14 [TRACE] vertex "bizfly_instance.test": starting visit (*terraform.NodeValidatableResource)
2020/07/30 11:42:14 [TRACE] vertex "bizfly_instance.test": evaluating
2020/07/30 11:42:14 [TRACE] [walkValidate] Entering eval tree: bizfly_instance.test
2020/07/30 11:42:14 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:42:14 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 11:42:14 [TRACE] <root>: eval: *terraform.EvalValidateResource
2020/07/30 11:42:14 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/07/30 11:42:14 [TRACE] [walkValidate] Exiting eval tree: bizfly_instance.test
2020/07/30 11:42:14 [TRACE] vertex "bizfly_instance.test": visit complete
2020/07/30 11:42:14 [TRACE] dag/walk: visiting "provider.bizfly (close)"
2020/07/30 11:42:14 [TRACE] vertex "provider.bizfly (close)": starting visit (*terraform.graphNodeCloseProvider)
2020/07/30 11:42:14 [TRACE] vertex "provider.bizfly (close)": evaluating
2020/07/30 11:42:14 [TRACE] [walkValidate] Entering eval tree: provider.bizfly (close)
2020/07/30 11:42:14 [TRACE] <root>: eval: *terraform.EvalCloseProvider
2020/07/30 11:42:14 [TRACE] GRPCProvider: Close
2020/07/30 11:42:14 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2020/07/30 11:42:14 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2020/07/30 11:42:14 [TRACE] vertex "meta.count-boundary (EachMode fixup)": evaluating
2020/07/30 11:42:14 [TRACE] [walkValidate] Entering eval tree: meta.count-boundary (EachMode fixup)
2020/07/30 11:42:14 [TRACE] <root>: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2020/07/30 11:42:14 [TRACE] [walkValidate] Exiting eval tree: meta.count-boundary (EachMode fixup)
2020/07/30 11:42:14 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2020-07-30T11:42:14.643+0700 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2020-07-30T11:42:14.645+0700 [DEBUG] plugin: plugin process exited: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=57807
2020-07-30T11:42:14.645+0700 [DEBUG] plugin: plugin exited
2020/07/30 11:42:14 [TRACE] [walkValidate] Exiting eval tree: provider.bizfly (close)
2020/07/30 11:42:14 [TRACE] vertex "provider.bizfly (close)": visit complete
2020/07/30 11:42:14 [TRACE] dag/walk: visiting "root"
2020/07/30 11:42:14 [TRACE] vertex "root": starting visit (terraform.graphNodeRoot)
2020/07/30 11:42:14 [TRACE] vertex "root": visit complete
2020/07/30 11:42:14 [INFO] backend/local: apply calling Refresh
2020/07/30 11:42:14 [INFO] terraform: building graph: GraphTypeRefresh
2020/07/30 11:42:14 [TRACE] No managed resources in state during refresh; skipping managed resource transformer
2020/07/30 11:42:14 [TRACE] Executing graph transform *terraform.ConfigTransformer
2020/07/30 11:42:14 [TRACE] ConfigTransformer: Starting for path: 
2020/07/30 11:42:14 [TRACE] Completed graph transform *terraform.ConfigTransformer (no changes)
2020/07/30 11:42:14 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2020/07/30 11:42:14 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2020/07/30 11:42:14 [TRACE] Executing graph transform *terraform.StateTransformer
2020/07/30 11:42:14 [TRACE] StateTransformer: state is empty, so nothing to do
2020/07/30 11:42:14 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2020/07/30 11:42:14 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/30 11:42:14 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/30 11:42:14 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2020/07/30 11:42:14 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2020/07/30 11:42:14 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2020/07/30 11:42:14 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:42:14 [TRACE] Executing graph transform *terraform.LocalTransformer
2020/07/30 11:42:14 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2020/07/30 11:42:14 [TRACE] Executing graph transform *terraform.OutputTransformer
2020/07/30 11:42:14 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2020/07/30 11:42:14 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2020/07/30 11:42:14 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2020/07/30 11:42:14 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2020/07/30 11:42:14 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2020/07/30 11:42:14 [TRACE] ProviderConfigTransformer: attaching to "provider.bizfly" provider configuration from main.tf:1,1-18
2020/07/30 11:42:14 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:42:14 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2020/07/30 11:42:14 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2020/07/30 11:42:14 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2020/07/30 11:42:14 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer (no changes)
2020/07/30 11:42:14 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2020/07/30 11:42:14 [DEBUG] pruning unused provider.bizfly
2020/07/30 11:42:14 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer with new graph:
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:42:14 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2020/07/30 11:42:14 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2020/07/30 11:42:14 [TRACE] Completed graph transform *terraform.graphTransformerMulti (no changes)
2020/07/30 11:42:14 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2020/07/30 11:42:14 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2020/07/30 11:42:14 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/30 11:42:14 [DEBUG] ReferenceTransformer: "var.login" references: []
2020/07/30 11:42:14 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/30 11:42:14 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2020/07/30 11:42:14 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2020/07/30 11:42:14 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/30 11:42:14 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/30 11:42:14 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2020/07/30 11:42:14 [TRACE] Completed graph transform *terraform.CloseProviderTransformer (no changes)
2020/07/30 11:42:14 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/30 11:42:14 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/07/30 11:42:14 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2020/07/30 11:42:14 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer (no changes)
2020/07/30 11:42:14 [DEBUG] Starting graph walk: walkRefresh
2020/07/30 11:42:14 [TRACE] dag/walk: updating graph
2020/07/30 11:42:14 [TRACE] dag/walk: added new vertex: "var.login"
2020/07/30 11:42:14 [TRACE] dag/walk: visiting "var.login"
2020/07/30 11:42:14 [TRACE] vertex "var.login": starting visit (*terraform.NodeRootVariable)
2020/07/30 11:42:14 [TRACE] vertex "var.login": evaluating
2020/07/30 11:42:14 [TRACE] [walkRefresh] Entering eval tree: var.login
2020/07/30 11:42:14 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:42:14 [TRACE] [walkRefresh] Exiting eval tree: var.login
2020/07/30 11:42:14 [TRACE] vertex "var.login": visit complete
2020/07/30 11:42:14 [INFO] backend/local: apply calling Plan
2020/07/30 11:42:14 [INFO] terraform: building graph: GraphTypePlan
2020/07/30 11:42:14 [TRACE] Executing graph transform *terraform.ConfigTransformer
2020/07/30 11:42:14 [TRACE] ConfigTransformer: Starting for path: 
2020/07/30 11:42:14 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
  ------
2020/07/30 11:42:14 [TRACE] Executing graph transform *terraform.LocalTransformer
2020/07/30 11:42:14 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2020/07/30 11:42:14 [TRACE] Executing graph transform *terraform.OutputTransformer
2020/07/30 11:42:14 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2020/07/30 11:42:14 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2020/07/30 11:42:14 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2020/07/30 11:42:14 [TRACE] Executing graph transform *terraform.StateTransformer
2020/07/30 11:42:14 [TRACE] StateTransformer: state is empty, so nothing to do
2020/07/30 11:42:14 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2020/07/30 11:42:14 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2020/07/30 11:42:14 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2020/07/30 11:42:14 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2020/07/30 11:42:14 [TRACE] AttachResourceConfigTransformer: attaching to "bizfly_instance.test" (*terraform.NodePlannableResource) config from main.tf:7,1-34
2020/07/30 11:42:14 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2020/07/30 11:42:14 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/30 11:42:14 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/30 11:42:14 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2020/07/30 11:42:14 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:42:14 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2020/07/30 11:42:14 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2020/07/30 11:42:14 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2020/07/30 11:42:14 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2020/07/30 11:42:14 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2020/07/30 11:42:14 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2020/07/30 11:42:14 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2020/07/30 11:42:14 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2020/07/30 11:42:14 [TRACE] ProviderConfigTransformer: attaching to "provider.bizfly" provider configuration from main.tf:1,1-18
2020/07/30 11:42:14 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:42:14 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2020/07/30 11:42:14 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2020/07/30 11:42:14 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2020/07/30 11:42:14 [TRACE] ProviderTransformer: bizfly_instance.test is provided by provider.bizfly or inherited equivalent
2020/07/30 11:42:14 [TRACE] ProviderTransformer: exact match for provider.bizfly serving bizfly_instance.test
2020/07/30 11:42:14 [DEBUG] ProviderTransformer: "bizfly_instance.test" (*terraform.NodePlannableResource) needs provider.bizfly
2020/07/30 11:42:14 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:42:14 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2020/07/30 11:42:14 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2020/07/30 11:42:14 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2020/07/30 11:42:14 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2020/07/30 11:42:14 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:42:14 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2020/07/30 11:42:14 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2020/07/30 11:42:14 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2020/07/30 11:42:14 [TRACE] AttachSchemaTransformer: attaching resource schema to bizfly_instance.test
2020/07/30 11:42:14 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.bizfly
2020/07/30 11:42:14 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2020/07/30 11:42:14 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/30 11:42:14 [DEBUG] ReferenceTransformer: "provider.bizfly" references: []
2020/07/30 11:42:14 [DEBUG] ReferenceTransformer: "bizfly_instance.test" references: []
2020/07/30 11:42:14 [DEBUG] ReferenceTransformer: "var.login" references: []
2020/07/30 11:42:14 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/30 11:42:14 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2020/07/30 11:42:14 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:42:14 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/30 11:42:14 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/30 11:42:14 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2020/07/30 11:42:14 [TRACE] ForcedCBDTransformer: "bizfly_instance.test" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2020/07/30 11:42:14 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2020/07/30 11:42:14 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2020/07/30 11:42:14 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
    bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:42:14 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2020/07/30 11:42:14 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer (no changes)
2020/07/30 11:42:14 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/30 11:42:14 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
    bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.bizfly (close) - *terraform.graphNodeCloseProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:42:14 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2020/07/30 11:42:14 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodePlannableResource
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
    bizfly_instance.test - *terraform.NodePlannableResource
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.bizfly (close) - *terraform.graphNodeCloseProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:42:14 [DEBUG] Starting graph walk: walkPlan
2020/07/30 11:42:14 [TRACE] dag/walk: updating graph
2020/07/30 11:42:14 [TRACE] dag/walk: added new vertex: "root"
2020/07/30 11:42:14 [TRACE] dag/walk: added new vertex: "bizfly_instance.test"
2020/07/30 11:42:14 [TRACE] dag/walk: added new vertex: "var.login"
2020/07/30 11:42:14 [TRACE] dag/walk: added new vertex: "provider.bizfly"
2020/07/30 11:42:14 [TRACE] dag/walk: added new vertex: "meta.count-boundary (EachMode fixup)"
2020/07/30 11:42:14 [TRACE] dag/walk: added new vertex: "provider.bizfly (close)"
2020/07/30 11:42:14 [TRACE] dag/walk: added edge: "provider.bizfly (close)" waiting on "bizfly_instance.test"
2020/07/30 11:42:14 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (EachMode fixup)"
2020/07/30 11:42:14 [TRACE] dag/walk: added edge: "root" waiting on "provider.bizfly (close)"
2020/07/30 11:42:14 [TRACE] dag/walk: added edge: "bizfly_instance.test" waiting on "provider.bizfly"
2020/07/30 11:42:14 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "bizfly_instance.test"
2020/07/30 11:42:14 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "var.login"
2020/07/30 11:42:14 [TRACE] dag/walk: dependencies changed for "provider.bizfly (close)", sending new deps
2020/07/30 11:42:14 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2020/07/30 11:42:14 [TRACE] dag/walk: dependencies changed for "bizfly_instance.test", sending new deps
2020/07/30 11:42:14 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (EachMode fixup)", sending new deps
2020/07/30 11:42:14 [TRACE] dag/walk: visiting "var.login"
2020/07/30 11:42:14 [TRACE] vertex "var.login": starting visit (*terraform.NodeRootVariable)
2020/07/30 11:42:14 [TRACE] vertex "var.login": evaluating
2020/07/30 11:42:14 [TRACE] dag/walk: visiting "provider.bizfly"
2020/07/30 11:42:14 [TRACE] [walkPlan] Entering eval tree: var.login
2020/07/30 11:42:14 [TRACE] vertex "provider.bizfly": starting visit (*terraform.NodeApplyableProvider)
2020/07/30 11:42:14 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:42:14 [TRACE] [walkPlan] Exiting eval tree: var.login
2020/07/30 11:42:14 [TRACE] vertex "var.login": visit complete
2020/07/30 11:42:14 [TRACE] vertex "provider.bizfly": evaluating
2020/07/30 11:42:14 [TRACE] [walkPlan] Entering eval tree: provider.bizfly
2020/07/30 11:42:14 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:42:14 [TRACE] <root>: eval: *terraform.EvalInitProvider
2020-07-30T11:42:14.646+0700 [INFO]  plugin: configuring client automatic mTLS
2020-07-30T11:42:14.670+0700 [DEBUG] plugin: starting plugin: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly args=[/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly]
2020-07-30T11:42:14.674+0700 [DEBUG] plugin: plugin started: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=57808
2020-07-30T11:42:14.674+0700 [DEBUG] plugin: waiting for RPC address: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly
2020-07-30T11:42:14.692+0700 [INFO]  plugin.terraform-provider-bizfly: configuring server automatic mTLS: timestamp=2020-07-30T11:42:14.692+0700
2020-07-30T11:42:14.718+0700 [DEBUG] plugin: using plugin: version=5
2020-07-30T11:42:14.718+0700 [DEBUG] plugin.terraform-provider-bizfly: plugin address: address=/var/folders/0r/zdwrk7wn22vd_g32twvblrpc0000gn/T/plugin219417031 network=unix timestamp=2020-07-30T11:42:14.718+0700
2020/07/30 11:42:14 [TRACE] BuiltinEvalContext: Initialized "bizfly" provider for provider.bizfly
2020/07/30 11:42:14 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:42:14 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:42:14 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/07/30 11:42:14 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:42:14 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 11:42:14 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/07/30 11:42:14 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:42:14 [TRACE] <root>: eval: *terraform.EvalConfigProvider
2020/07/30 11:42:14 [TRACE] buildProviderConfig for provider.bizfly: using explicit config only
2020/07/30 11:42:14 [TRACE] GRPCProvider: GetSchema
2020-07-30T11:42:14.771+0700 [TRACE] plugin.stdio: waiting for stdio data
2020/07/30 11:42:14 [TRACE] GRPCProvider: Configure
2020/07/30 11:42:15 [TRACE] [walkPlan] Exiting eval tree: provider.bizfly
2020/07/30 11:42:15 [TRACE] vertex "provider.bizfly": visit complete
2020/07/30 11:42:15 [TRACE] dag/walk: visiting "bizfly_instance.test"
2020/07/30 11:42:15 [TRACE] vertex "bizfly_instance.test": starting visit (*terraform.NodePlannableResource)
2020/07/30 11:42:15 [TRACE] vertex "bizfly_instance.test": evaluating
2020/07/30 11:42:15 [TRACE] [walkPlan] Entering eval tree: bizfly_instance.test
2020/07/30 11:42:15 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/07/30 11:42:15 [TRACE] [walkPlan] Exiting eval tree: bizfly_instance.test
2020/07/30 11:42:15 [TRACE] vertex "bizfly_instance.test": expanding dynamic subgraph
2020/07/30 11:42:15 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/07/30 11:42:15 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResourceInstance
  ------
2020/07/30 11:42:15 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/07/30 11:42:15 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/07/30 11:42:15 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/30 11:42:15 [DEBUG] Resource instance state not found for node "bizfly_instance.test", instance bizfly_instance.test
2020/07/30 11:42:15 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/30 11:42:15 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/30 11:42:15 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/30 11:42:15 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/30 11:42:15 [DEBUG] ReferenceTransformer: "bizfly_instance.test" references: []
2020/07/30 11:42:15 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/30 11:42:15 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/30 11:42:15 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/07/30 11:42:15 [TRACE] vertex "bizfly_instance.test": entering dynamic subgraph
2020/07/30 11:42:15 [TRACE] dag/walk: updating graph
2020/07/30 11:42:15 [TRACE] dag/walk: added new vertex: "bizfly_instance.test"
2020/07/30 11:42:15 [TRACE] dag/walk: visiting "bizfly_instance.test"
2020/07/30 11:42:15 [TRACE] vertex "bizfly_instance.test": starting visit (*terraform.NodePlannableResourceInstance)
2020/07/30 11:42:15 [TRACE] vertex "bizfly_instance.test": evaluating
2020/07/30 11:42:15 [TRACE] [walkPlan] Entering eval tree: bizfly_instance.test
2020/07/30 11:42:15 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:42:15 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 11:42:15 [TRACE] <root>: eval: *terraform.EvalReadState
2020/07/30 11:42:15 [TRACE] EvalReadState: reading state for bizfly_instance.test
2020/07/30 11:42:15 [TRACE] EvalReadState: no state present for bizfly_instance.test
2020/07/30 11:42:15 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2020/07/30 11:42:15 [TRACE] <root>: eval: *terraform.EvalDiff
2020/07/30 11:42:16 [TRACE] Re-validating config for "bizfly_instance.test"
2020/07/30 11:42:16 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/07/30 11:42:16 [TRACE] GRPCProvider: PlanResourceChange
2020/07/30 11:42:16 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2020/07/30 11:42:16 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/07/30 11:42:16 [TRACE] EvalWriteState: writing current state object for bizfly_instance.test
2020/07/30 11:42:16 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/07/30 11:42:16 [TRACE] EvalWriteDiff: recorded Create change for bizfly_instance.test
2020/07/30 11:42:16 [TRACE] [walkPlan] Exiting eval tree: bizfly_instance.test
2020/07/30 11:42:16 [TRACE] vertex "bizfly_instance.test": visit complete
2020/07/30 11:42:16 [TRACE] vertex "bizfly_instance.test": dynamic subgraph completed successfully
2020/07/30 11:42:16 [TRACE] vertex "bizfly_instance.test": visit complete
2020/07/30 11:42:16 [TRACE] dag/walk: visiting "provider.bizfly (close)"
2020/07/30 11:42:16 [TRACE] vertex "provider.bizfly (close)": starting visit (*terraform.graphNodeCloseProvider)
2020/07/30 11:42:16 [TRACE] vertex "provider.bizfly (close)": evaluating
2020/07/30 11:42:16 [TRACE] [walkPlan] Entering eval tree: provider.bizfly (close)
2020/07/30 11:42:16 [TRACE] <root>: eval: *terraform.EvalCloseProvider
2020/07/30 11:42:16 [TRACE] GRPCProvider: Close
2020/07/30 11:42:16 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2020/07/30 11:42:16 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2020/07/30 11:42:16 [TRACE] vertex "meta.count-boundary (EachMode fixup)": evaluating
2020/07/30 11:42:16 [TRACE] [walkPlan] Entering eval tree: meta.count-boundary (EachMode fixup)
2020/07/30 11:42:16 [TRACE] <root>: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2020/07/30 11:42:16 [TRACE] [walkPlan] Exiting eval tree: meta.count-boundary (EachMode fixup)
2020/07/30 11:42:16 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2020-07-30T11:42:16.004+0700 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2020-07-30T11:42:16.007+0700 [DEBUG] plugin: plugin process exited: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=57808
2020-07-30T11:42:16.007+0700 [DEBUG] plugin: plugin exited
2020/07/30 11:42:16 [TRACE] [walkPlan] Exiting eval tree: provider.bizfly (close)
2020/07/30 11:42:16 [TRACE] vertex "provider.bizfly (close)": visit complete
2020/07/30 11:42:16 [TRACE] dag/walk: visiting "root"
2020/07/30 11:42:16 [TRACE] vertex "root": starting visit (terraform.graphNodeRoot)
2020/07/30 11:42:16 [TRACE] vertex "root": visit complete
2020/07/30 11:42:16 [DEBUG] command: asking for input: "Do you want to perform these actions?"
2020/07/30 11:42:18 [INFO] backend/local: apply calling Apply
2020/07/30 11:42:18 [INFO] terraform: building graph: GraphTypeApply
2020/07/30 11:42:18 [TRACE] Executing graph transform *terraform.ConfigTransformer
2020/07/30 11:42:18 [TRACE] ConfigTransformer: Starting for path: 
2020/07/30 11:42:18 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
  ------
2020/07/30 11:42:18 [TRACE] Executing graph transform *terraform.DiffTransformer
2020/07/30 11:42:18 [TRACE] DiffTransformer starting
2020/07/30 11:42:18 [TRACE] DiffTransformer: found Create change for bizfly_instance.test 
2020/07/30 11:42:18 [TRACE] DiffTransformer: bizfly_instance.test will be represented by bizfly_instance.test
2020/07/30 11:42:18 [TRACE] DiffTransformer complete
2020/07/30 11:42:18 [TRACE] Completed graph transform *terraform.DiffTransformer with new graph:
  bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
  ------
2020/07/30 11:42:18 [TRACE] Executing graph transform *terraform.OrphanResourceTransformer
2020/07/30 11:42:18 [TRACE] Completed graph transform *terraform.OrphanResourceTransformer (no changes)
2020/07/30 11:42:18 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2020/07/30 11:42:18 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2020/07/30 11:42:18 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2020/07/30 11:42:18 [TRACE] AttachResourceConfigTransformer: attaching to "bizfly_instance.test (prepare state)" (*terraform.NodeApplyableResource) config from main.tf:7,1-34
2020/07/30 11:42:18 [TRACE] AttachResourceConfigTransformer: attaching to "bizfly_instance.test" (*terraform.NodeApplyableResourceInstance) config from main.tf:7,1-34
2020/07/30 11:42:18 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2020/07/30 11:42:18 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/30 11:42:18 [DEBUG] Resource state not found for node "bizfly_instance.test", instance bizfly_instance.test
2020/07/30 11:42:18 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/30 11:42:18 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2020/07/30 11:42:18 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2020/07/30 11:42:18 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2020/07/30 11:42:18 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2020/07/30 11:42:18 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2020/07/30 11:42:18 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
  bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:42:18 [TRACE] Executing graph transform *terraform.LocalTransformer
2020/07/30 11:42:18 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2020/07/30 11:42:18 [TRACE] Executing graph transform *terraform.OutputTransformer
2020/07/30 11:42:18 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2020/07/30 11:42:18 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2020/07/30 11:42:18 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2020/07/30 11:42:18 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2020/07/30 11:42:18 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2020/07/30 11:42:18 [TRACE] ProviderConfigTransformer: attaching to "provider.bizfly" provider configuration from main.tf:1,1-18
2020/07/30 11:42:18 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:42:18 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2020/07/30 11:42:18 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2020/07/30 11:42:18 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2020/07/30 11:42:18 [TRACE] ProviderTransformer: bizfly_instance.test is provided by provider.bizfly or inherited equivalent
2020/07/30 11:42:18 [TRACE] ProviderTransformer: bizfly_instance.test (prepare state) is provided by provider.bizfly or inherited equivalent
2020/07/30 11:42:18 [TRACE] ProviderTransformer: exact match for provider.bizfly serving bizfly_instance.test (prepare state)
2020/07/30 11:42:18 [DEBUG] ProviderTransformer: "bizfly_instance.test (prepare state)" (*terraform.NodeApplyableResource) needs provider.bizfly
2020/07/30 11:42:18 [TRACE] ProviderTransformer: exact match for provider.bizfly serving bizfly_instance.test
2020/07/30 11:42:18 [DEBUG] ProviderTransformer: "bizfly_instance.test" (*terraform.NodeApplyableResourceInstance) needs provider.bizfly
2020/07/30 11:42:18 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:42:18 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2020/07/30 11:42:18 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2020/07/30 11:42:18 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2020/07/30 11:42:18 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2020/07/30 11:42:18 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:42:18 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2020/07/30 11:42:18 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2020/07/30 11:42:18 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2020/07/30 11:42:18 [TRACE] AttachSchemaTransformer: attaching resource schema to bizfly_instance.test (prepare state)
2020/07/30 11:42:18 [TRACE] AttachSchemaTransformer: attaching resource schema to bizfly_instance.test
2020/07/30 11:42:18 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.bizfly
2020/07/30 11:42:18 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2020/07/30 11:42:18 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/30 11:42:18 [DEBUG] ReferenceTransformer: "provider.bizfly" references: []
2020/07/30 11:42:18 [DEBUG] ReferenceTransformer: "bizfly_instance.test (prepare state)" references: []
2020/07/30 11:42:18 [DEBUG] ReferenceTransformer: "bizfly_instance.test" references: []
2020/07/30 11:42:18 [DEBUG] ReferenceTransformer: "var.login" references: []
2020/07/30 11:42:18 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/30 11:42:18 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2020/07/30 11:42:18 [TRACE] AttachDependenciesTransformer: bizfly_instance.test depends on []
2020/07/30 11:42:18 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2020/07/30 11:42:18 [TRACE] Executing graph transform *terraform.DestroyEdgeTransformer
2020/07/30 11:42:18 [TRACE] Completed graph transform *terraform.DestroyEdgeTransformer (no changes)
2020/07/30 11:42:18 [TRACE] Executing graph transform *terraform.CBDEdgeTransformer
2020/07/30 11:42:18 [TRACE] Completed graph transform *terraform.CBDEdgeTransformer (no changes)
2020/07/30 11:42:18 [TRACE] Executing graph transform *terraform.PruneUnusedValuesTransformer
2020/07/30 11:42:18 [TRACE] Completed graph transform *terraform.PruneUnusedValuesTransformer (no changes)
2020/07/30 11:42:18 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2020/07/30 11:42:18 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:42:18 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/30 11:42:18 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/30 11:42:18 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2020/07/30 11:42:18 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
    bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:42:18 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2020/07/30 11:42:18 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer (no changes)
2020/07/30 11:42:18 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/30 11:42:18 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
  bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
    bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.bizfly (close) - *terraform.graphNodeCloseProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:42:18 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2020/07/30 11:42:18 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
    bizfly_instance.test - *terraform.NodeApplyableResourceInstance
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.bizfly (close) - *terraform.graphNodeCloseProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:42:18 [DEBUG] Starting graph walk: walkApply
2020/07/30 11:42:18 [TRACE] dag/walk: updating graph
2020/07/30 11:42:18 [TRACE] dag/walk: added new vertex: "var.login"
2020/07/30 11:42:18 [TRACE] dag/walk: added new vertex: "provider.bizfly"
2020/07/30 11:42:18 [TRACE] dag/walk: added new vertex: "meta.count-boundary (EachMode fixup)"
2020/07/30 11:42:18 [TRACE] dag/walk: added new vertex: "provider.bizfly (close)"
2020/07/30 11:42:18 [TRACE] dag/walk: added new vertex: "root"
2020/07/30 11:42:18 [TRACE] dag/walk: added new vertex: "bizfly_instance.test (prepare state)"
2020/07/30 11:42:18 [TRACE] dag/walk: added new vertex: "bizfly_instance.test"
2020/07/30 11:42:18 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (EachMode fixup)"
2020/07/30 11:42:18 [TRACE] dag/walk: added edge: "root" waiting on "provider.bizfly (close)"
2020/07/30 11:42:18 [TRACE] dag/walk: added edge: "bizfly_instance.test" waiting on "bizfly_instance.test (prepare state)"
2020/07/30 11:42:18 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "bizfly_instance.test"
2020/07/30 11:42:18 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "var.login"
2020/07/30 11:42:18 [TRACE] dag/walk: added edge: "provider.bizfly (close)" waiting on "bizfly_instance.test"
2020/07/30 11:42:18 [TRACE] dag/walk: added edge: "bizfly_instance.test (prepare state)" waiting on "provider.bizfly"
2020/07/30 11:42:18 [TRACE] dag/walk: dependencies changed for "provider.bizfly (close)", sending new deps
2020/07/30 11:42:18 [TRACE] dag/walk: dependencies changed for "bizfly_instance.test (prepare state)", sending new deps
2020/07/30 11:42:18 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2020/07/30 11:42:18 [TRACE] dag/walk: dependencies changed for "bizfly_instance.test", sending new deps
2020/07/30 11:42:18 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (EachMode fixup)", sending new deps
2020/07/30 11:42:18 [TRACE] dag/walk: visiting "provider.bizfly"
2020/07/30 11:42:18 [TRACE] vertex "provider.bizfly": starting visit (*terraform.NodeApplyableProvider)
2020/07/30 11:42:18 [TRACE] vertex "provider.bizfly": evaluating
2020/07/30 11:42:18 [TRACE] [walkApply] Entering eval tree: provider.bizfly
2020/07/30 11:42:18 [TRACE] dag/walk: visiting "var.login"
2020/07/30 11:42:18 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:42:18 [TRACE] <root>: eval: *terraform.EvalInitProvider
2020/07/30 11:42:18 [TRACE] vertex "var.login": starting visit (*terraform.NodeRootVariable)
2020/07/30 11:42:18 [TRACE] vertex "var.login": evaluating
2020/07/30 11:42:18 [TRACE] [walkApply] Entering eval tree: var.login
2020/07/30 11:42:18 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:42:18 [TRACE] [walkApply] Exiting eval tree: var.login
2020/07/30 11:42:18 [TRACE] vertex "var.login": visit complete
2020-07-30T11:42:18.420+0700 [INFO]  plugin: configuring client automatic mTLS
2020-07-30T11:42:18.452+0700 [DEBUG] plugin: starting plugin: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly args=[/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly]
2020-07-30T11:42:18.456+0700 [DEBUG] plugin: plugin started: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=57813
2020-07-30T11:42:18.456+0700 [DEBUG] plugin: waiting for RPC address: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly
2020-07-30T11:42:18.476+0700 [INFO]  plugin.terraform-provider-bizfly: configuring server automatic mTLS: timestamp=2020-07-30T11:42:18.475+0700
2020-07-30T11:42:18.508+0700 [DEBUG] plugin.terraform-provider-bizfly: plugin address: network=unix address=/var/folders/0r/zdwrk7wn22vd_g32twvblrpc0000gn/T/plugin147062968 timestamp=2020-07-30T11:42:18.508+0700
2020-07-30T11:42:18.508+0700 [DEBUG] plugin: using plugin: version=5
2020/07/30 11:42:18 [TRACE] BuiltinEvalContext: Initialized "bizfly" provider for provider.bizfly
2020/07/30 11:42:18 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:42:18 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:42:18 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/07/30 11:42:18 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:42:18 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 11:42:18 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/07/30 11:42:18 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:42:18 [TRACE] <root>: eval: *terraform.EvalConfigProvider
2020/07/30 11:42:18 [TRACE] buildProviderConfig for provider.bizfly: using explicit config only
2020/07/30 11:42:18 [TRACE] GRPCProvider: GetSchema
2020-07-30T11:42:18.576+0700 [TRACE] plugin.stdio: waiting for stdio data
2020/07/30 11:42:18 [TRACE] GRPCProvider: Configure
2020/07/30 11:42:19 [TRACE] [walkApply] Exiting eval tree: provider.bizfly
2020/07/30 11:42:19 [TRACE] vertex "provider.bizfly": visit complete
2020/07/30 11:42:19 [TRACE] dag/walk: visiting "bizfly_instance.test (prepare state)"
2020/07/30 11:42:19 [TRACE] vertex "bizfly_instance.test (prepare state)": starting visit (*terraform.NodeApplyableResource)
2020/07/30 11:42:19 [TRACE] vertex "bizfly_instance.test (prepare state)": evaluating
2020/07/30 11:42:19 [TRACE] [walkApply] Entering eval tree: bizfly_instance.test (prepare state)
2020/07/30 11:42:19 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/07/30 11:42:19 [TRACE] [walkApply] Exiting eval tree: bizfly_instance.test (prepare state)
2020/07/30 11:42:19 [TRACE] vertex "bizfly_instance.test (prepare state)": visit complete
2020/07/30 11:42:19 [TRACE] dag/walk: visiting "bizfly_instance.test"
2020/07/30 11:42:19 [TRACE] vertex "bizfly_instance.test": starting visit (*terraform.NodeApplyableResourceInstance)
2020/07/30 11:42:19 [TRACE] vertex "bizfly_instance.test": evaluating
2020/07/30 11:42:19 [TRACE] [walkApply] Entering eval tree: bizfly_instance.test
2020/07/30 11:42:19 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:42:19 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 11:42:19 [TRACE] <root>: eval: *terraform.EvalReadDiff
2020/07/30 11:42:19 [TRACE] EvalReadDiff: Read Create change from plan for bizfly_instance.test
2020/07/30 11:42:19 [TRACE] <root>: eval: *terraform.EvalIf
2020/07/30 11:42:19 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:42:19 [TRACE] <root>: eval: *terraform.EvalIf
2020/07/30 11:42:19 [TRACE] <root>: eval: *terraform.EvalReadState
2020/07/30 11:42:19 [TRACE] EvalReadState: reading state for bizfly_instance.test
2020/07/30 11:42:19 [TRACE] EvalReadState: no state present for bizfly_instance.test
2020/07/30 11:42:19 [TRACE] <root>: eval: *terraform.EvalReadDiff
2020/07/30 11:42:19 [TRACE] EvalReadDiff: Read Create change from plan for bizfly_instance.test
2020/07/30 11:42:19 [TRACE] <root>: eval: *terraform.EvalDiff
2020/07/30 11:42:19 [TRACE] Re-validating config for "bizfly_instance.test"
2020/07/30 11:42:19 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/07/30 11:42:19 [TRACE] GRPCProvider: PlanResourceChange
2020/07/30 11:42:19 [TRACE] <root>: eval: *terraform.EvalCheckPlannedChange
2020/07/30 11:42:19 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2020/07/30 11:42:19 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 11:42:19 [TRACE] <root>: eval: *terraform.EvalReadState
2020/07/30 11:42:19 [TRACE] EvalReadState: reading state for bizfly_instance.test
2020/07/30 11:42:19 [TRACE] EvalReadState: no state present for bizfly_instance.test
2020/07/30 11:42:19 [TRACE] <root>: eval: *terraform.EvalReduceDiff
2020/07/30 11:42:19 [TRACE] <root>: eval: *terraform.EvalIf
2020/07/30 11:42:19 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:42:19 [TRACE] <root>: eval: *terraform.EvalApplyPre
2020/07/30 11:42:19 [TRACE] <root>: eval: *terraform.EvalApply
2020/07/30 11:42:19 [DEBUG] bizfly_instance.test: applying the planned Create change
2020/07/30 11:42:19 [TRACE] GRPCProvider: ApplyResourceChange
2020-07-30T11:42:19.843+0700 [DEBUG] plugin.terraform-provider-bizfly: 2020/07/30 11:42:19 []
2020-07-30T11:42:19.843+0700 [DEBUG] plugin.terraform-provider-bizfly: 2020/07/30 11:42:19 --------------------------
2020-07-30T11:42:19.843+0700 [DEBUG] plugin.terraform-provider-bizfly: 2020/07/30 11:42:19 map[string]interface {}
2020-07-30T11:42:19.844+0700 [TRACE] plugin.stdio: received data: channel=STDOUT len=411
2020-07-30T11:42:19.844+0700 [TRACE] plugin.stdio: waiting for stdio data
2020-07-30T11:42:19.844+0700 [TRACE] plugin.stdio: received data: channel=STDOUT len=24
2020-07-30T11:42:19.844+0700 [TRACE] plugin.stdio: waiting for stdio data
2020-07-30T11:42:19.844+0700 [TRACE] plugin.stdio: received data: channel=STDOUT len=22
2020-07-30T11:42:19.844+0700 [TRACE] plugin.stdio: waiting for stdio data
2020-07-30T11:42:19.845+0700 [DEBUG] plugin.terraform-provider-bizfly: panic: interface conversion: interface {} is nil, not string
2020-07-30T11:42:19.845+0700 [DEBUG] plugin.terraform-provider-bizfly: 
2020-07-30T11:42:19.845+0700 [DEBUG] plugin.terraform-provider-bizfly: goroutine 87 [running]:
2020-07-30T11:42:19.845+0700 [DEBUG] plugin.terraform-provider-bizfly: terraform-provider-bizfly/provider.resouceInstanceCreate(0xc00017ccb0, 0x1aebd40, 0xc00048fe00, 0x0, 0x0)
2020-07-30T11:42:19.845+0700 [DEBUG] plugin.terraform-provider-bizfly: 	/Users/hung/go/src/terraform-provider-bizfly/provider/resource_instance.go:163 +0x827
2020-07-30T11:42:19.845+0700 [DEBUG] plugin.terraform-provider-bizfly: github.com/hashicorp/terraform-plugin-sdk/helper/schema.(*Resource).Apply(0xc0003822d0, 0xc000117770, 0xc0000a3ce0, 0x1aebd40, 0xc00048fe00, 0x1a9ee01, 0xc000489338, 0xc0003f7f80)
2020-07-30T11:42:19.845+0700 [DEBUG] plugin.terraform-provider-bizfly: 	/Users/hung/go/pkg/mod/github.com/hashicorp/terraform-plugin-sdk@v1.15.0/helper/schema/resource.go:310 +0x365
2020-07-30T11:42:19.845+0700 [DEBUG] plugin.terraform-provider-bizfly: github.com/hashicorp/terraform-plugin-sdk/helper/schema.(*Provider).Apply(0xc00039e000, 0xc000307a10, 0xc000117770, 0xc0000a3ce0, 0xc00040fdc8, 0xc0000106f8, 0x1aa0a60)
2020-07-30T11:42:19.845+0700 [DEBUG] plugin.terraform-provider-bizfly: 	/Users/hung/go/pkg/mod/github.com/hashicorp/terraform-plugin-sdk@v1.15.0/helper/schema/provider.go:294 +0x99
2020-07-30T11:42:19.845+0700 [DEBUG] plugin.terraform-provider-bizfly: github.com/hashicorp/terraform-plugin-sdk/internal/helper/plugin.(*GRPCProviderServer).ApplyResourceChange(0xc000010020, 0x1e83f80, 0xc0003f60c0, 0xc00017c540, 0xc000010020, 0xc0003f60c0, 0xc0005c4b78)
2020-07-30T11:42:19.845+0700 [DEBUG] plugin.terraform-provider-bizfly: 	/Users/hung/go/pkg/mod/github.com/hashicorp/terraform-plugin-sdk@v1.15.0/internal/helper/plugin/grpc_provider.go:885 +0x8b4
2020-07-30T11:42:19.845+0700 [DEBUG] plugin.terraform-provider-bizfly: github.com/hashicorp/terraform-plugin-sdk/internal/tfplugin5._Provider_ApplyResourceChange_Handler(0x1bb19e0, 0xc000010020, 0x1e83f80, 0xc0003f60c0, 0xc000238960, 0x0, 0x1e83f80, 0xc0003f60c0, 0xc0001ba5a0, 0x1ce)
2020-07-30T11:42:19.845+0700 [DEBUG] plugin.terraform-provider-bizfly: 	/Users/hung/go/pkg/mod/github.com/hashicorp/terraform-plugin-sdk@v1.15.0/internal/tfplugin5/tfplugin5.pb.go:3305 +0x217
2020-07-30T11:42:19.845+0700 [DEBUG] plugin.terraform-provider-bizfly: google.golang.org/grpc.(*Server).processUnaryRPC(0xc000702600, 0x1e8e820, 0xc000703200, 0xc0005c8500, 0xc0001a6ab0, 0x2595940, 0x0, 0x0, 0x0)
2020-07-30T11:42:19.845+0700 [DEBUG] plugin.terraform-provider-bizfly: 	/Users/hung/go/pkg/mod/google.golang.org/grpc@v1.27.1/server.go:1024 +0x501
2020-07-30T11:42:19.845+0700 [DEBUG] plugin.terraform-provider-bizfly: google.golang.org/grpc.(*Server).handleStream(0xc000702600, 0x1e8e820, 0xc000703200, 0xc0005c8500, 0x0)
2020-07-30T11:42:19.845+0700 [DEBUG] plugin.terraform-provider-bizfly: 	/Users/hung/go/pkg/mod/google.golang.org/grpc@v1.27.1/server.go:1313 +0xd3d
2020-07-30T11:42:19.845+0700 [DEBUG] plugin.terraform-provider-bizfly: google.golang.org/grpc.(*Server).serveStreams.func1.1(0xc00058e270, 0xc000702600, 0x1e8e820, 0xc000703200, 0xc0005c8500)
2020-07-30T11:42:19.845+0700 [DEBUG] plugin.terraform-provider-bizfly: 	/Users/hung/go/pkg/mod/google.golang.org/grpc@v1.27.1/server.go:722 +0xa1
2020-07-30T11:42:19.845+0700 [DEBUG] plugin.terraform-provider-bizfly: created by google.golang.org/grpc.(*Server).serveStreams.func1
2020-07-30T11:42:19.845+0700 [DEBUG] plugin.terraform-provider-bizfly: 	/Users/hung/go/pkg/mod/google.golang.org/grpc@v1.27.1/server.go:720 +0xa1
2020-07-30T11:42:19.851+0700 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2020-07-30T11:42:19.851+0700 [DEBUG] plugin: plugin process exited: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=57813 error="exit status 2"
2020/07/30 11:42:19 [DEBUG] bizfly_instance.test: apply errored, but we're indicating that via the Error pointer rather than returning it: rpc error: code = Unavailable desc = transport is closing
2020/07/30 11:42:19 [TRACE] <root>: eval: *terraform.EvalMaybeTainted
2020/07/30 11:42:19 [TRACE] EvalMaybeTainted: bizfly_instance.test encountered an error during creation, so it is now marked as tainted
2020/07/30 11:42:19 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/07/30 11:42:19 [TRACE] EvalWriteState: removing state object for bizfly_instance.test
2020/07/30 11:42:19 [TRACE] <root>: eval: *terraform.EvalApplyProvisioners
2020/07/30 11:42:19 [TRACE] EvalApplyProvisioners: bizfly_instance.test has no state, so skipping provisioners
2020/07/30 11:42:19 [TRACE] <root>: eval: *terraform.EvalMaybeTainted
2020/07/30 11:42:19 [TRACE] EvalMaybeTainted: bizfly_instance.test encountered an error during creation, so it is now marked as tainted
2020/07/30 11:42:19 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/07/30 11:42:19 [TRACE] EvalWriteState: removing state object for bizfly_instance.test
2020/07/30 11:42:19 [TRACE] <root>: eval: *terraform.EvalIf
2020/07/30 11:42:19 [TRACE] <root>: eval: *terraform.EvalIf
2020/07/30 11:42:19 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/07/30 11:42:19 [TRACE] <root>: eval: *terraform.EvalApplyPost
2020/07/30 11:42:19 [ERROR] <root>: eval: *terraform.EvalApplyPost, err: rpc error: code = Unavailable desc = transport is closing
2020/07/30 11:42:19 [ERROR] <root>: eval: *terraform.EvalSequence, err: rpc error: code = Unavailable desc = transport is closing
2020/07/30 11:42:19 [TRACE] [walkApply] Exiting eval tree: bizfly_instance.test
2020/07/30 11:42:19 [TRACE] vertex "bizfly_instance.test": visit complete
2020/07/30 11:42:19 [TRACE] dag/walk: upstream of "provider.bizfly (close)" errored, so skipping
2020/07/30 11:42:19 [TRACE] dag/walk: upstream of "meta.count-boundary (EachMode fixup)" errored, so skipping
2020/07/30 11:42:19 [TRACE] dag/walk: upstream of "root" errored, so skipping
2020/07/30 11:42:19 [TRACE] statemgr.Filesystem: not making a backup, because the new snapshot is identical to the old
2020/07/30 11:42:19 [TRACE] statemgr.Filesystem: no state changes since last snapshot
2020/07/30 11:42:19 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2020/07/30 11:42:19 [TRACE] statemgr.Filesystem: removing lock metadata file .terraform.tfstate.lock.info
2020/07/30 11:42:19 [TRACE] statemgr.Filesystem: unlocking terraform.tfstate using fcntl flock
2020-07-30T11:42:19.859+0700 [DEBUG] plugin: plugin exited
2020/07/30 11:43:42 [INFO] Terraform version: 0.12.29  
2020/07/30 11:43:42 [INFO] Go runtime version: go1.13.14
2020/07/30 11:43:42 [INFO] CLI args: []string{"/usr/local/bin/terraform", "init"}
2020/07/30 11:43:42 [DEBUG] Attempting to open CLI config file: /Users/hung/.terraformrc
2020/07/30 11:43:42 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2020/07/30 11:43:42 [INFO] CLI command args: []string{"init"}
2020/07/30 11:43:42 [TRACE] Meta.Backend: no config given or present on disk, so returning nil config
2020/07/30 11:43:42 [TRACE] Meta.Backend: backend has not previously been initialized in this working directory
2020/07/30 11:43:42 [DEBUG] New state was assigned lineage "8ca117c5-8065-106b-e81f-0c181b6f734b"
2020/07/30 11:43:42 [TRACE] Meta.Backend: using default local state only (no backend configuration, and no existing initialized backend)
2020/07/30 11:43:42 [TRACE] Meta.Backend: instantiated backend of type <nil>
2020/07/30 11:43:42 [DEBUG] checking for provider in "."
2020/07/30 11:43:42 [WARN] found legacy provider "terraform-provider-bizfly"
2020/07/30 11:43:42 [DEBUG] checking for provider in "/usr/local/bin"
2020/07/30 11:43:42 [DEBUG] checking for provider in ".terraform/plugins/darwin_amd64"
2020/07/30 11:43:42 [DEBUG] found valid plugin: "bizfly", "0.0.0", "/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly"
2020/07/30 11:43:42 [DEBUG] checking for provisioner in "."
2020/07/30 11:43:42 [DEBUG] checking for provisioner in "/usr/local/bin"
2020/07/30 11:43:42 [DEBUG] checking for provisioner in ".terraform/plugins/darwin_amd64"
2020/07/30 11:43:42 [TRACE] Meta.Backend: backend <nil> does not support operations, so wrapping it in a local backend
2020/07/30 11:43:42 [TRACE] backend/local: state manager for workspace "default" will:
 - read initial snapshot from terraform.tfstate
 - write new snapshots to terraform.tfstate
 - create any backup at terraform.tfstate.backup
2020/07/30 11:43:42 [TRACE] statemgr.Filesystem: reading initial snapshot from terraform.tfstate
2020/07/30 11:43:42 [TRACE] statemgr.Filesystem: read snapshot with lineage "8e1934d5-1d8f-e9a8-58e8-6c54c3aa209a" serial 1
2020/07/30 11:43:42 [DEBUG] checking for provider in "."
2020/07/30 11:43:42 [WARN] found legacy provider "terraform-provider-bizfly"
2020/07/30 11:43:42 [DEBUG] checking for provider in "/usr/local/bin"
2020/07/30 11:43:42 [DEBUG] checking for provider in ".terraform/plugins/darwin_amd64"
2020/07/30 11:43:42 [DEBUG] found valid plugin: "bizfly", "0.0.0", "/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly"
2020/07/30 11:43:42 [DEBUG] plugin requirements: "bizfly"=""
2020/07/30 11:43:42 [DEBUG] checking for provider in "."
2020/07/30 11:43:42 [WARN] found legacy provider "terraform-provider-bizfly"
2020/07/30 11:43:42 [DEBUG] checking for provider in "/usr/local/bin"
2020/07/30 11:43:42 [DEBUG] checking for provider in ".terraform/plugins/darwin_amd64"
2020/07/30 11:43:42 [DEBUG] found valid plugin: "bizfly", "0.0.0", "/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly"
2020/07/30 11:43:42 [DEBUG] checking for provider in ".terraform/plugins/darwin_amd64"
2020/07/30 11:43:49 [INFO] Terraform version: 0.12.29  
2020/07/30 11:43:49 [INFO] Go runtime version: go1.13.14
2020/07/30 11:43:49 [INFO] CLI args: []string{"/usr/local/bin/terraform", "plan"}
2020/07/30 11:43:49 [DEBUG] Attempting to open CLI config file: /Users/hung/.terraformrc
2020/07/30 11:43:49 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2020/07/30 11:43:49 [INFO] CLI command args: []string{"plan"}
2020/07/30 11:43:49 [TRACE] Meta.Backend: no config given or present on disk, so returning nil config
2020/07/30 11:43:49 [TRACE] Meta.Backend: backend has not previously been initialized in this working directory
2020/07/30 11:43:49 [DEBUG] New state was assigned lineage "d3d6ee75-8fc3-b952-558e-f05f5ef40537"
2020/07/30 11:43:49 [TRACE] Meta.Backend: using default local state only (no backend configuration, and no existing initialized backend)
2020/07/30 11:43:49 [TRACE] Meta.Backend: instantiated backend of type <nil>
2020/07/30 11:43:49 [DEBUG] checking for provider in "."
2020/07/30 11:43:49 [WARN] found legacy provider "terraform-provider-bizfly"
2020/07/30 11:43:49 [DEBUG] checking for provider in "/usr/local/bin"
2020/07/30 11:43:49 [DEBUG] checking for provider in ".terraform/plugins/darwin_amd64"
2020/07/30 11:43:49 [DEBUG] found valid plugin: "bizfly", "0.0.0", "/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly"
2020/07/30 11:43:49 [DEBUG] checking for provisioner in "."
2020/07/30 11:43:49 [DEBUG] checking for provisioner in "/usr/local/bin"
2020/07/30 11:43:49 [DEBUG] checking for provisioner in ".terraform/plugins/darwin_amd64"
2020/07/30 11:43:49 [TRACE] Meta.Backend: backend <nil> does not support operations, so wrapping it in a local backend
2020/07/30 11:43:49 [INFO] backend/local: starting Plan operation
2020/07/30 11:43:49 [TRACE] backend/local: requesting state manager for workspace "default"
2020/07/30 11:43:49 [TRACE] backend/local: state manager for workspace "default" will:
 - read initial snapshot from terraform.tfstate
 - write new snapshots to terraform.tfstate
 - create any backup at terraform.tfstate.backup
2020/07/30 11:43:49 [TRACE] backend/local: requesting state lock for workspace "default"
2020/07/30 11:43:49 [TRACE] statemgr.Filesystem: preparing to manage state snapshots at terraform.tfstate
2020/07/30 11:43:49 [TRACE] statemgr.Filesystem: existing snapshot has lineage "8e1934d5-1d8f-e9a8-58e8-6c54c3aa209a" serial 1
2020/07/30 11:43:49 [TRACE] statemgr.Filesystem: locking terraform.tfstate using fcntl flock
2020/07/30 11:43:49 [TRACE] statemgr.Filesystem: writing lock metadata to .terraform.tfstate.lock.info
2020/07/30 11:43:49 [TRACE] backend/local: reading remote state for workspace "default"
2020/07/30 11:43:49 [TRACE] statemgr.Filesystem: reading latest snapshot from terraform.tfstate
2020/07/30 11:43:49 [TRACE] statemgr.Filesystem: read snapshot with lineage "8e1934d5-1d8f-e9a8-58e8-6c54c3aa209a" serial 1
2020/07/30 11:43:49 [TRACE] backend/local: retrieving local state snapshot for workspace "default"
2020/07/30 11:43:49 [TRACE] backend/local: building context for current working directory
2020/07/30 11:43:49 [TRACE] terraform.NewContext: starting
2020/07/30 11:43:49 [TRACE] terraform.NewContext: resolving provider version selections
2020/07/30 11:43:49 [TRACE] terraform.NewContext: loading provider schemas
2020/07/30 11:43:49 [TRACE] LoadSchemas: retrieving schema for provider type "bizfly"
2020-07-30T11:43:49.843+0700 [INFO]  plugin: configuring client automatic mTLS
2020-07-30T11:43:49.880+0700 [DEBUG] plugin: starting plugin: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly args=[/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly]
2020-07-30T11:43:49.884+0700 [DEBUG] plugin: plugin started: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=58347
2020-07-30T11:43:49.884+0700 [DEBUG] plugin: waiting for RPC address: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly
2020-07-30T11:43:49.901+0700 [DEBUG] plugin.terraform-provider-bizfly: 2020/07/30 11:43:49 --------------
2020-07-30T11:43:49.901+0700 [INFO]  plugin.terraform-provider-bizfly: configuring server automatic mTLS: timestamp=2020-07-30T11:43:49.901+0700
2020-07-30T11:43:49.928+0700 [DEBUG] plugin.terraform-provider-bizfly: plugin address: address=/var/folders/0r/zdwrk7wn22vd_g32twvblrpc0000gn/T/plugin137364334 network=unix timestamp=2020-07-30T11:43:49.928+0700
2020-07-30T11:43:49.928+0700 [DEBUG] plugin: using plugin: version=5
2020/07/30 11:43:49 [TRACE] GRPCProvider: GetSchema
2020-07-30T11:43:49.988+0700 [TRACE] plugin.stdio: waiting for stdio data
2020/07/30 11:43:49 [TRACE] GRPCProvider: Close
2020-07-30T11:43:49.991+0700 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2020-07-30T11:43:49.993+0700 [DEBUG] plugin: plugin process exited: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=58347
2020-07-30T11:43:49.993+0700 [DEBUG] plugin: plugin exited
2020/07/30 11:43:49 [TRACE] terraform.NewContext: complete
2020/07/30 11:43:49 [TRACE] backend/local: finished building terraform.Context
2020/07/30 11:43:49 [TRACE] backend/local: requesting interactive input, if necessary
2020/07/30 11:43:49 [TRACE] Context.Input: Prompting for provider arguments
2020/07/30 11:43:49 [TRACE] Context.Input: Provider provider.bizfly declared at main.tf:1,1-18
2020/07/30 11:43:49 [TRACE] Context.Input: Input for provider.bizfly: map[string]cty.Value{}
2020/07/30 11:43:49 [TRACE] backend/local: running validation operation
2020/07/30 11:43:49 [INFO] terraform: building graph: GraphTypeValidate
2020/07/30 11:43:49 [TRACE] Executing graph transform *terraform.ConfigTransformer
2020/07/30 11:43:49 [TRACE] ConfigTransformer: Starting for path: 
2020/07/30 11:43:49 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
  ------
2020/07/30 11:43:49 [TRACE] Executing graph transform *terraform.LocalTransformer
2020/07/30 11:43:49 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2020/07/30 11:43:49 [TRACE] Executing graph transform *terraform.OutputTransformer
2020/07/30 11:43:49 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2020/07/30 11:43:49 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2020/07/30 11:43:49 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2020/07/30 11:43:49 [TRACE] Executing graph transform *terraform.StateTransformer
2020/07/30 11:43:49 [TRACE] StateTransformer: state is empty, so nothing to do
2020/07/30 11:43:49 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2020/07/30 11:43:49 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2020/07/30 11:43:49 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2020/07/30 11:43:49 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2020/07/30 11:43:49 [TRACE] AttachResourceConfigTransformer: attaching to "bizfly_instance.test" (*terraform.NodeValidatableResource) config from main.tf:7,1-34
2020/07/30 11:43:49 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2020/07/30 11:43:49 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/30 11:43:49 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/30 11:43:49 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2020/07/30 11:43:49 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:43:49 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2020/07/30 11:43:49 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2020/07/30 11:43:49 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2020/07/30 11:43:49 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2020/07/30 11:43:49 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2020/07/30 11:43:49 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2020/07/30 11:43:49 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2020/07/30 11:43:49 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2020/07/30 11:43:49 [TRACE] ProviderConfigTransformer: attaching to "provider.bizfly" provider configuration from main.tf:1,1-18
2020/07/30 11:43:49 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:43:49 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2020/07/30 11:43:49 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2020/07/30 11:43:49 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2020/07/30 11:43:49 [TRACE] ProviderTransformer: bizfly_instance.test is provided by provider.bizfly or inherited equivalent
2020/07/30 11:43:49 [TRACE] ProviderTransformer: exact match for provider.bizfly serving bizfly_instance.test
2020/07/30 11:43:49 [DEBUG] ProviderTransformer: "bizfly_instance.test" (*terraform.NodeValidatableResource) needs provider.bizfly
2020/07/30 11:43:49 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:43:49 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2020/07/30 11:43:49 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2020/07/30 11:43:49 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2020/07/30 11:43:49 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2020/07/30 11:43:49 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:43:49 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2020/07/30 11:43:49 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2020/07/30 11:43:49 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2020/07/30 11:43:49 [TRACE] AttachSchemaTransformer: attaching resource schema to bizfly_instance.test
2020/07/30 11:43:49 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.bizfly
2020/07/30 11:43:49 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2020/07/30 11:43:49 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/30 11:43:49 [DEBUG] ReferenceTransformer: "var.login" references: []
2020/07/30 11:43:49 [DEBUG] ReferenceTransformer: "provider.bizfly" references: []
2020/07/30 11:43:49 [DEBUG] ReferenceTransformer: "bizfly_instance.test" references: []
2020/07/30 11:43:49 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/30 11:43:49 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2020/07/30 11:43:49 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:43:49 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/30 11:43:49 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/30 11:43:49 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2020/07/30 11:43:49 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2020/07/30 11:43:49 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2020/07/30 11:43:49 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
    bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:43:49 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2020/07/30 11:43:49 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer (no changes)
2020/07/30 11:43:49 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/30 11:43:49 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
    bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.bizfly (close) - *terraform.graphNodeCloseProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:43:49 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2020/07/30 11:43:49 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodeValidatableResource
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
    bizfly_instance.test - *terraform.NodeValidatableResource
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.bizfly (close) - *terraform.graphNodeCloseProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:43:49 [DEBUG] Starting graph walk: walkValidate
2020/07/30 11:43:49 [TRACE] dag/walk: updating graph
2020/07/30 11:43:49 [TRACE] dag/walk: added new vertex: "bizfly_instance.test"
2020/07/30 11:43:49 [TRACE] dag/walk: added new vertex: "var.login"
2020/07/30 11:43:49 [TRACE] dag/walk: added new vertex: "provider.bizfly"
2020/07/30 11:43:49 [TRACE] dag/walk: added new vertex: "meta.count-boundary (EachMode fixup)"
2020/07/30 11:43:49 [TRACE] dag/walk: added new vertex: "provider.bizfly (close)"
2020/07/30 11:43:49 [TRACE] dag/walk: added new vertex: "root"
2020/07/30 11:43:49 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "var.login"
2020/07/30 11:43:49 [TRACE] dag/walk: added edge: "provider.bizfly (close)" waiting on "bizfly_instance.test"
2020/07/30 11:43:49 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (EachMode fixup)"
2020/07/30 11:43:49 [TRACE] dag/walk: added edge: "root" waiting on "provider.bizfly (close)"
2020/07/30 11:43:49 [TRACE] dag/walk: added edge: "bizfly_instance.test" waiting on "provider.bizfly"
2020/07/30 11:43:49 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "bizfly_instance.test"
2020/07/30 11:43:49 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2020/07/30 11:43:49 [TRACE] dag/walk: dependencies changed for "bizfly_instance.test", sending new deps
2020/07/30 11:43:49 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (EachMode fixup)", sending new deps
2020/07/30 11:43:49 [TRACE] dag/walk: dependencies changed for "provider.bizfly (close)", sending new deps
2020/07/30 11:43:49 [TRACE] dag/walk: visiting "var.login"
2020/07/30 11:43:49 [TRACE] vertex "var.login": starting visit (*terraform.NodeRootVariable)
2020/07/30 11:43:49 [TRACE] vertex "var.login": evaluating
2020/07/30 11:43:49 [TRACE] [walkValidate] Entering eval tree: var.login
2020/07/30 11:43:49 [TRACE] dag/walk: visiting "provider.bizfly"
2020/07/30 11:43:49 [TRACE] vertex "provider.bizfly": starting visit (*terraform.NodeApplyableProvider)
2020/07/30 11:43:49 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:43:49 [TRACE] [walkValidate] Exiting eval tree: var.login
2020/07/30 11:43:49 [TRACE] vertex "var.login": visit complete
2020/07/30 11:43:49 [TRACE] vertex "provider.bizfly": evaluating
2020/07/30 11:43:49 [TRACE] [walkValidate] Entering eval tree: provider.bizfly
2020/07/30 11:43:49 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:43:49 [TRACE] <root>: eval: *terraform.EvalInitProvider
2020-07-30T11:43:49.999+0700 [INFO]  plugin: configuring client automatic mTLS
2020-07-30T11:43:50.023+0700 [DEBUG] plugin: starting plugin: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly args=[/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly]
2020-07-30T11:43:50.027+0700 [DEBUG] plugin: plugin started: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=58348
2020-07-30T11:43:50.027+0700 [DEBUG] plugin: waiting for RPC address: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly
2020-07-30T11:43:50.045+0700 [DEBUG] plugin.terraform-provider-bizfly: 2020/07/30 11:43:50 --------------
2020-07-30T11:43:50.045+0700 [INFO]  plugin.terraform-provider-bizfly: configuring server automatic mTLS: timestamp=2020-07-30T11:43:50.045+0700
2020-07-30T11:43:50.071+0700 [DEBUG] plugin: using plugin: version=5
2020-07-30T11:43:50.071+0700 [DEBUG] plugin.terraform-provider-bizfly: plugin address: address=/var/folders/0r/zdwrk7wn22vd_g32twvblrpc0000gn/T/plugin158703139 network=unix timestamp=2020-07-30T11:43:50.071+0700
2020/07/30 11:43:50 [TRACE] BuiltinEvalContext: Initialized "bizfly" provider for provider.bizfly
2020/07/30 11:43:50 [TRACE] <root>: eval: terraform.EvalNoop
2020-07-30T11:43:50.124+0700 [TRACE] plugin.stdio: waiting for stdio data
2020/07/30 11:43:50 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/07/30 11:43:50 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:43:50 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 11:43:50 [TRACE] <root>: eval: *terraform.EvalValidateProvider
2020/07/30 11:43:50 [TRACE] buildProviderConfig for provider.bizfly: using explicit config only
2020/07/30 11:43:50 [TRACE] GRPCProvider: GetSchema
2020/07/30 11:43:50 [TRACE] GRPCProvider: PrepareProviderConfig
2020/07/30 11:43:50 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:43:50 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:43:50 [TRACE] [walkValidate] Exiting eval tree: provider.bizfly
2020/07/30 11:43:50 [TRACE] vertex "provider.bizfly": visit complete
2020/07/30 11:43:50 [TRACE] dag/walk: visiting "bizfly_instance.test"
2020/07/30 11:43:50 [TRACE] vertex "bizfly_instance.test": starting visit (*terraform.NodeValidatableResource)
2020/07/30 11:43:50 [TRACE] vertex "bizfly_instance.test": evaluating
2020/07/30 11:43:50 [TRACE] [walkValidate] Entering eval tree: bizfly_instance.test
2020/07/30 11:43:50 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:43:50 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 11:43:50 [TRACE] <root>: eval: *terraform.EvalValidateResource
2020/07/30 11:43:50 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/07/30 11:43:50 [TRACE] [walkValidate] Exiting eval tree: bizfly_instance.test
2020/07/30 11:43:50 [TRACE] vertex "bizfly_instance.test": visit complete
2020/07/30 11:43:50 [TRACE] dag/walk: visiting "provider.bizfly (close)"
2020/07/30 11:43:50 [TRACE] vertex "provider.bizfly (close)": starting visit (*terraform.graphNodeCloseProvider)
2020/07/30 11:43:50 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2020/07/30 11:43:50 [TRACE] vertex "provider.bizfly (close)": evaluating
2020/07/30 11:43:50 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2020/07/30 11:43:50 [TRACE] [walkValidate] Entering eval tree: provider.bizfly (close)
2020/07/30 11:43:50 [TRACE] vertex "meta.count-boundary (EachMode fixup)": evaluating
2020/07/30 11:43:50 [TRACE] <root>: eval: *terraform.EvalCloseProvider
2020/07/30 11:43:50 [TRACE] [walkValidate] Entering eval tree: meta.count-boundary (EachMode fixup)
2020/07/30 11:43:50 [TRACE] GRPCProvider: Close
2020/07/30 11:43:50 [TRACE] <root>: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2020/07/30 11:43:50 [TRACE] [walkValidate] Exiting eval tree: meta.count-boundary (EachMode fixup)
2020/07/30 11:43:50 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2020-07-30T11:43:50.131+0700 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2020-07-30T11:43:50.133+0700 [DEBUG] plugin: plugin process exited: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=58348
2020-07-30T11:43:50.133+0700 [DEBUG] plugin: plugin exited
2020/07/30 11:43:50 [TRACE] [walkValidate] Exiting eval tree: provider.bizfly (close)
2020/07/30 11:43:50 [TRACE] vertex "provider.bizfly (close)": visit complete
2020/07/30 11:43:50 [TRACE] dag/walk: visiting "root"
2020/07/30 11:43:50 [TRACE] vertex "root": starting visit (terraform.graphNodeRoot)
2020/07/30 11:43:50 [TRACE] vertex "root": visit complete
2020/07/30 11:43:50 [INFO] backend/local: plan calling Refresh
2020/07/30 11:43:50 [INFO] terraform: building graph: GraphTypeRefresh
2020/07/30 11:43:50 [TRACE] No managed resources in state during refresh; skipping managed resource transformer
2020/07/30 11:43:50 [TRACE] Executing graph transform *terraform.ConfigTransformer
2020/07/30 11:43:50 [TRACE] ConfigTransformer: Starting for path: 
2020/07/30 11:43:50 [TRACE] Completed graph transform *terraform.ConfigTransformer (no changes)
2020/07/30 11:43:50 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2020/07/30 11:43:50 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2020/07/30 11:43:50 [TRACE] Executing graph transform *terraform.StateTransformer
2020/07/30 11:43:50 [TRACE] StateTransformer: state is empty, so nothing to do
2020/07/30 11:43:50 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2020/07/30 11:43:50 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/30 11:43:50 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/30 11:43:50 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2020/07/30 11:43:50 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2020/07/30 11:43:50 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2020/07/30 11:43:50 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:43:50 [TRACE] Executing graph transform *terraform.LocalTransformer
2020/07/30 11:43:50 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2020/07/30 11:43:50 [TRACE] Executing graph transform *terraform.OutputTransformer
2020/07/30 11:43:50 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2020/07/30 11:43:50 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2020/07/30 11:43:50 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2020/07/30 11:43:50 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2020/07/30 11:43:50 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2020/07/30 11:43:50 [TRACE] ProviderConfigTransformer: attaching to "provider.bizfly" provider configuration from main.tf:1,1-18
2020/07/30 11:43:50 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:43:50 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2020/07/30 11:43:50 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2020/07/30 11:43:50 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2020/07/30 11:43:50 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer (no changes)
2020/07/30 11:43:50 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2020/07/30 11:43:50 [DEBUG] pruning unused provider.bizfly
2020/07/30 11:43:50 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer with new graph:
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:43:50 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2020/07/30 11:43:50 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2020/07/30 11:43:50 [TRACE] Completed graph transform *terraform.graphTransformerMulti (no changes)
2020/07/30 11:43:50 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2020/07/30 11:43:50 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2020/07/30 11:43:50 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/30 11:43:50 [DEBUG] ReferenceTransformer: "var.login" references: []
2020/07/30 11:43:50 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/30 11:43:50 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2020/07/30 11:43:50 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2020/07/30 11:43:50 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/30 11:43:50 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/30 11:43:50 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2020/07/30 11:43:50 [TRACE] Completed graph transform *terraform.CloseProviderTransformer (no changes)
2020/07/30 11:43:50 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/30 11:43:50 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/07/30 11:43:50 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2020/07/30 11:43:50 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer (no changes)
2020/07/30 11:43:50 [DEBUG] Starting graph walk: walkRefresh
2020/07/30 11:43:50 [TRACE] dag/walk: updating graph
2020/07/30 11:43:50 [TRACE] dag/walk: added new vertex: "var.login"
2020/07/30 11:43:50 [TRACE] dag/walk: visiting "var.login"
2020/07/30 11:43:50 [TRACE] vertex "var.login": starting visit (*terraform.NodeRootVariable)
2020/07/30 11:43:50 [TRACE] vertex "var.login": evaluating
2020/07/30 11:43:50 [TRACE] [walkRefresh] Entering eval tree: var.login
2020/07/30 11:43:50 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:43:50 [TRACE] [walkRefresh] Exiting eval tree: var.login
2020/07/30 11:43:50 [TRACE] vertex "var.login": visit complete
2020/07/30 11:43:50 [INFO] backend/local: plan calling Plan
2020/07/30 11:43:50 [INFO] terraform: building graph: GraphTypePlan
2020/07/30 11:43:50 [TRACE] Executing graph transform *terraform.ConfigTransformer
2020/07/30 11:43:50 [TRACE] ConfigTransformer: Starting for path: 
2020/07/30 11:43:50 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
  ------
2020/07/30 11:43:50 [TRACE] Executing graph transform *terraform.LocalTransformer
2020/07/30 11:43:50 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2020/07/30 11:43:50 [TRACE] Executing graph transform *terraform.OutputTransformer
2020/07/30 11:43:50 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2020/07/30 11:43:50 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2020/07/30 11:43:50 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2020/07/30 11:43:50 [TRACE] Executing graph transform *terraform.StateTransformer
2020/07/30 11:43:50 [TRACE] StateTransformer: state is empty, so nothing to do
2020/07/30 11:43:50 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2020/07/30 11:43:50 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2020/07/30 11:43:50 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2020/07/30 11:43:50 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2020/07/30 11:43:50 [TRACE] AttachResourceConfigTransformer: attaching to "bizfly_instance.test" (*terraform.NodePlannableResource) config from main.tf:7,1-34
2020/07/30 11:43:50 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2020/07/30 11:43:50 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/30 11:43:50 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/30 11:43:50 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2020/07/30 11:43:50 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:43:50 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2020/07/30 11:43:50 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2020/07/30 11:43:50 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2020/07/30 11:43:50 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2020/07/30 11:43:50 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2020/07/30 11:43:50 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2020/07/30 11:43:50 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2020/07/30 11:43:50 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2020/07/30 11:43:50 [TRACE] ProviderConfigTransformer: attaching to "provider.bizfly" provider configuration from main.tf:1,1-18
2020/07/30 11:43:50 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:43:50 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2020/07/30 11:43:50 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2020/07/30 11:43:50 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2020/07/30 11:43:50 [TRACE] ProviderTransformer: bizfly_instance.test is provided by provider.bizfly or inherited equivalent
2020/07/30 11:43:50 [TRACE] ProviderTransformer: exact match for provider.bizfly serving bizfly_instance.test
2020/07/30 11:43:50 [DEBUG] ProviderTransformer: "bizfly_instance.test" (*terraform.NodePlannableResource) needs provider.bizfly
2020/07/30 11:43:50 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:43:50 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2020/07/30 11:43:50 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2020/07/30 11:43:50 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2020/07/30 11:43:50 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2020/07/30 11:43:50 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:43:50 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2020/07/30 11:43:50 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2020/07/30 11:43:50 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2020/07/30 11:43:50 [TRACE] AttachSchemaTransformer: attaching resource schema to bizfly_instance.test
2020/07/30 11:43:50 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.bizfly
2020/07/30 11:43:50 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2020/07/30 11:43:50 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/30 11:43:50 [DEBUG] ReferenceTransformer: "bizfly_instance.test" references: []
2020/07/30 11:43:50 [DEBUG] ReferenceTransformer: "var.login" references: []
2020/07/30 11:43:50 [DEBUG] ReferenceTransformer: "provider.bizfly" references: []
2020/07/30 11:43:50 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/30 11:43:50 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2020/07/30 11:43:50 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:43:50 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/30 11:43:50 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/30 11:43:50 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2020/07/30 11:43:50 [TRACE] ForcedCBDTransformer: "bizfly_instance.test" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2020/07/30 11:43:50 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2020/07/30 11:43:50 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2020/07/30 11:43:50 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
    bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:43:50 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2020/07/30 11:43:50 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer (no changes)
2020/07/30 11:43:50 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/30 11:43:50 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
    bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.bizfly (close) - *terraform.graphNodeCloseProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:43:50 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2020/07/30 11:43:50 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodePlannableResource
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
    bizfly_instance.test - *terraform.NodePlannableResource
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.bizfly (close) - *terraform.graphNodeCloseProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:43:50 [DEBUG] Starting graph walk: walkPlan
2020/07/30 11:43:50 [TRACE] dag/walk: updating graph
2020/07/30 11:43:50 [TRACE] dag/walk: added new vertex: "meta.count-boundary (EachMode fixup)"
2020/07/30 11:43:50 [TRACE] dag/walk: added new vertex: "provider.bizfly (close)"
2020/07/30 11:43:50 [TRACE] dag/walk: added new vertex: "root"
2020/07/30 11:43:50 [TRACE] dag/walk: added new vertex: "bizfly_instance.test"
2020/07/30 11:43:50 [TRACE] dag/walk: added new vertex: "var.login"
2020/07/30 11:43:50 [TRACE] dag/walk: added new vertex: "provider.bizfly"
2020/07/30 11:43:50 [TRACE] dag/walk: added edge: "provider.bizfly (close)" waiting on "bizfly_instance.test"
2020/07/30 11:43:50 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (EachMode fixup)"
2020/07/30 11:43:50 [TRACE] dag/walk: added edge: "root" waiting on "provider.bizfly (close)"
2020/07/30 11:43:50 [TRACE] dag/walk: added edge: "bizfly_instance.test" waiting on "provider.bizfly"
2020/07/30 11:43:50 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "var.login"
2020/07/30 11:43:50 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "bizfly_instance.test"
2020/07/30 11:43:50 [TRACE] dag/walk: dependencies changed for "provider.bizfly (close)", sending new deps
2020/07/30 11:43:50 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2020/07/30 11:43:50 [TRACE] dag/walk: dependencies changed for "bizfly_instance.test", sending new deps
2020/07/30 11:43:50 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (EachMode fixup)", sending new deps
2020/07/30 11:43:50 [TRACE] dag/walk: visiting "var.login"
2020/07/30 11:43:50 [TRACE] vertex "var.login": starting visit (*terraform.NodeRootVariable)
2020/07/30 11:43:50 [TRACE] dag/walk: visiting "provider.bizfly"
2020/07/30 11:43:50 [TRACE] vertex "var.login": evaluating
2020/07/30 11:43:50 [TRACE] vertex "provider.bizfly": starting visit (*terraform.NodeApplyableProvider)
2020/07/30 11:43:50 [TRACE] [walkPlan] Entering eval tree: var.login
2020/07/30 11:43:50 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:43:50 [TRACE] [walkPlan] Exiting eval tree: var.login
2020/07/30 11:43:50 [TRACE] vertex "provider.bizfly": evaluating
2020/07/30 11:43:50 [TRACE] vertex "var.login": visit complete
2020/07/30 11:43:50 [TRACE] [walkPlan] Entering eval tree: provider.bizfly
2020/07/30 11:43:50 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:43:50 [TRACE] <root>: eval: *terraform.EvalInitProvider
2020-07-30T11:43:50.136+0700 [INFO]  plugin: configuring client automatic mTLS
2020-07-30T11:43:50.164+0700 [DEBUG] plugin: starting plugin: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly args=[/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly]
2020-07-30T11:43:50.168+0700 [DEBUG] plugin: plugin started: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=58349
2020-07-30T11:43:50.168+0700 [DEBUG] plugin: waiting for RPC address: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly
2020-07-30T11:43:50.186+0700 [DEBUG] plugin.terraform-provider-bizfly: 2020/07/30 11:43:50 --------------
2020-07-30T11:43:50.186+0700 [INFO]  plugin.terraform-provider-bizfly: configuring server automatic mTLS: timestamp=2020-07-30T11:43:50.186+0700
2020-07-30T11:43:50.215+0700 [DEBUG] plugin.terraform-provider-bizfly: plugin address: address=/var/folders/0r/zdwrk7wn22vd_g32twvblrpc0000gn/T/plugin147661664 network=unix timestamp=2020-07-30T11:43:50.214+0700
2020-07-30T11:43:50.215+0700 [DEBUG] plugin: using plugin: version=5
2020/07/30 11:43:50 [TRACE] BuiltinEvalContext: Initialized "bizfly" provider for provider.bizfly
2020-07-30T11:43:50.266+0700 [TRACE] plugin.stdio: waiting for stdio data
2020/07/30 11:43:50 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:43:50 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:43:50 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/07/30 11:43:50 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:43:50 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 11:43:50 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/07/30 11:43:50 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:43:50 [TRACE] <root>: eval: *terraform.EvalConfigProvider
2020/07/30 11:43:50 [TRACE] buildProviderConfig for provider.bizfly: using explicit config only
2020/07/30 11:43:50 [TRACE] GRPCProvider: GetSchema
2020/07/30 11:43:50 [TRACE] GRPCProvider: Configure
2020/07/30 11:43:51 [TRACE] [walkPlan] Exiting eval tree: provider.bizfly
2020/07/30 11:43:51 [TRACE] vertex "provider.bizfly": visit complete
2020/07/30 11:43:51 [TRACE] dag/walk: visiting "bizfly_instance.test"
2020/07/30 11:43:51 [TRACE] vertex "bizfly_instance.test": starting visit (*terraform.NodePlannableResource)
2020/07/30 11:43:51 [TRACE] vertex "bizfly_instance.test": evaluating
2020/07/30 11:43:51 [TRACE] [walkPlan] Entering eval tree: bizfly_instance.test
2020/07/30 11:43:51 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/07/30 11:43:51 [TRACE] [walkPlan] Exiting eval tree: bizfly_instance.test
2020/07/30 11:43:51 [TRACE] vertex "bizfly_instance.test": expanding dynamic subgraph
2020/07/30 11:43:51 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/07/30 11:43:51 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResourceInstance
  ------
2020/07/30 11:43:51 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/07/30 11:43:51 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/07/30 11:43:51 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/30 11:43:51 [DEBUG] Resource instance state not found for node "bizfly_instance.test", instance bizfly_instance.test
2020/07/30 11:43:51 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/30 11:43:51 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/30 11:43:51 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/30 11:43:51 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/30 11:43:51 [DEBUG] ReferenceTransformer: "bizfly_instance.test" references: []
2020/07/30 11:43:51 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/30 11:43:51 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/30 11:43:51 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/07/30 11:43:51 [TRACE] vertex "bizfly_instance.test": entering dynamic subgraph
2020/07/30 11:43:51 [TRACE] dag/walk: updating graph
2020/07/30 11:43:51 [TRACE] dag/walk: added new vertex: "bizfly_instance.test"
2020/07/30 11:43:51 [TRACE] dag/walk: visiting "bizfly_instance.test"
2020/07/30 11:43:51 [TRACE] vertex "bizfly_instance.test": starting visit (*terraform.NodePlannableResourceInstance)
2020/07/30 11:43:51 [TRACE] vertex "bizfly_instance.test": evaluating
2020/07/30 11:43:51 [TRACE] [walkPlan] Entering eval tree: bizfly_instance.test
2020/07/30 11:43:51 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:43:51 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 11:43:51 [TRACE] <root>: eval: *terraform.EvalReadState
2020/07/30 11:43:51 [TRACE] EvalReadState: reading state for bizfly_instance.test
2020/07/30 11:43:51 [TRACE] EvalReadState: no state present for bizfly_instance.test
2020/07/30 11:43:51 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2020/07/30 11:43:51 [TRACE] <root>: eval: *terraform.EvalDiff
2020/07/30 11:43:52 [TRACE] Re-validating config for "bizfly_instance.test"
2020/07/30 11:43:52 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/07/30 11:43:52 [TRACE] GRPCProvider: PlanResourceChange
2020/07/30 11:43:52 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2020/07/30 11:43:52 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/07/30 11:43:52 [TRACE] EvalWriteState: writing current state object for bizfly_instance.test
2020/07/30 11:43:52 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/07/30 11:43:52 [TRACE] EvalWriteDiff: recorded Create change for bizfly_instance.test
2020/07/30 11:43:52 [TRACE] [walkPlan] Exiting eval tree: bizfly_instance.test
2020/07/30 11:43:52 [TRACE] vertex "bizfly_instance.test": visit complete
2020/07/30 11:43:52 [TRACE] vertex "bizfly_instance.test": dynamic subgraph completed successfully
2020/07/30 11:43:52 [TRACE] vertex "bizfly_instance.test": visit complete
2020/07/30 11:43:52 [TRACE] dag/walk: visiting "provider.bizfly (close)"
2020/07/30 11:43:52 [TRACE] vertex "provider.bizfly (close)": starting visit (*terraform.graphNodeCloseProvider)
2020/07/30 11:43:52 [TRACE] vertex "provider.bizfly (close)": evaluating
2020/07/30 11:43:52 [TRACE] [walkPlan] Entering eval tree: provider.bizfly (close)
2020/07/30 11:43:52 [TRACE] <root>: eval: *terraform.EvalCloseProvider
2020/07/30 11:43:52 [TRACE] GRPCProvider: Close
2020/07/30 11:43:52 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2020/07/30 11:43:52 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2020/07/30 11:43:52 [TRACE] vertex "meta.count-boundary (EachMode fixup)": evaluating
2020/07/30 11:43:52 [TRACE] [walkPlan] Entering eval tree: meta.count-boundary (EachMode fixup)
2020/07/30 11:43:52 [TRACE] <root>: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2020/07/30 11:43:52 [TRACE] [walkPlan] Exiting eval tree: meta.count-boundary (EachMode fixup)
2020/07/30 11:43:52 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2020-07-30T11:43:52.004+0700 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2020-07-30T11:43:52.007+0700 [DEBUG] plugin: plugin process exited: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=58349
2020-07-30T11:43:52.007+0700 [DEBUG] plugin: plugin exited
2020/07/30 11:43:52 [TRACE] [walkPlan] Exiting eval tree: provider.bizfly (close)
2020/07/30 11:43:52 [TRACE] vertex "provider.bizfly (close)": visit complete
2020/07/30 11:43:52 [TRACE] dag/walk: visiting "root"
2020/07/30 11:43:52 [TRACE] vertex "root": starting visit (terraform.graphNodeRoot)
2020/07/30 11:43:52 [TRACE] vertex "root": visit complete
2020/07/30 11:43:52 [INFO] backend/local: plan operation completed
2020/07/30 11:43:52 [TRACE] statemgr.Filesystem: removing lock metadata file .terraform.tfstate.lock.info
2020/07/30 11:43:52 [TRACE] statemgr.Filesystem: unlocking terraform.tfstate using fcntl flock
2020/07/30 11:44:08 [INFO] Terraform version: 0.12.29  
2020/07/30 11:44:08 [INFO] Go runtime version: go1.13.14
2020/07/30 11:44:08 [INFO] CLI args: []string{"/usr/local/bin/terraform", "apply"}
2020/07/30 11:44:08 [DEBUG] Attempting to open CLI config file: /Users/hung/.terraformrc
2020/07/30 11:44:08 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2020/07/30 11:44:08 [INFO] CLI command args: []string{"apply"}
2020/07/30 11:44:08 [TRACE] Meta.Backend: no config given or present on disk, so returning nil config
2020/07/30 11:44:08 [TRACE] Meta.Backend: backend has not previously been initialized in this working directory
2020/07/30 11:44:08 [DEBUG] New state was assigned lineage "2cf749e9-a76e-4962-20d1-2e0bfcc54c92"
2020/07/30 11:44:08 [TRACE] Meta.Backend: using default local state only (no backend configuration, and no existing initialized backend)
2020/07/30 11:44:08 [TRACE] Meta.Backend: instantiated backend of type <nil>
2020/07/30 11:44:08 [DEBUG] checking for provider in "."
2020/07/30 11:44:08 [WARN] found legacy provider "terraform-provider-bizfly"
2020/07/30 11:44:08 [DEBUG] checking for provider in "/usr/local/bin"
2020/07/30 11:44:08 [DEBUG] checking for provider in ".terraform/plugins/darwin_amd64"
2020/07/30 11:44:08 [DEBUG] found valid plugin: "bizfly", "0.0.0", "/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly"
2020/07/30 11:44:08 [DEBUG] checking for provisioner in "."
2020/07/30 11:44:08 [DEBUG] checking for provisioner in "/usr/local/bin"
2020/07/30 11:44:08 [DEBUG] checking for provisioner in ".terraform/plugins/darwin_amd64"
2020/07/30 11:44:08 [TRACE] Meta.Backend: backend <nil> does not support operations, so wrapping it in a local backend
2020/07/30 11:44:08 [INFO] backend/local: starting Apply operation
2020/07/30 11:44:08 [TRACE] backend/local: requesting state manager for workspace "default"
2020/07/30 11:44:08 [TRACE] backend/local: state manager for workspace "default" will:
 - read initial snapshot from terraform.tfstate
 - write new snapshots to terraform.tfstate
 - create any backup at terraform.tfstate.backup
2020/07/30 11:44:08 [TRACE] backend/local: requesting state lock for workspace "default"
2020/07/30 11:44:08 [TRACE] statemgr.Filesystem: preparing to manage state snapshots at terraform.tfstate
2020/07/30 11:44:08 [TRACE] statemgr.Filesystem: existing snapshot has lineage "8e1934d5-1d8f-e9a8-58e8-6c54c3aa209a" serial 1
2020/07/30 11:44:08 [TRACE] statemgr.Filesystem: locking terraform.tfstate using fcntl flock
2020/07/30 11:44:08 [TRACE] statemgr.Filesystem: writing lock metadata to .terraform.tfstate.lock.info
2020/07/30 11:44:08 [TRACE] backend/local: reading remote state for workspace "default"
2020/07/30 11:44:08 [TRACE] statemgr.Filesystem: reading latest snapshot from terraform.tfstate
2020/07/30 11:44:08 [TRACE] statemgr.Filesystem: read snapshot with lineage "8e1934d5-1d8f-e9a8-58e8-6c54c3aa209a" serial 1
2020/07/30 11:44:08 [TRACE] backend/local: retrieving local state snapshot for workspace "default"
2020/07/30 11:44:08 [TRACE] backend/local: building context for current working directory
2020/07/30 11:44:08 [TRACE] terraform.NewContext: starting
2020/07/30 11:44:08 [TRACE] terraform.NewContext: resolving provider version selections
2020/07/30 11:44:08 [TRACE] terraform.NewContext: loading provider schemas
2020/07/30 11:44:08 [TRACE] LoadSchemas: retrieving schema for provider type "bizfly"
2020-07-30T11:44:08.414+0700 [INFO]  plugin: configuring client automatic mTLS
2020-07-30T11:44:08.446+0700 [DEBUG] plugin: starting plugin: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly args=[/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly]
2020-07-30T11:44:08.451+0700 [DEBUG] plugin: plugin started: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=58391
2020-07-30T11:44:08.451+0700 [DEBUG] plugin: waiting for RPC address: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly
2020-07-30T11:44:08.472+0700 [DEBUG] plugin.terraform-provider-bizfly: 2020/07/30 11:44:08 --------------
2020-07-30T11:44:08.472+0700 [INFO]  plugin.terraform-provider-bizfly: configuring server automatic mTLS: timestamp=2020-07-30T11:44:08.472+0700
2020-07-30T11:44:08.500+0700 [DEBUG] plugin.terraform-provider-bizfly: plugin address: network=unix address=/var/folders/0r/zdwrk7wn22vd_g32twvblrpc0000gn/T/plugin638743562 timestamp=2020-07-30T11:44:08.500+0700
2020-07-30T11:44:08.500+0700 [DEBUG] plugin: using plugin: version=5
2020/07/30 11:44:08 [TRACE] GRPCProvider: GetSchema
2020-07-30T11:44:08.552+0700 [TRACE] plugin.stdio: waiting for stdio data
2020/07/30 11:44:08 [TRACE] GRPCProvider: Close
2020-07-30T11:44:08.554+0700 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2020-07-30T11:44:08.556+0700 [DEBUG] plugin: plugin process exited: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=58391
2020-07-30T11:44:08.556+0700 [DEBUG] plugin: plugin exited
2020/07/30 11:44:08 [TRACE] terraform.NewContext: complete
2020/07/30 11:44:08 [TRACE] backend/local: finished building terraform.Context
2020/07/30 11:44:08 [TRACE] backend/local: requesting interactive input, if necessary
2020/07/30 11:44:08 [TRACE] Context.Input: Prompting for provider arguments
2020/07/30 11:44:08 [TRACE] Context.Input: Provider provider.bizfly declared at main.tf:1,1-18
2020/07/30 11:44:08 [TRACE] Context.Input: Input for provider.bizfly: map[string]cty.Value{}
2020/07/30 11:44:08 [TRACE] backend/local: running validation operation
2020/07/30 11:44:08 [INFO] terraform: building graph: GraphTypeValidate
2020/07/30 11:44:08 [TRACE] Executing graph transform *terraform.ConfigTransformer
2020/07/30 11:44:08 [TRACE] ConfigTransformer: Starting for path: 
2020/07/30 11:44:08 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
  ------
2020/07/30 11:44:08 [TRACE] Executing graph transform *terraform.LocalTransformer
2020/07/30 11:44:08 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2020/07/30 11:44:08 [TRACE] Executing graph transform *terraform.OutputTransformer
2020/07/30 11:44:08 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2020/07/30 11:44:08 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2020/07/30 11:44:08 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2020/07/30 11:44:08 [TRACE] Executing graph transform *terraform.StateTransformer
2020/07/30 11:44:08 [TRACE] StateTransformer: state is empty, so nothing to do
2020/07/30 11:44:08 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2020/07/30 11:44:08 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2020/07/30 11:44:08 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2020/07/30 11:44:08 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2020/07/30 11:44:08 [TRACE] AttachResourceConfigTransformer: attaching to "bizfly_instance.test" (*terraform.NodeValidatableResource) config from main.tf:7,1-34
2020/07/30 11:44:08 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2020/07/30 11:44:08 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/30 11:44:08 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/30 11:44:08 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2020/07/30 11:44:08 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:44:08 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2020/07/30 11:44:08 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2020/07/30 11:44:08 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2020/07/30 11:44:08 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2020/07/30 11:44:08 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2020/07/30 11:44:08 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2020/07/30 11:44:08 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2020/07/30 11:44:08 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2020/07/30 11:44:08 [TRACE] ProviderConfigTransformer: attaching to "provider.bizfly" provider configuration from main.tf:1,1-18
2020/07/30 11:44:08 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:44:08 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2020/07/30 11:44:08 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2020/07/30 11:44:08 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2020/07/30 11:44:08 [TRACE] ProviderTransformer: bizfly_instance.test is provided by provider.bizfly or inherited equivalent
2020/07/30 11:44:08 [TRACE] ProviderTransformer: exact match for provider.bizfly serving bizfly_instance.test
2020/07/30 11:44:08 [DEBUG] ProviderTransformer: "bizfly_instance.test" (*terraform.NodeValidatableResource) needs provider.bizfly
2020/07/30 11:44:08 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:44:08 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2020/07/30 11:44:08 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2020/07/30 11:44:08 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2020/07/30 11:44:08 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2020/07/30 11:44:08 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:44:08 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2020/07/30 11:44:08 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2020/07/30 11:44:08 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2020/07/30 11:44:08 [TRACE] AttachSchemaTransformer: attaching resource schema to bizfly_instance.test
2020/07/30 11:44:08 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.bizfly
2020/07/30 11:44:08 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2020/07/30 11:44:08 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/30 11:44:08 [DEBUG] ReferenceTransformer: "bizfly_instance.test" references: []
2020/07/30 11:44:08 [DEBUG] ReferenceTransformer: "var.login" references: []
2020/07/30 11:44:08 [DEBUG] ReferenceTransformer: "provider.bizfly" references: []
2020/07/30 11:44:08 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/30 11:44:08 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2020/07/30 11:44:08 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:44:08 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/30 11:44:08 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/30 11:44:08 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2020/07/30 11:44:08 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2020/07/30 11:44:08 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2020/07/30 11:44:08 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
    bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:44:08 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2020/07/30 11:44:08 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer (no changes)
2020/07/30 11:44:08 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/30 11:44:08 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
    bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.bizfly (close) - *terraform.graphNodeCloseProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:44:08 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2020/07/30 11:44:08 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  bizfly_instance.test - *terraform.NodeValidatableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodeValidatableResource
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
    bizfly_instance.test - *terraform.NodeValidatableResource
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.bizfly (close) - *terraform.graphNodeCloseProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:44:08 [DEBUG] Starting graph walk: walkValidate
2020/07/30 11:44:08 [TRACE] dag/walk: updating graph
2020/07/30 11:44:08 [TRACE] dag/walk: added new vertex: "meta.count-boundary (EachMode fixup)"
2020/07/30 11:44:08 [TRACE] dag/walk: added new vertex: "provider.bizfly (close)"
2020/07/30 11:44:08 [TRACE] dag/walk: added new vertex: "root"
2020/07/30 11:44:08 [TRACE] dag/walk: added new vertex: "bizfly_instance.test"
2020/07/30 11:44:08 [TRACE] dag/walk: added new vertex: "var.login"
2020/07/30 11:44:08 [TRACE] dag/walk: added new vertex: "provider.bizfly"
2020/07/30 11:44:08 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (EachMode fixup)"
2020/07/30 11:44:08 [TRACE] dag/walk: added edge: "root" waiting on "provider.bizfly (close)"
2020/07/30 11:44:08 [TRACE] dag/walk: added edge: "bizfly_instance.test" waiting on "provider.bizfly"
2020/07/30 11:44:08 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "bizfly_instance.test"
2020/07/30 11:44:08 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "var.login"
2020/07/30 11:44:08 [TRACE] dag/walk: added edge: "provider.bizfly (close)" waiting on "bizfly_instance.test"
2020/07/30 11:44:08 [TRACE] dag/walk: dependencies changed for "bizfly_instance.test", sending new deps
2020/07/30 11:44:08 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (EachMode fixup)", sending new deps
2020/07/30 11:44:08 [TRACE] dag/walk: dependencies changed for "provider.bizfly (close)", sending new deps
2020/07/30 11:44:08 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2020/07/30 11:44:08 [TRACE] dag/walk: visiting "var.login"
2020/07/30 11:44:08 [TRACE] vertex "var.login": starting visit (*terraform.NodeRootVariable)
2020/07/30 11:44:08 [TRACE] dag/walk: visiting "provider.bizfly"
2020/07/30 11:44:08 [TRACE] vertex "var.login": evaluating
2020/07/30 11:44:08 [TRACE] vertex "provider.bizfly": starting visit (*terraform.NodeApplyableProvider)
2020/07/30 11:44:08 [TRACE] [walkValidate] Entering eval tree: var.login
2020/07/30 11:44:08 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:44:08 [TRACE] vertex "provider.bizfly": evaluating
2020/07/30 11:44:08 [TRACE] [walkValidate] Exiting eval tree: var.login
2020/07/30 11:44:08 [TRACE] [walkValidate] Entering eval tree: provider.bizfly
2020/07/30 11:44:08 [TRACE] vertex "var.login": visit complete
2020/07/30 11:44:08 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:44:08 [TRACE] <root>: eval: *terraform.EvalInitProvider
2020-07-30T11:44:08.558+0700 [INFO]  plugin: configuring client automatic mTLS
2020-07-30T11:44:08.582+0700 [DEBUG] plugin: starting plugin: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly args=[/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly]
2020-07-30T11:44:08.585+0700 [DEBUG] plugin: plugin started: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=58392
2020-07-30T11:44:08.585+0700 [DEBUG] plugin: waiting for RPC address: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly
2020-07-30T11:44:08.603+0700 [DEBUG] plugin.terraform-provider-bizfly: 2020/07/30 11:44:08 --------------
2020-07-30T11:44:08.603+0700 [INFO]  plugin.terraform-provider-bizfly: configuring server automatic mTLS: timestamp=2020-07-30T11:44:08.603+0700
2020-07-30T11:44:08.630+0700 [DEBUG] plugin.terraform-provider-bizfly: plugin address: network=unix address=/var/folders/0r/zdwrk7wn22vd_g32twvblrpc0000gn/T/plugin697526127 timestamp=2020-07-30T11:44:08.630+0700
2020-07-30T11:44:08.630+0700 [DEBUG] plugin: using plugin: version=5
2020/07/30 11:44:08 [TRACE] BuiltinEvalContext: Initialized "bizfly" provider for provider.bizfly
2020/07/30 11:44:08 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:44:08 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/07/30 11:44:08 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:44:08 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 11:44:08 [TRACE] <root>: eval: *terraform.EvalValidateProvider
2020-07-30T11:44:08.683+0700 [TRACE] plugin.stdio: waiting for stdio data
2020/07/30 11:44:08 [TRACE] buildProviderConfig for provider.bizfly: using explicit config only
2020/07/30 11:44:08 [TRACE] GRPCProvider: GetSchema
2020/07/30 11:44:08 [TRACE] GRPCProvider: PrepareProviderConfig
2020/07/30 11:44:08 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:44:08 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:44:08 [TRACE] [walkValidate] Exiting eval tree: provider.bizfly
2020/07/30 11:44:08 [TRACE] vertex "provider.bizfly": visit complete
2020/07/30 11:44:08 [TRACE] dag/walk: visiting "bizfly_instance.test"
2020/07/30 11:44:08 [TRACE] vertex "bizfly_instance.test": starting visit (*terraform.NodeValidatableResource)
2020/07/30 11:44:08 [TRACE] vertex "bizfly_instance.test": evaluating
2020/07/30 11:44:08 [TRACE] [walkValidate] Entering eval tree: bizfly_instance.test
2020/07/30 11:44:08 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:44:08 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 11:44:08 [TRACE] <root>: eval: *terraform.EvalValidateResource
2020/07/30 11:44:08 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/07/30 11:44:08 [TRACE] [walkValidate] Exiting eval tree: bizfly_instance.test
2020/07/30 11:44:08 [TRACE] vertex "bizfly_instance.test": visit complete
2020/07/30 11:44:08 [TRACE] dag/walk: visiting "provider.bizfly (close)"
2020/07/30 11:44:08 [TRACE] vertex "provider.bizfly (close)": starting visit (*terraform.graphNodeCloseProvider)
2020/07/30 11:44:08 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2020/07/30 11:44:08 [TRACE] vertex "provider.bizfly (close)": evaluating
2020/07/30 11:44:08 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2020/07/30 11:44:08 [TRACE] [walkValidate] Entering eval tree: provider.bizfly (close)
2020/07/30 11:44:08 [TRACE] vertex "meta.count-boundary (EachMode fixup)": evaluating
2020/07/30 11:44:08 [TRACE] <root>: eval: *terraform.EvalCloseProvider
2020/07/30 11:44:08 [TRACE] GRPCProvider: Close
2020/07/30 11:44:08 [TRACE] [walkValidate] Entering eval tree: meta.count-boundary (EachMode fixup)
2020/07/30 11:44:08 [TRACE] <root>: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2020/07/30 11:44:08 [TRACE] [walkValidate] Exiting eval tree: meta.count-boundary (EachMode fixup)
2020/07/30 11:44:08 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2020-07-30T11:44:08.687+0700 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2020-07-30T11:44:08.688+0700 [DEBUG] plugin: plugin process exited: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=58392
2020-07-30T11:44:08.688+0700 [DEBUG] plugin: plugin exited
2020/07/30 11:44:08 [TRACE] [walkValidate] Exiting eval tree: provider.bizfly (close)
2020/07/30 11:44:08 [TRACE] vertex "provider.bizfly (close)": visit complete
2020/07/30 11:44:08 [TRACE] dag/walk: visiting "root"
2020/07/30 11:44:08 [TRACE] vertex "root": starting visit (terraform.graphNodeRoot)
2020/07/30 11:44:08 [TRACE] vertex "root": visit complete
2020/07/30 11:44:08 [INFO] backend/local: apply calling Refresh
2020/07/30 11:44:08 [INFO] terraform: building graph: GraphTypeRefresh
2020/07/30 11:44:08 [TRACE] No managed resources in state during refresh; skipping managed resource transformer
2020/07/30 11:44:08 [TRACE] Executing graph transform *terraform.ConfigTransformer
2020/07/30 11:44:08 [TRACE] ConfigTransformer: Starting for path: 
2020/07/30 11:44:08 [TRACE] Completed graph transform *terraform.ConfigTransformer (no changes)
2020/07/30 11:44:08 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2020/07/30 11:44:08 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2020/07/30 11:44:08 [TRACE] Executing graph transform *terraform.StateTransformer
2020/07/30 11:44:08 [TRACE] StateTransformer: state is empty, so nothing to do
2020/07/30 11:44:08 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2020/07/30 11:44:08 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/30 11:44:08 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/30 11:44:08 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2020/07/30 11:44:08 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2020/07/30 11:44:08 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2020/07/30 11:44:08 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:44:08 [TRACE] Executing graph transform *terraform.LocalTransformer
2020/07/30 11:44:08 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2020/07/30 11:44:08 [TRACE] Executing graph transform *terraform.OutputTransformer
2020/07/30 11:44:08 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2020/07/30 11:44:08 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2020/07/30 11:44:08 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2020/07/30 11:44:08 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2020/07/30 11:44:08 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2020/07/30 11:44:08 [TRACE] ProviderConfigTransformer: attaching to "provider.bizfly" provider configuration from main.tf:1,1-18
2020/07/30 11:44:08 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:44:08 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2020/07/30 11:44:08 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2020/07/30 11:44:08 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2020/07/30 11:44:08 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer (no changes)
2020/07/30 11:44:08 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2020/07/30 11:44:08 [DEBUG] pruning unused provider.bizfly
2020/07/30 11:44:08 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer with new graph:
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:44:08 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2020/07/30 11:44:08 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2020/07/30 11:44:08 [TRACE] Completed graph transform *terraform.graphTransformerMulti (no changes)
2020/07/30 11:44:08 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2020/07/30 11:44:08 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2020/07/30 11:44:08 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/30 11:44:08 [DEBUG] ReferenceTransformer: "var.login" references: []
2020/07/30 11:44:08 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/30 11:44:08 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2020/07/30 11:44:08 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2020/07/30 11:44:08 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/30 11:44:08 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/30 11:44:08 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2020/07/30 11:44:08 [TRACE] Completed graph transform *terraform.CloseProviderTransformer (no changes)
2020/07/30 11:44:08 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/30 11:44:08 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/07/30 11:44:08 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2020/07/30 11:44:08 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer (no changes)
2020/07/30 11:44:08 [DEBUG] Starting graph walk: walkRefresh
2020/07/30 11:44:08 [TRACE] dag/walk: updating graph
2020/07/30 11:44:08 [TRACE] dag/walk: added new vertex: "var.login"
2020/07/30 11:44:08 [TRACE] dag/walk: visiting "var.login"
2020/07/30 11:44:08 [TRACE] vertex "var.login": starting visit (*terraform.NodeRootVariable)
2020/07/30 11:44:08 [TRACE] vertex "var.login": evaluating
2020/07/30 11:44:08 [TRACE] [walkRefresh] Entering eval tree: var.login
2020/07/30 11:44:08 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:44:08 [TRACE] [walkRefresh] Exiting eval tree: var.login
2020/07/30 11:44:08 [TRACE] vertex "var.login": visit complete
2020/07/30 11:44:08 [INFO] backend/local: apply calling Plan
2020/07/30 11:44:08 [INFO] terraform: building graph: GraphTypePlan
2020/07/30 11:44:08 [TRACE] Executing graph transform *terraform.ConfigTransformer
2020/07/30 11:44:08 [TRACE] ConfigTransformer: Starting for path: 
2020/07/30 11:44:08 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
  ------
2020/07/30 11:44:08 [TRACE] Executing graph transform *terraform.LocalTransformer
2020/07/30 11:44:08 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2020/07/30 11:44:08 [TRACE] Executing graph transform *terraform.OutputTransformer
2020/07/30 11:44:08 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2020/07/30 11:44:08 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2020/07/30 11:44:08 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2020/07/30 11:44:08 [TRACE] Executing graph transform *terraform.StateTransformer
2020/07/30 11:44:08 [TRACE] StateTransformer: state is empty, so nothing to do
2020/07/30 11:44:08 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2020/07/30 11:44:08 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2020/07/30 11:44:08 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2020/07/30 11:44:08 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2020/07/30 11:44:08 [TRACE] AttachResourceConfigTransformer: attaching to "bizfly_instance.test" (*terraform.NodePlannableResource) config from main.tf:7,1-34
2020/07/30 11:44:08 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2020/07/30 11:44:08 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/30 11:44:08 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/30 11:44:08 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2020/07/30 11:44:08 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:44:08 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2020/07/30 11:44:08 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2020/07/30 11:44:08 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2020/07/30 11:44:08 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2020/07/30 11:44:08 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2020/07/30 11:44:08 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2020/07/30 11:44:08 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2020/07/30 11:44:08 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2020/07/30 11:44:08 [TRACE] ProviderConfigTransformer: attaching to "provider.bizfly" provider configuration from main.tf:1,1-18
2020/07/30 11:44:08 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:44:08 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2020/07/30 11:44:08 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2020/07/30 11:44:08 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2020/07/30 11:44:08 [TRACE] ProviderTransformer: bizfly_instance.test is provided by provider.bizfly or inherited equivalent
2020/07/30 11:44:08 [TRACE] ProviderTransformer: exact match for provider.bizfly serving bizfly_instance.test
2020/07/30 11:44:08 [DEBUG] ProviderTransformer: "bizfly_instance.test" (*terraform.NodePlannableResource) needs provider.bizfly
2020/07/30 11:44:08 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:44:08 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2020/07/30 11:44:08 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2020/07/30 11:44:08 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2020/07/30 11:44:08 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2020/07/30 11:44:08 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:44:08 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2020/07/30 11:44:08 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2020/07/30 11:44:08 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2020/07/30 11:44:08 [TRACE] AttachSchemaTransformer: attaching resource schema to bizfly_instance.test
2020/07/30 11:44:08 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.bizfly
2020/07/30 11:44:08 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2020/07/30 11:44:08 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/30 11:44:08 [DEBUG] ReferenceTransformer: "provider.bizfly" references: []
2020/07/30 11:44:08 [DEBUG] ReferenceTransformer: "bizfly_instance.test" references: []
2020/07/30 11:44:08 [DEBUG] ReferenceTransformer: "var.login" references: []
2020/07/30 11:44:08 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/30 11:44:08 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2020/07/30 11:44:08 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:44:08 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/30 11:44:08 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/30 11:44:08 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2020/07/30 11:44:08 [TRACE] ForcedCBDTransformer: "bizfly_instance.test" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2020/07/30 11:44:08 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2020/07/30 11:44:08 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2020/07/30 11:44:08 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
    bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:44:08 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2020/07/30 11:44:08 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer (no changes)
2020/07/30 11:44:08 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/30 11:44:08 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
    bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.bizfly (close) - *terraform.graphNodeCloseProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:44:08 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2020/07/30 11:44:08 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodePlannableResource
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
    bizfly_instance.test - *terraform.NodePlannableResource
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.bizfly (close) - *terraform.graphNodeCloseProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:44:08 [DEBUG] Starting graph walk: walkPlan
2020/07/30 11:44:08 [TRACE] dag/walk: updating graph
2020/07/30 11:44:08 [TRACE] dag/walk: added new vertex: "provider.bizfly (close)"
2020/07/30 11:44:08 [TRACE] dag/walk: added new vertex: "root"
2020/07/30 11:44:08 [TRACE] dag/walk: added new vertex: "bizfly_instance.test"
2020/07/30 11:44:08 [TRACE] dag/walk: added new vertex: "var.login"
2020/07/30 11:44:08 [TRACE] dag/walk: added new vertex: "provider.bizfly"
2020/07/30 11:44:08 [TRACE] dag/walk: added new vertex: "meta.count-boundary (EachMode fixup)"
2020/07/30 11:44:08 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (EachMode fixup)"
2020/07/30 11:44:08 [TRACE] dag/walk: added edge: "root" waiting on "provider.bizfly (close)"
2020/07/30 11:44:08 [TRACE] dag/walk: added edge: "bizfly_instance.test" waiting on "provider.bizfly"
2020/07/30 11:44:08 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "bizfly_instance.test"
2020/07/30 11:44:08 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "var.login"
2020/07/30 11:44:08 [TRACE] dag/walk: added edge: "provider.bizfly (close)" waiting on "bizfly_instance.test"
2020/07/30 11:44:08 [TRACE] dag/walk: dependencies changed for "bizfly_instance.test", sending new deps
2020/07/30 11:44:08 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (EachMode fixup)", sending new deps
2020/07/30 11:44:08 [TRACE] dag/walk: dependencies changed for "provider.bizfly (close)", sending new deps
2020/07/30 11:44:08 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2020/07/30 11:44:08 [TRACE] dag/walk: visiting "var.login"
2020/07/30 11:44:08 [TRACE] vertex "var.login": starting visit (*terraform.NodeRootVariable)
2020/07/30 11:44:08 [TRACE] vertex "var.login": evaluating
2020/07/30 11:44:08 [TRACE] [walkPlan] Entering eval tree: var.login
2020/07/30 11:44:08 [TRACE] dag/walk: visiting "provider.bizfly"
2020/07/30 11:44:08 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:44:08 [TRACE] vertex "provider.bizfly": starting visit (*terraform.NodeApplyableProvider)
2020/07/30 11:44:08 [TRACE] [walkPlan] Exiting eval tree: var.login
2020/07/30 11:44:08 [TRACE] vertex "var.login": visit complete
2020/07/30 11:44:08 [TRACE] vertex "provider.bizfly": evaluating
2020/07/30 11:44:08 [TRACE] [walkPlan] Entering eval tree: provider.bizfly
2020/07/30 11:44:08 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:44:08 [TRACE] <root>: eval: *terraform.EvalInitProvider
2020-07-30T11:44:08.690+0700 [INFO]  plugin: configuring client automatic mTLS
2020-07-30T11:44:08.715+0700 [DEBUG] plugin: starting plugin: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly args=[/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly]
2020-07-30T11:44:08.719+0700 [DEBUG] plugin: plugin started: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=58393
2020-07-30T11:44:08.720+0700 [DEBUG] plugin: waiting for RPC address: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly
2020-07-30T11:44:08.737+0700 [DEBUG] plugin.terraform-provider-bizfly: 2020/07/30 11:44:08 --------------
2020-07-30T11:44:08.738+0700 [INFO]  plugin.terraform-provider-bizfly: configuring server automatic mTLS: timestamp=2020-07-30T11:44:08.737+0700
2020-07-30T11:44:08.763+0700 [DEBUG] plugin.terraform-provider-bizfly: plugin address: address=/var/folders/0r/zdwrk7wn22vd_g32twvblrpc0000gn/T/plugin497611564 network=unix timestamp=2020-07-30T11:44:08.763+0700
2020-07-30T11:44:08.763+0700 [DEBUG] plugin: using plugin: version=5
2020/07/30 11:44:08 [TRACE] BuiltinEvalContext: Initialized "bizfly" provider for provider.bizfly
2020/07/30 11:44:08 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:44:08 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:44:08 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020-07-30T11:44:08.819+0700 [TRACE] plugin.stdio: waiting for stdio data
2020/07/30 11:44:08 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:44:08 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 11:44:08 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/07/30 11:44:08 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:44:08 [TRACE] <root>: eval: *terraform.EvalConfigProvider
2020/07/30 11:44:08 [TRACE] buildProviderConfig for provider.bizfly: using explicit config only
2020/07/30 11:44:08 [TRACE] GRPCProvider: GetSchema
2020/07/30 11:44:08 [TRACE] GRPCProvider: Configure
2020/07/30 11:44:10 [TRACE] [walkPlan] Exiting eval tree: provider.bizfly
2020/07/30 11:44:10 [TRACE] vertex "provider.bizfly": visit complete
2020/07/30 11:44:10 [TRACE] dag/walk: visiting "bizfly_instance.test"
2020/07/30 11:44:10 [TRACE] vertex "bizfly_instance.test": starting visit (*terraform.NodePlannableResource)
2020/07/30 11:44:10 [TRACE] vertex "bizfly_instance.test": evaluating
2020/07/30 11:44:10 [TRACE] [walkPlan] Entering eval tree: bizfly_instance.test
2020/07/30 11:44:10 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/07/30 11:44:10 [TRACE] [walkPlan] Exiting eval tree: bizfly_instance.test
2020/07/30 11:44:10 [TRACE] vertex "bizfly_instance.test": expanding dynamic subgraph
2020/07/30 11:44:10 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/07/30 11:44:10 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  bizfly_instance.test - *terraform.NodePlannableResourceInstance
  ------
2020/07/30 11:44:10 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/07/30 11:44:10 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/07/30 11:44:10 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/30 11:44:10 [DEBUG] Resource instance state not found for node "bizfly_instance.test", instance bizfly_instance.test
2020/07/30 11:44:10 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/30 11:44:10 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/30 11:44:10 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/30 11:44:10 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/30 11:44:10 [DEBUG] ReferenceTransformer: "bizfly_instance.test" references: []
2020/07/30 11:44:10 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/30 11:44:10 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/30 11:44:10 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/07/30 11:44:10 [TRACE] vertex "bizfly_instance.test": entering dynamic subgraph
2020/07/30 11:44:10 [TRACE] dag/walk: updating graph
2020/07/30 11:44:10 [TRACE] dag/walk: added new vertex: "bizfly_instance.test"
2020/07/30 11:44:10 [TRACE] dag/walk: visiting "bizfly_instance.test"
2020/07/30 11:44:10 [TRACE] vertex "bizfly_instance.test": starting visit (*terraform.NodePlannableResourceInstance)
2020/07/30 11:44:10 [TRACE] vertex "bizfly_instance.test": evaluating
2020/07/30 11:44:10 [TRACE] [walkPlan] Entering eval tree: bizfly_instance.test
2020/07/30 11:44:10 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:44:10 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 11:44:10 [TRACE] <root>: eval: *terraform.EvalReadState
2020/07/30 11:44:10 [TRACE] EvalReadState: reading state for bizfly_instance.test
2020/07/30 11:44:10 [TRACE] EvalReadState: no state present for bizfly_instance.test
2020/07/30 11:44:10 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2020/07/30 11:44:10 [TRACE] <root>: eval: *terraform.EvalDiff
2020/07/30 11:44:10 [TRACE] Re-validating config for "bizfly_instance.test"
2020/07/30 11:44:10 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/07/30 11:44:10 [TRACE] GRPCProvider: PlanResourceChange
2020/07/30 11:44:10 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2020/07/30 11:44:10 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/07/30 11:44:10 [TRACE] EvalWriteState: writing current state object for bizfly_instance.test
2020/07/30 11:44:10 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/07/30 11:44:10 [TRACE] EvalWriteDiff: recorded Create change for bizfly_instance.test
2020/07/30 11:44:10 [TRACE] [walkPlan] Exiting eval tree: bizfly_instance.test
2020/07/30 11:44:10 [TRACE] vertex "bizfly_instance.test": visit complete
2020/07/30 11:44:10 [TRACE] vertex "bizfly_instance.test": dynamic subgraph completed successfully
2020/07/30 11:44:10 [TRACE] vertex "bizfly_instance.test": visit complete
2020/07/30 11:44:10 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2020/07/30 11:44:10 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2020/07/30 11:44:10 [TRACE] dag/walk: visiting "provider.bizfly (close)"
2020/07/30 11:44:10 [TRACE] vertex "meta.count-boundary (EachMode fixup)": evaluating
2020/07/30 11:44:10 [TRACE] vertex "provider.bizfly (close)": starting visit (*terraform.graphNodeCloseProvider)
2020/07/30 11:44:10 [TRACE] [walkPlan] Entering eval tree: meta.count-boundary (EachMode fixup)
2020/07/30 11:44:10 [TRACE] <root>: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2020/07/30 11:44:10 [TRACE] vertex "provider.bizfly (close)": evaluating
2020/07/30 11:44:10 [TRACE] [walkPlan] Entering eval tree: provider.bizfly (close)
2020/07/30 11:44:10 [TRACE] <root>: eval: *terraform.EvalCloseProvider
2020/07/30 11:44:10 [TRACE] GRPCProvider: Close
2020/07/30 11:44:10 [TRACE] [walkPlan] Exiting eval tree: meta.count-boundary (EachMode fixup)
2020/07/30 11:44:10 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2020-07-30T11:44:10.045+0700 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2020-07-30T11:44:10.049+0700 [DEBUG] plugin: plugin process exited: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=58393
2020-07-30T11:44:10.049+0700 [DEBUG] plugin: plugin exited
2020/07/30 11:44:10 [TRACE] [walkPlan] Exiting eval tree: provider.bizfly (close)
2020/07/30 11:44:10 [TRACE] vertex "provider.bizfly (close)": visit complete
2020/07/30 11:44:10 [TRACE] dag/walk: visiting "root"
2020/07/30 11:44:10 [TRACE] vertex "root": starting visit (terraform.graphNodeRoot)
2020/07/30 11:44:10 [TRACE] vertex "root": visit complete
2020/07/30 11:44:10 [DEBUG] command: asking for input: "Do you want to perform these actions?"
2020/07/30 11:44:15 [INFO] backend/local: apply calling Apply
2020/07/30 11:44:15 [INFO] terraform: building graph: GraphTypeApply
2020/07/30 11:44:15 [TRACE] Executing graph transform *terraform.ConfigTransformer
2020/07/30 11:44:15 [TRACE] ConfigTransformer: Starting for path: 
2020/07/30 11:44:15 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
  ------
2020/07/30 11:44:15 [TRACE] Executing graph transform *terraform.DiffTransformer
2020/07/30 11:44:15 [TRACE] DiffTransformer starting
2020/07/30 11:44:15 [TRACE] DiffTransformer: found Create change for bizfly_instance.test 
2020/07/30 11:44:15 [TRACE] DiffTransformer: bizfly_instance.test will be represented by bizfly_instance.test
2020/07/30 11:44:15 [TRACE] DiffTransformer complete
2020/07/30 11:44:15 [TRACE] Completed graph transform *terraform.DiffTransformer with new graph:
  bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
  ------
2020/07/30 11:44:15 [TRACE] Executing graph transform *terraform.OrphanResourceTransformer
2020/07/30 11:44:15 [TRACE] Completed graph transform *terraform.OrphanResourceTransformer (no changes)
2020/07/30 11:44:15 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2020/07/30 11:44:15 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2020/07/30 11:44:15 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2020/07/30 11:44:15 [TRACE] AttachResourceConfigTransformer: attaching to "bizfly_instance.test (prepare state)" (*terraform.NodeApplyableResource) config from main.tf:7,1-34
2020/07/30 11:44:15 [TRACE] AttachResourceConfigTransformer: attaching to "bizfly_instance.test" (*terraform.NodeApplyableResourceInstance) config from main.tf:7,1-34
2020/07/30 11:44:15 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2020/07/30 11:44:15 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/07/30 11:44:15 [DEBUG] Resource state not found for node "bizfly_instance.test", instance bizfly_instance.test
2020/07/30 11:44:15 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/07/30 11:44:15 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2020/07/30 11:44:15 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2020/07/30 11:44:15 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2020/07/30 11:44:15 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2020/07/30 11:44:15 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2020/07/30 11:44:15 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
  bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:44:15 [TRACE] Executing graph transform *terraform.LocalTransformer
2020/07/30 11:44:15 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2020/07/30 11:44:15 [TRACE] Executing graph transform *terraform.OutputTransformer
2020/07/30 11:44:15 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2020/07/30 11:44:15 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2020/07/30 11:44:15 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2020/07/30 11:44:15 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2020/07/30 11:44:15 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2020/07/30 11:44:15 [TRACE] ProviderConfigTransformer: attaching to "provider.bizfly" provider configuration from main.tf:1,1-18
2020/07/30 11:44:15 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:44:15 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2020/07/30 11:44:15 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2020/07/30 11:44:15 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2020/07/30 11:44:15 [TRACE] ProviderTransformer: bizfly_instance.test is provided by provider.bizfly or inherited equivalent
2020/07/30 11:44:15 [TRACE] ProviderTransformer: bizfly_instance.test (prepare state) is provided by provider.bizfly or inherited equivalent
2020/07/30 11:44:15 [TRACE] ProviderTransformer: exact match for provider.bizfly serving bizfly_instance.test
2020/07/30 11:44:15 [DEBUG] ProviderTransformer: "bizfly_instance.test" (*terraform.NodeApplyableResourceInstance) needs provider.bizfly
2020/07/30 11:44:15 [TRACE] ProviderTransformer: exact match for provider.bizfly serving bizfly_instance.test (prepare state)
2020/07/30 11:44:15 [DEBUG] ProviderTransformer: "bizfly_instance.test (prepare state)" (*terraform.NodeApplyableResource) needs provider.bizfly
2020/07/30 11:44:15 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:44:15 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2020/07/30 11:44:15 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2020/07/30 11:44:15 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2020/07/30 11:44:15 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2020/07/30 11:44:15 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:44:15 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2020/07/30 11:44:15 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2020/07/30 11:44:15 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2020/07/30 11:44:15 [TRACE] AttachSchemaTransformer: attaching resource schema to bizfly_instance.test
2020/07/30 11:44:15 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.bizfly
2020/07/30 11:44:15 [TRACE] AttachSchemaTransformer: attaching resource schema to bizfly_instance.test (prepare state)
2020/07/30 11:44:15 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2020/07/30 11:44:15 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/07/30 11:44:15 [DEBUG] ReferenceTransformer: "bizfly_instance.test (prepare state)" references: []
2020/07/30 11:44:15 [DEBUG] ReferenceTransformer: "bizfly_instance.test" references: []
2020/07/30 11:44:15 [DEBUG] ReferenceTransformer: "var.login" references: []
2020/07/30 11:44:15 [DEBUG] ReferenceTransformer: "provider.bizfly" references: []
2020/07/30 11:44:15 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/07/30 11:44:15 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2020/07/30 11:44:15 [TRACE] AttachDependenciesTransformer: bizfly_instance.test depends on []
2020/07/30 11:44:15 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2020/07/30 11:44:15 [TRACE] Executing graph transform *terraform.DestroyEdgeTransformer
2020/07/30 11:44:15 [TRACE] Completed graph transform *terraform.DestroyEdgeTransformer (no changes)
2020/07/30 11:44:15 [TRACE] Executing graph transform *terraform.CBDEdgeTransformer
2020/07/30 11:44:15 [TRACE] Completed graph transform *terraform.CBDEdgeTransformer (no changes)
2020/07/30 11:44:15 [TRACE] Executing graph transform *terraform.PruneUnusedValuesTransformer
2020/07/30 11:44:15 [TRACE] Completed graph transform *terraform.PruneUnusedValuesTransformer (no changes)
2020/07/30 11:44:15 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2020/07/30 11:44:15 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:44:15 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/07/30 11:44:15 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/07/30 11:44:15 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2020/07/30 11:44:15 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
    bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:44:15 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2020/07/30 11:44:15 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer (no changes)
2020/07/30 11:44:15 [TRACE] Executing graph transform *terraform.RootTransformer
2020/07/30 11:44:15 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
  bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
    bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.bizfly (close) - *terraform.graphNodeCloseProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:44:15 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2020/07/30 11:44:15 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
  bizfly_instance.test (prepare state) - *terraform.NodeApplyableResource
    provider.bizfly - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    bizfly_instance.test - *terraform.NodeApplyableResourceInstance
    var.login - *terraform.NodeRootVariable
  provider.bizfly - *terraform.NodeApplyableProvider
  provider.bizfly (close) - *terraform.graphNodeCloseProvider
    bizfly_instance.test - *terraform.NodeApplyableResourceInstance
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.bizfly (close) - *terraform.graphNodeCloseProvider
  var.login - *terraform.NodeRootVariable
  ------
2020/07/30 11:44:15 [DEBUG] Starting graph walk: walkApply
2020/07/30 11:44:15 [TRACE] dag/walk: updating graph
2020/07/30 11:44:15 [TRACE] dag/walk: added new vertex: "provider.bizfly"
2020/07/30 11:44:15 [TRACE] dag/walk: added new vertex: "meta.count-boundary (EachMode fixup)"
2020/07/30 11:44:15 [TRACE] dag/walk: added new vertex: "provider.bizfly (close)"
2020/07/30 11:44:15 [TRACE] dag/walk: added new vertex: "root"
2020/07/30 11:44:15 [TRACE] dag/walk: added new vertex: "bizfly_instance.test (prepare state)"
2020/07/30 11:44:15 [TRACE] dag/walk: added new vertex: "bizfly_instance.test"
2020/07/30 11:44:15 [TRACE] dag/walk: added new vertex: "var.login"
2020/07/30 11:44:15 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (EachMode fixup)"
2020/07/30 11:44:15 [TRACE] dag/walk: added edge: "root" waiting on "provider.bizfly (close)"
2020/07/30 11:44:15 [TRACE] dag/walk: added edge: "bizfly_instance.test" waiting on "bizfly_instance.test (prepare state)"
2020/07/30 11:44:15 [TRACE] dag/walk: added edge: "bizfly_instance.test (prepare state)" waiting on "provider.bizfly"
2020/07/30 11:44:15 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "bizfly_instance.test"
2020/07/30 11:44:15 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "var.login"
2020/07/30 11:44:15 [TRACE] dag/walk: added edge: "provider.bizfly (close)" waiting on "bizfly_instance.test"
2020/07/30 11:44:15 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2020/07/30 11:44:15 [TRACE] dag/walk: dependencies changed for "bizfly_instance.test", sending new deps
2020/07/30 11:44:15 [TRACE] dag/walk: dependencies changed for "bizfly_instance.test (prepare state)", sending new deps
2020/07/30 11:44:15 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (EachMode fixup)", sending new deps
2020/07/30 11:44:15 [TRACE] dag/walk: dependencies changed for "provider.bizfly (close)", sending new deps
2020/07/30 11:44:15 [TRACE] dag/walk: visiting "provider.bizfly"
2020/07/30 11:44:15 [TRACE] dag/walk: visiting "var.login"
2020/07/30 11:44:15 [TRACE] vertex "provider.bizfly": starting visit (*terraform.NodeApplyableProvider)
2020/07/30 11:44:15 [TRACE] vertex "var.login": starting visit (*terraform.NodeRootVariable)
2020/07/30 11:44:15 [TRACE] vertex "provider.bizfly": evaluating
2020/07/30 11:44:15 [TRACE] vertex "var.login": evaluating
2020/07/30 11:44:15 [TRACE] [walkApply] Entering eval tree: provider.bizfly
2020/07/30 11:44:15 [TRACE] [walkApply] Entering eval tree: var.login
2020/07/30 11:44:15 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:44:15 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:44:15 [TRACE] <root>: eval: *terraform.EvalInitProvider
2020/07/30 11:44:15 [TRACE] [walkApply] Exiting eval tree: var.login
2020/07/30 11:44:15 [TRACE] vertex "var.login": visit complete
2020-07-30T11:44:15.402+0700 [INFO]  plugin: configuring client automatic mTLS
2020-07-30T11:44:15.435+0700 [DEBUG] plugin: starting plugin: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly args=[/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly]
2020-07-30T11:44:15.439+0700 [DEBUG] plugin: plugin started: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=58398
2020-07-30T11:44:15.439+0700 [DEBUG] plugin: waiting for RPC address: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly
2020-07-30T11:44:15.456+0700 [DEBUG] plugin.terraform-provider-bizfly: 2020/07/30 11:44:15 --------------
2020-07-30T11:44:15.456+0700 [INFO]  plugin.terraform-provider-bizfly: configuring server automatic mTLS: timestamp=2020-07-30T11:44:15.456+0700
2020-07-30T11:44:15.483+0700 [DEBUG] plugin.terraform-provider-bizfly: plugin address: network=unix address=/var/folders/0r/zdwrk7wn22vd_g32twvblrpc0000gn/T/plugin905874581 timestamp=2020-07-30T11:44:15.482+0700
2020-07-30T11:44:15.483+0700 [DEBUG] plugin: using plugin: version=5
2020/07/30 11:44:15 [TRACE] BuiltinEvalContext: Initialized "bizfly" provider for provider.bizfly
2020-07-30T11:44:15.535+0700 [TRACE] plugin.stdio: waiting for stdio data
2020/07/30 11:44:15 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:44:15 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:44:15 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/07/30 11:44:15 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:44:15 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 11:44:15 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/07/30 11:44:15 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:44:15 [TRACE] <root>: eval: *terraform.EvalConfigProvider
2020/07/30 11:44:15 [TRACE] buildProviderConfig for provider.bizfly: using explicit config only
2020/07/30 11:44:15 [TRACE] GRPCProvider: GetSchema
2020/07/30 11:44:15 [TRACE] GRPCProvider: Configure
2020/07/30 11:44:16 [TRACE] [walkApply] Exiting eval tree: provider.bizfly
2020/07/30 11:44:16 [TRACE] vertex "provider.bizfly": visit complete
2020/07/30 11:44:16 [TRACE] dag/walk: visiting "bizfly_instance.test (prepare state)"
2020/07/30 11:44:16 [TRACE] vertex "bizfly_instance.test (prepare state)": starting visit (*terraform.NodeApplyableResource)
2020/07/30 11:44:16 [TRACE] vertex "bizfly_instance.test (prepare state)": evaluating
2020/07/30 11:44:16 [TRACE] [walkApply] Entering eval tree: bizfly_instance.test (prepare state)
2020/07/30 11:44:16 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/07/30 11:44:16 [TRACE] [walkApply] Exiting eval tree: bizfly_instance.test (prepare state)
2020/07/30 11:44:16 [TRACE] vertex "bizfly_instance.test (prepare state)": visit complete
2020/07/30 11:44:16 [TRACE] dag/walk: visiting "bizfly_instance.test"
2020/07/30 11:44:16 [TRACE] vertex "bizfly_instance.test": starting visit (*terraform.NodeApplyableResourceInstance)
2020/07/30 11:44:16 [TRACE] vertex "bizfly_instance.test": evaluating
2020/07/30 11:44:16 [TRACE] [walkApply] Entering eval tree: bizfly_instance.test
2020/07/30 11:44:16 [TRACE] <root>: eval: *terraform.EvalSequence
2020/07/30 11:44:16 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 11:44:16 [TRACE] <root>: eval: *terraform.EvalReadDiff
2020/07/30 11:44:16 [TRACE] EvalReadDiff: Read Create change from plan for bizfly_instance.test
2020/07/30 11:44:16 [TRACE] <root>: eval: *terraform.EvalIf
2020/07/30 11:44:16 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:44:16 [TRACE] <root>: eval: *terraform.EvalIf
2020/07/30 11:44:16 [TRACE] <root>: eval: *terraform.EvalReadState
2020/07/30 11:44:16 [TRACE] EvalReadState: reading state for bizfly_instance.test
2020/07/30 11:44:16 [TRACE] EvalReadState: no state present for bizfly_instance.test
2020/07/30 11:44:16 [TRACE] <root>: eval: *terraform.EvalReadDiff
2020/07/30 11:44:16 [TRACE] EvalReadDiff: Read Create change from plan for bizfly_instance.test
2020/07/30 11:44:16 [TRACE] <root>: eval: *terraform.EvalDiff
2020/07/30 11:44:16 [TRACE] Re-validating config for "bizfly_instance.test"
2020/07/30 11:44:16 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/07/30 11:44:16 [TRACE] GRPCProvider: PlanResourceChange
2020/07/30 11:44:16 [TRACE] <root>: eval: *terraform.EvalCheckPlannedChange
2020/07/30 11:44:16 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2020/07/30 11:44:16 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/07/30 11:44:16 [TRACE] <root>: eval: *terraform.EvalReadState
2020/07/30 11:44:16 [TRACE] EvalReadState: reading state for bizfly_instance.test
2020/07/30 11:44:16 [TRACE] EvalReadState: no state present for bizfly_instance.test
2020/07/30 11:44:16 [TRACE] <root>: eval: *terraform.EvalReduceDiff
2020/07/30 11:44:16 [TRACE] <root>: eval: *terraform.EvalIf
2020/07/30 11:44:16 [TRACE] <root>: eval: terraform.EvalNoop
2020/07/30 11:44:16 [TRACE] <root>: eval: *terraform.EvalApplyPre
2020/07/30 11:44:16 [TRACE] <root>: eval: *terraform.EvalApply
2020/07/30 11:44:16 [DEBUG] bizfly_instance.test: applying the planned Create change
2020/07/30 11:44:16 [TRACE] GRPCProvider: ApplyResourceChange
2020-07-30T11:44:16.888+0700 [DEBUG] plugin.terraform-provider-bizfly: 2020/07/30 11:44:16 []
2020-07-30T11:44:16.888+0700 [DEBUG] plugin.terraform-provider-bizfly: 2020/07/30 11:44:16 --------------------------
2020-07-30T11:44:16.888+0700 [DEBUG] plugin.terraform-provider-bizfly: 2020/07/30 11:44:16 map[string]interface {}
2020-07-30T11:44:16.889+0700 [TRACE] plugin.stdio: received data: channel=STDOUT len=411
2020-07-30T11:44:16.889+0700 [TRACE] plugin.stdio: waiting for stdio data
2020-07-30T11:44:16.889+0700 [TRACE] plugin.stdio: received data: channel=STDOUT len=24
2020-07-30T11:44:16.889+0700 [TRACE] plugin.stdio: waiting for stdio data
2020-07-30T11:44:16.890+0700 [DEBUG] plugin.terraform-provider-bizfly: panic: interface conversion: interface {} is nil, not string
2020-07-30T11:44:16.890+0700 [DEBUG] plugin.terraform-provider-bizfly: 
2020-07-30T11:44:16.890+0700 [DEBUG] plugin.terraform-provider-bizfly: goroutine 28 [running]:
2020-07-30T11:44:16.890+0700 [DEBUG] plugin.terraform-provider-bizfly: terraform-provider-bizfly/provider.resouceInstanceCreate(0xc00013d2d0, 0x1aebd80, 0xc000419a40, 0x0, 0x0)
2020-07-30T11:44:16.890+0700 [DEBUG] plugin.terraform-provider-bizfly: 	/Users/hung/go/src/terraform-provider-bizfly/provider/resource_instance.go:163 +0x827
2020-07-30T11:44:16.890+0700 [DEBUG] plugin.terraform-provider-bizfly: github.com/hashicorp/terraform-plugin-sdk/helper/schema.(*Resource).Apply(0xc00007e2d0, 0xc00017e730, 0xc0001ccaa0, 0x1aebd80, 0xc000419a40, 0x1a9ee01, 0xc0004131a8, 0xc0005af470)
2020-07-30T11:44:16.890+0700 [DEBUG] plugin.terraform-provider-bizfly: 	/Users/hung/go/pkg/mod/github.com/hashicorp/terraform-plugin-sdk@v1.15.0/helper/schema/resource.go:310 +0x365
2020-07-30T11:44:16.890+0700 [DEBUG] plugin.terraform-provider-bizfly: github.com/hashicorp/terraform-plugin-sdk/helper/schema.(*Provider).Apply(0xc000382100, 0xc0006c7a10, 0xc00017e730, 0xc0001ccaa0, 0xc0005b4508, 0xc000010708, 0x1aa0aa0)
2020-07-30T11:44:16.890+0700 [DEBUG] plugin.terraform-provider-bizfly: 	/Users/hung/go/pkg/mod/github.com/hashicorp/terraform-plugin-sdk@v1.15.0/helper/schema/provider.go:294 +0x99
2020-07-30T11:44:16.890+0700 [DEBUG] plugin.terraform-provider-bizfly: github.com/hashicorp/terraform-plugin-sdk/internal/helper/plugin.(*GRPCProviderServer).ApplyResourceChange(0xc000010030, 0x1e84020, 0xc0005a3590, 0xc00013cb60, 0xc000010030, 0xc0005a3590, 0xc00006eb78)
2020-07-30T11:44:16.890+0700 [DEBUG] plugin.terraform-provider-bizfly: 	/Users/hung/go/pkg/mod/github.com/hashicorp/terraform-plugin-sdk@v1.15.0/internal/helper/plugin/grpc_provider.go:885 +0x8b4
2020-07-30T11:44:16.890+0700 [DEBUG] plugin.terraform-provider-bizfly: github.com/hashicorp/terraform-plugin-sdk/internal/tfplugin5._Provider_ApplyResourceChange_Handler(0x1bb1a20, 0xc000010030, 0x1e84020, 0xc0005a3590, 0xc000381740, 0x0, 0x1e84020, 0xc0005a3590, 0xc0005aa1e0, 0x1ce)
2020-07-30T11:44:16.890+0700 [DEBUG] plugin.terraform-provider-bizfly: 	/Users/hung/go/pkg/mod/github.com/hashicorp/terraform-plugin-sdk@v1.15.0/internal/tfplugin5/tfplugin5.pb.go:3305 +0x217
2020-07-30T11:44:16.890+0700 [DEBUG] plugin.terraform-provider-bizfly: google.golang.org/grpc.(*Server).processUnaryRPC(0xc000702600, 0x1e8e8c0, 0xc000703500, 0xc00013aa00, 0xc000652510, 0x2595940, 0x0, 0x0, 0x0)
2020-07-30T11:44:16.890+0700 [DEBUG] plugin.terraform-provider-bizfly: 	/Users/hung/go/pkg/mod/google.golang.org/grpc@v1.27.1/server.go:1024 +0x501
2020-07-30T11:44:16.890+0700 [DEBUG] plugin.terraform-provider-bizfly: google.golang.org/grpc.(*Server).handleStream(0xc000702600, 0x1e8e8c0, 0xc000703500, 0xc00013aa00, 0x0)
2020-07-30T11:44:16.890+0700 [DEBUG] plugin.terraform-provider-bizfly: 	/Users/hung/go/pkg/mod/google.golang.org/grpc@v1.27.1/server.go:1313 +0xd3d
2020-07-30T11:44:16.890+0700 [DEBUG] plugin.terraform-provider-bizfly: google.golang.org/grpc.(*Server).serveStreams.func1.1(0xc00051c200, 0xc000702600, 0x1e8e8c0, 0xc000703500, 0xc00013aa00)
2020-07-30T11:44:16.890+0700 [DEBUG] plugin.terraform-provider-bizfly: 	/Users/hung/go/pkg/mod/google.golang.org/grpc@v1.27.1/server.go:722 +0xa1
2020-07-30T11:44:16.890+0700 [DEBUG] plugin.terraform-provider-bizfly: created by google.golang.org/grpc.(*Server).serveStreams.func1
2020-07-30T11:44:16.890+0700 [DEBUG] plugin.terraform-provider-bizfly: 	/Users/hung/go/pkg/mod/google.golang.org/grpc@v1.27.1/server.go:720 +0xa1
2020-07-30T11:44:16.896+0700 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2020/07/30 11:44:16 [DEBUG] bizfly_instance.test: apply errored, but we're indicating that via the Error pointer rather than returning it: rpc error: code = Unavailable desc = transport is closing
2020/07/30 11:44:16 [TRACE] <root>: eval: *terraform.EvalMaybeTainted
2020/07/30 11:44:16 [TRACE] EvalMaybeTainted: bizfly_instance.test encountered an error during creation, so it is now marked as tainted
2020/07/30 11:44:16 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/07/30 11:44:16 [TRACE] EvalWriteState: removing state object for bizfly_instance.test
2020/07/30 11:44:16 [TRACE] <root>: eval: *terraform.EvalApplyProvisioners
2020/07/30 11:44:16 [TRACE] EvalApplyProvisioners: bizfly_instance.test has no state, so skipping provisioners
2020/07/30 11:44:16 [TRACE] <root>: eval: *terraform.EvalMaybeTainted
2020/07/30 11:44:16 [TRACE] EvalMaybeTainted: bizfly_instance.test encountered an error during creation, so it is now marked as tainted
2020/07/30 11:44:16 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/07/30 11:44:16 [TRACE] EvalWriteState: removing state object for bizfly_instance.test
2020/07/30 11:44:16 [TRACE] <root>: eval: *terraform.EvalIf
2020/07/30 11:44:16 [TRACE] <root>: eval: *terraform.EvalIf
2020/07/30 11:44:16 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/07/30 11:44:16 [TRACE] <root>: eval: *terraform.EvalApplyPost
2020/07/30 11:44:16 [ERROR] <root>: eval: *terraform.EvalApplyPost, err: rpc error: code = Unavailable desc = transport is closing
2020/07/30 11:44:16 [ERROR] <root>: eval: *terraform.EvalSequence, err: rpc error: code = Unavailable desc = transport is closing
2020/07/30 11:44:16 [TRACE] [walkApply] Exiting eval tree: bizfly_instance.test
2020/07/30 11:44:16 [TRACE] vertex "bizfly_instance.test": visit complete
2020/07/30 11:44:16 [TRACE] dag/walk: upstream of "meta.count-boundary (EachMode fixup)" errored, so skipping
2020/07/30 11:44:16 [TRACE] dag/walk: upstream of "provider.bizfly (close)" errored, so skipping
2020/07/30 11:44:16 [TRACE] dag/walk: upstream of "root" errored, so skipping
2020-07-30T11:44:16.896+0700 [DEBUG] plugin: plugin process exited: path=/Users/hung/go/src/terraform-provider-bizfly/terraform-provider-bizfly pid=58398 error="exit status 2"
2020/07/30 11:44:16 [TRACE] statemgr.Filesystem: not making a backup, because the new snapshot is identical to the old
2020/07/30 11:44:16 [TRACE] statemgr.Filesystem: no state changes since last snapshot
2020/07/30 11:44:16 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2020/07/30 11:44:16 [TRACE] statemgr.Filesystem: removing lock metadata file .terraform.tfstate.lock.info
2020/07/30 11:44:16 [TRACE] statemgr.Filesystem: unlocking terraform.tfstate using fcntl flock
2020-07-30T11:44:16.904+0700 [DEBUG] plugin: plugin exited
